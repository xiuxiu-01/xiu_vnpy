# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.10
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_ama', [dirname(__file__)])
        except ImportError:
            import _ama
            return _ama
        if fp is not None:
            try:
                _mod = imp.load_module('_ama', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _ama = swig_import_helper()
    del swig_import_helper
else:
    import _ama
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


try:
    import weakref
    weakref_proxy = weakref.proxy
except:
    weakref_proxy = lambda x: x


ID_BT_INDEX = _ama.ID_BT_INDEX
ID_BT_SHARES_A = _ama.ID_BT_SHARES_A
ID_BT_SHARES_B = _ama.ID_BT_SHARES_B
ID_BT_SHARES_G = _ama.ID_BT_SHARES_G
ID_BT_SHARES_KCB = _ama.ID_BT_SHARES_KCB
ID_BT_SHARES_LIST = _ama.ID_BT_SHARES_LIST
ID_BT_SHARES_PRE = _ama.ID_BT_SHARES_PRE
ID_BT_SHARES_PZ_ZB = _ama.ID_BT_SHARES_PZ_ZB
ID_BT_SHARES_PZ_CYB = _ama.ID_BT_SHARES_PZ_CYB
ID_BT_SHARES_PZ_KCB = _ama.ID_BT_SHARES_PZ_KCB
ID_BT_SHARES_OTE = _ama.ID_BT_SHARES_OTE
ID_BT_FUND_ET = _ama.ID_BT_FUND_ET
ID_BT_FUND_LO = _ama.ID_BT_FUND_LO
ID_BT_FUND_GR = _ama.ID_BT_FUND_GR
ID_BT_FUND_OPE = _ama.ID_BT_FUND_OPE
ID_BT_FUND_CLOS = _ama.ID_BT_FUND_CLOS
ID_BT_FUND_REIT = _ama.ID_BT_FUND_REIT
ID_BT_FUND_OT = _ama.ID_BT_FUND_OT
ID_BT_BOND_CO = _ama.ID_BT_BOND_CO
ID_BT_BOND_N = _ama.ID_BT_BOND_N
ID_BT_BOND_COM = _ama.ID_BT_BOND_COM
ID_BT_BOND_EN = _ama.ID_BT_BOND_EN
ID_BT_BOND_P = _ama.ID_BT_BOND_P
ID_BT_BOND_PP_E = _ama.ID_BT_BOND_PP_E
ID_BT_BOND_COM_S = _ama.ID_BT_BOND_COM_S
ID_BT_BOND_S = _ama.ID_BT_BOND_S
ID_BT_BOND_OT = _ama.ID_BT_BOND_OT
ID_BT_REPO_ZY = _ama.ID_BT_REPO_ZY
ID_BT_REPO_BOND_MD = _ama.ID_BT_REPO_BOND_MD
ID_BT_REPO_B = _ama.ID_BT_REPO_B
ID_BT_OPTION_C_G = _ama.ID_BT_OPTION_C_G
ID_BT_OPTION_P_G = _ama.ID_BT_OPTION_P_G
ID_BT_OPTION_C_ID = _ama.ID_BT_OPTION_C_ID
ID_BT_OPTION_P_IDX = _ama.ID_BT_OPTION_P_IDX
ID_BT_OPTION_C_CMD = _ama.ID_BT_OPTION_C_CMD
ID_BT_OPTION_P_CM = _ama.ID_BT_OPTION_P_CM
ID_BT_OPTION_S = _ama.ID_BT_OPTION_S
ID_BT_OPTION_ID = _ama.ID_BT_OPTION_ID
ID_BT_OPTION_SHARE = _ama.ID_BT_OPTION_SHARE
ID_BT_OPTION_OT = _ama.ID_BT_OPTION_OT
ID_BT_Q = _ama.ID_BT_Q
ID_BT_X = _ama.ID_BT_X
ID_BT_BB_G = _ama.ID_BT_BB_G
ID_BT_PLAN_CA = _ama.ID_BT_PLAN_CA
ID_BT_AB = _ama.ID_BT_AB
ID_BT_C = _ama.ID_BT_C
class MarketType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MarketType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MarketType, name)
    __repr__ = _swig_repr
    kNone = _ama.MarketType_kNone
    kNEEQ = _ama.MarketType_kNEEQ
    kSHFE = _ama.MarketType_kSHFE
    kCFFEX = _ama.MarketType_kCFFEX
    kDCE = _ama.MarketType_kDCE
    kCZCE = _ama.MarketType_kCZCE
    kINE = _ama.MarketType_kINE
    kSSE = _ama.MarketType_kSSE
    kSZSE = _ama.MarketType_kSZSE
    kHKEx = _ama.MarketType_kHKEx
    kMax = _ama.MarketType_kMax
    def __init__(self): 
        this = _ama.new_MarketType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MarketType
    __del__ = lambda self : None;
MarketType_swigregister = _ama.MarketType_swigregister
MarketType_swigregister(MarketType)

class OrderBookType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, OrderBookType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, OrderBookType, name)
    __repr__ = _swig_repr
    kNone = _ama.OrderBookType_kNone
    kLocalOrderBook = _ama.OrderBookType_kLocalOrderBook
    kServerOrderBook = _ama.OrderBookType_kServerOrderBook
    def __init__(self): 
        this = _ama.new_OrderBookType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_OrderBookType
    __del__ = lambda self : None;
OrderBookType_swigregister = _ama.OrderBookType_swigregister
OrderBookType_swigregister(OrderBookType)

class VarietyCategory(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, VarietyCategory, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, VarietyCategory, name)
    __repr__ = _swig_repr
    kNone = _ama.VarietyCategory_kNone
    kStock = _ama.VarietyCategory_kStock
    kFund = _ama.VarietyCategory_kFund
    kBond = _ama.VarietyCategory_kBond
    kOption = _ama.VarietyCategory_kOption
    kIndex = _ama.VarietyCategory_kIndex
    kHKT = _ama.VarietyCategory_kHKT
    kFutureOption = _ama.VarietyCategory_kFutureOption
    kOthers = _ama.VarietyCategory_kOthers
    def __init__(self): 
        this = _ama.new_VarietyCategory()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_VarietyCategory
    __del__ = lambda self : None;
VarietyCategory_swigregister = _ama.VarietyCategory_swigregister
VarietyCategory_swigregister(VarietyCategory)

class LogLevel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LogLevel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LogLevel, name)
    __repr__ = _swig_repr
    kTrace = _ama.LogLevel_kTrace
    kDebug = _ama.LogLevel_kDebug
    kInfo = _ama.LogLevel_kInfo
    kWarn = _ama.LogLevel_kWarn
    kError = _ama.LogLevel_kError
    kFatal = _ama.LogLevel_kFatal
    def __init__(self): 
        this = _ama.new_LogLevel()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_LogLevel
    __del__ = lambda self : None;
LogLevel_swigregister = _ama.LogLevel_swigregister
LogLevel_swigregister(LogLevel)

class ErrorCode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ErrorCode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ErrorCode, name)
    __repr__ = _swig_repr
    kFailure = _ama.ErrorCode_kFailure
    kInited = _ama.ErrorCode_kInited
    kUnInited = _ama.ErrorCode_kUnInited
    kNullSpi = _ama.ErrorCode_kNullSpi
    kParamIllegal = _ama.ErrorCode_kParamIllegal
    kSuccess = _ama.ErrorCode_kSuccess
    def __init__(self): 
        this = _ama.new_ErrorCode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ErrorCode
    __del__ = lambda self : None;
ErrorCode_swigregister = _ama.ErrorCode_swigregister
ErrorCode_swigregister(ErrorCode)

class ConstField(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstField, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ConstField, name)
    __repr__ = _swig_repr
    kIPMaxLen = _ama.ConstField_kIPMaxLen
    kUsernameLen = _ama.ConstField_kUsernameLen
    kUMSItemLen = _ama.ConstField_kUMSItemLen
    kChannelExternCfgLen = _ama.ConstField_kChannelExternCfgLen
    kPasswordLen = _ama.ConstField_kPasswordLen
    kSecurityCodeLen = _ama.ConstField_kSecurityCodeLen
    kFutureSecurityCodeLen = _ama.ConstField_kFutureSecurityCodeLen
    kSecurityNameLen = _ama.ConstField_kSecurityNameLen
    kPositionLevelLen = _ama.ConstField_kPositionLevelLen
    kPathLen = _ama.ConstField_kPathLen
    kConfirmIdLen = _ama.ConstField_kConfirmIdLen
    kContactorLen = _ama.ConstField_kContactorLen
    kContactInfoLen = _ama.ConstField_kContactInfoLen
    kTradingPhaseCodeLen = _ama.ConstField_kTradingPhaseCodeLen
    kContractIDLen = _ama.ConstField_kContractIDLen
    kContractSymbolLen = _ama.ConstField_kContractSymbolLen
    kUnderlyingTypeLen = _ama.ConstField_kUnderlyingTypeLen
    kSecurityStatusFlagLen = _ama.ConstField_kSecurityStatusFlagLen
    kExChangeInstIDLen = _ama.ConstField_kExChangeInstIDLen
    kMaxMarketType = _ama.ConstField_kMaxMarketType
    kTradingStatusLen = _ama.ConstField_kTradingStatusLen
    kSecurityStatusLen = _ama.ConstField_kSecurityStatusLen
    kMDStreamIDMaxLen = _ama.ConstField_kMDStreamIDMaxLen
    kTypesLen = _ama.ConstField_kTypesLen
    kDateLen = _ama.ConstField_kDateLen
    kTimeLen = _ama.ConstField_kTimeLen
    kSecurityAbbreviationLen = _ama.ConstField_kSecurityAbbreviationLen
    kSymbolLen = _ama.ConstField_kSymbolLen
    kMaxTypesLen = _ama.ConstField_kMaxTypesLen
    kMDStreamIDLen = _ama.ConstField_kMDStreamIDLen
    kUnitName = _ama.ConstField_kUnitName
    kSubTradingPhaseLen = _ama.ConstField_kSubTradingPhaseLen
    kQuoteIDLen = _ama.ConstField_kQuoteIDLen
    kMemberIDLen = _ama.ConstField_kMemberIDLen
    kInvestorTypeLen = _ama.ConstField_kInvestorTypeLen
    kInvestorIDLen = _ama.ConstField_kInvestorIDLen
    kInvestorNameLen = _ama.ConstField_kInvestorNameLen
    kTraderCodeLen = _ama.ConstField_kTraderCodeLen
    kSecondaryOrderIDLen = _ama.ConstField_kSecondaryOrderIDLen
    kCodeTableSecurityStatusMaxLen = _ama.ConstField_kCodeTableSecurityStatusMaxLen
    KSecurityMarketLen = _ama.ConstField_KSecurityMarketLen
    kSymbolETFLen = _ama.ConstField_kSymbolETFLen
    kManagmentETFLen = _ama.ConstField_kManagmentETFLen
    KUnderlyingSecurityIDSource = _ama.ConstField_KUnderlyingSecurityIDSource
    KUnderlyingSecurityID = _ama.ConstField_KUnderlyingSecurityID
    KReserved = _ama.ConstField_KReserved
    AllCashAmount = _ama.ConstField_AllCashAmount
    AllCashAremiumRate = _ama.ConstField_AllCashAremiumRate
    AllCashDiscountRate = _ama.ConstField_AllCashDiscountRate
    DefaultMaxOBSubNum = _ama.ConstField_DefaultMaxOBSubNum
    DefaultMaxOBOrderQueueSize = _ama.ConstField_DefaultMaxOBOrderQueueSize
    DefaultMaxOBEntrySize = _ama.ConstField_DefaultMaxOBEntrySize
    DefaultMaxOBDeliverIntervalMs = _ama.ConstField_DefaultMaxOBDeliverIntervalMs
    def __init__(self): 
        this = _ama.new_ConstField()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ConstField
    __del__ = lambda self : None;
ConstField_swigregister = _ama.ConstField_swigregister
ConstField_swigregister(ConstField)

class HighAvailableMode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, HighAvailableMode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, HighAvailableMode, name)
    __repr__ = _swig_repr
    kMasterSlaveA = _ama.HighAvailableMode_kMasterSlaveA
    kMasterSlaveB = _ama.HighAvailableMode_kMasterSlaveB
    kRegularDataFilter = _ama.HighAvailableMode_kRegularDataFilter
    def __init__(self): 
        this = _ama.new_HighAvailableMode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_HighAvailableMode
    __del__ = lambda self : None;
HighAvailableMode_swigregister = _ama.HighAvailableMode_swigregister
HighAvailableMode_swigregister(HighAvailableMode)

class ChannelMode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ChannelMode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ChannelMode, name)
    __repr__ = _swig_repr
    kRDMA = _ama.ChannelMode_kRDMA
    kEXA = _ama.ChannelMode_kEXA
    kAMI = _ama.ChannelMode_kAMI
    kTCP = _ama.ChannelMode_kTCP
    kPCAP = _ama.ChannelMode_kPCAP
    kMDDP = _ama.ChannelMode_kMDDP
    def __init__(self): 
        this = _ama.new_ChannelMode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ChannelMode
    __del__ = lambda self : None;
ChannelMode_swigregister = _ama.ChannelMode_swigregister
ChannelMode_swigregister(ChannelMode)

class SubscribeType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeType, name)
    __repr__ = _swig_repr
    kSet = _ama.SubscribeType_kSet
    kAdd = _ama.SubscribeType_kAdd
    kDel = _ama.SubscribeType_kDel
    kCancelAll = _ama.SubscribeType_kCancelAll
    def __init__(self): 
        this = _ama.new_SubscribeType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeType
    __del__ = lambda self : None;
SubscribeType_swigregister = _ama.SubscribeType_swigregister
SubscribeType_swigregister(SubscribeType)

class SubscribeDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeDataType_kNone
    kSnapshot = _ama.SubscribeDataType_kSnapshot
    kTickExecution = _ama.SubscribeDataType_kTickExecution
    kTickOrder = _ama.SubscribeDataType_kTickOrder
    kOrderQueue = _ama.SubscribeDataType_kOrderQueue
    kIndexSnapshot = _ama.SubscribeDataType_kIndexSnapshot
    kFutureSnapshot = _ama.SubscribeDataType_kFutureSnapshot
    kOptionSnapshot = _ama.SubscribeDataType_kOptionSnapshot
    kHKTSnapshot = _ama.SubscribeDataType_kHKTSnapshot
    kAfterHourFixedPriceSnapshot = _ama.SubscribeDataType_kAfterHourFixedPriceSnapshot
    kAfterHourFixedPriceTickExecution = _ama.SubscribeDataType_kAfterHourFixedPriceTickExecution
    kCSIIndexSnapshot = _ama.SubscribeDataType_kCSIIndexSnapshot
    kNEEQSnapshot = _ama.SubscribeDataType_kNEEQSnapshot
    def __init__(self): 
        this = _ama.new_SubscribeDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeDataType
    __del__ = lambda self : None;
SubscribeDataType_swigregister = _ama.SubscribeDataType_swigregister
SubscribeDataType_swigregister(SubscribeDataType)

class SubscribeSecuDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeSecuDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeSecuDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeSecuDataType_kNone
    kSnapshot = _ama.SubscribeSecuDataType_kSnapshot
    kTickExecution = _ama.SubscribeSecuDataType_kTickExecution
    kTickOrder = _ama.SubscribeSecuDataType_kTickOrder
    kOrderQueue = _ama.SubscribeSecuDataType_kOrderQueue
    def __init__(self): 
        this = _ama.new_SubscribeSecuDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeSecuDataType
    __del__ = lambda self : None;
SubscribeSecuDataType_swigregister = _ama.SubscribeSecuDataType_swigregister
SubscribeSecuDataType_swigregister(SubscribeSecuDataType)

class SubscribeCategoryType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeCategoryType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeCategoryType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeCategoryType_kNone
    kStock = _ama.SubscribeCategoryType_kStock
    kFund = _ama.SubscribeCategoryType_kFund
    kBond = _ama.SubscribeCategoryType_kBond
    kIndex = _ama.SubscribeCategoryType_kIndex
    kHKT = _ama.SubscribeCategoryType_kHKT
    kOption = _ama.SubscribeCategoryType_kOption
    kFutureOption = _ama.SubscribeCategoryType_kFutureOption
    kOthers = _ama.SubscribeCategoryType_kOthers
    def __init__(self): 
        this = _ama.new_SubscribeCategoryType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeCategoryType
    __del__ = lambda self : None;
SubscribeCategoryType_swigregister = _ama.SubscribeCategoryType_swigregister
SubscribeCategoryType_swigregister(SubscribeCategoryType)

class SubscribeOrderBookDataType(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeOrderBookDataType, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeOrderBookDataType, name)
    __repr__ = _swig_repr
    kNone = _ama.SubscribeOrderBookDataType_kNone
    kOrderBook = _ama.SubscribeOrderBookDataType_kOrderBook
    kOrderBookSnapshot = _ama.SubscribeOrderBookDataType_kOrderBookSnapshot
    def __init__(self): 
        this = _ama.new_SubscribeOrderBookDataType()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeOrderBookDataType
    __del__ = lambda self : None;
SubscribeOrderBookDataType_swigregister = _ama.SubscribeOrderBookDataType_swigregister
SubscribeOrderBookDataType_swigregister(SubscribeOrderBookDataType)

class EventLevel(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EventLevel, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EventLevel, name)
    __repr__ = _swig_repr
    kInfo = _ama.EventLevel_kInfo
    kWarn = _ama.EventLevel_kWarn
    kError = _ama.EventLevel_kError
    def __init__(self): 
        this = _ama.new_EventLevel()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_EventLevel
    __del__ = lambda self : None;
EventLevel_swigregister = _ama.EventLevel_swigregister
EventLevel_swigregister(EventLevel)

class EventCode(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, EventCode, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, EventCode, name)
    __repr__ = _swig_repr
    kUMSConnectSuccess = _ama.EventCode_kUMSConnectSuccess
    kUMSConnectFailed = _ama.EventCode_kUMSConnectFailed
    kUMSLogonSuccess = _ama.EventCode_kUMSLogonSuccess
    kUMSLogonFailed = _ama.EventCode_kUMSLogonFailed
    kUMSHeartbeatTimeout = _ama.EventCode_kUMSHeartbeatTimeout
    kChannelRDMAInitSuccess = _ama.EventCode_kChannelRDMAInitSuccess
    kChannelRDMAInitFailed = _ama.EventCode_kChannelRDMAInitFailed
    kChannelEXAInitSuccess = _ama.EventCode_kChannelEXAInitSuccess
    kChannelEXAInitFailed = _ama.EventCode_kChannelEXAInitFailed
    kChannelPCAPInitSuccess = _ama.EventCode_kChannelPCAPInitSuccess
    kChannelPCAPInitFailed = _ama.EventCode_kChannelPCAPInitFailed
    kCTPDASStreamStart = _ama.EventCode_kCTPDASStreamStart
    kCTPDASStreamFinished = _ama.EventCode_kCTPDASStreamFinished
    kSzseBinaryDASStreamStart = _ama.EventCode_kSzseBinaryDASStreamStart
    kSzseBinaryDASStreamFinished = _ama.EventCode_kSzseBinaryDASStreamFinished
    kSseLDDSDASStreamStart = _ama.EventCode_kSseLDDSDASStreamStart
    kSseLDDSDASStreamFinished = _ama.EventCode_kSseLDDSDASStreamFinished
    kChannelAMIInitSuccess = _ama.EventCode_kChannelAMIInitSuccess
    kChannelAMIInitFailed = _ama.EventCode_kChannelAMIInitFailed
    kChannelTCPInitSuccess = _ama.EventCode_kChannelTCPInitSuccess
    kChannelTCPInitFailed = _ama.EventCode_kChannelTCPInitFailed
    kChannelTCPConnectSuccess = _ama.EventCode_kChannelTCPConnectSuccess
    kChannelTCPConnectFailed = _ama.EventCode_kChannelTCPConnectFailed
    kChannelTCPLogonSuccess = _ama.EventCode_kChannelTCPLogonSuccess
    kChannelTCPLogonFailed = _ama.EventCode_kChannelTCPLogonFailed
    kChannelTCPSessionClosed = _ama.EventCode_kChannelTCPSessionClosed
    kChannelTCPHeartbeatTimeout = _ama.EventCode_kChannelTCPHeartbeatTimeout
    kChannelTCPMarketDataDegrade = _ama.EventCode_kChannelTCPMarketDataDegrade
    kChannelTCPMarketDataUpgrade = _ama.EventCode_kChannelTCPMarketDataUpgrade
    kSourceMasterSlaveChanged = _ama.EventCode_kSourceMasterSlaveChanged
    kSFSEngineInitSuccess = _ama.EventCode_kSFSEngineInitSuccess
    kSzseOrderBookRejoinSuccess = _ama.EventCode_kSzseOrderBookRejoinSuccess
    kSzseOrderBookRejoinFailed = _ama.EventCode_kSzseOrderBookRejoinFailed
    kSseOrderBookRejoinSuccess = _ama.EventCode_kSseOrderBookRejoinSuccess
    kSseOrderBookRejoinFailed = _ama.EventCode_kSseOrderBookRejoinFailed
    kOrderBookRejonConnectFailed = _ama.EventCode_kOrderBookRejonConnectFailed
    kIncompleteData = _ama.EventCode_kIncompleteData
    kOrderBookLogonSuccess = _ama.EventCode_kOrderBookLogonSuccess
    kOrderBookLogonFailed = _ama.EventCode_kOrderBookLogonFailed
    def __init__(self): 
        this = _ama.new_EventCode()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_EventCode
    __del__ = lambda self : None;
EventCode_swigregister = _ama.EventCode_swigregister
EventCode_swigregister(EventCode)

class UMSItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, UMSItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, UMSItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["local_ip"] = _ama.UMSItem_local_ip_set
    __swig_getmethods__["local_ip"] = _ama.UMSItem_local_ip_get
    if _newclass:local_ip = _swig_property(_ama.UMSItem_local_ip_get, _ama.UMSItem_local_ip_set)
    __swig_setmethods__["server_ip"] = _ama.UMSItem_server_ip_set
    __swig_getmethods__["server_ip"] = _ama.UMSItem_server_ip_get
    if _newclass:server_ip = _swig_property(_ama.UMSItem_server_ip_get, _ama.UMSItem_server_ip_set)
    __swig_setmethods__["server_port"] = _ama.UMSItem_server_port_set
    __swig_getmethods__["server_port"] = _ama.UMSItem_server_port_get
    if _newclass:server_port = _swig_property(_ama.UMSItem_server_port_get, _ama.UMSItem_server_port_set)
    def __init__(self): 
        this = _ama.new_UMSItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_UMSItem
    __del__ = lambda self : None;
UMSItem_swigregister = _ama.UMSItem_swigregister
UMSItem_swigregister(UMSItem)

class Cfg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Cfg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Cfg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["channel_mode"] = _ama.Cfg_channel_mode_set
    __swig_getmethods__["channel_mode"] = _ama.Cfg_channel_mode_get
    if _newclass:channel_mode = _swig_property(_ama.Cfg_channel_mode_get, _ama.Cfg_channel_mode_set)
    __swig_setmethods__["ha_mode"] = _ama.Cfg_ha_mode_set
    __swig_getmethods__["ha_mode"] = _ama.Cfg_ha_mode_get
    if _newclass:ha_mode = _swig_property(_ama.Cfg_ha_mode_get, _ama.Cfg_ha_mode_set)
    __swig_setmethods__["min_log_level"] = _ama.Cfg_min_log_level_set
    __swig_getmethods__["min_log_level"] = _ama.Cfg_min_log_level_get
    if _newclass:min_log_level = _swig_property(_ama.Cfg_min_log_level_get, _ama.Cfg_min_log_level_set)
    __swig_setmethods__["is_output_mon_data"] = _ama.Cfg_is_output_mon_data_set
    __swig_getmethods__["is_output_mon_data"] = _ama.Cfg_is_output_mon_data_get
    if _newclass:is_output_mon_data = _swig_property(_ama.Cfg_is_output_mon_data_get, _ama.Cfg_is_output_mon_data_set)
    __swig_setmethods__["is_thread_safe"] = _ama.Cfg_is_thread_safe_set
    __swig_getmethods__["is_thread_safe"] = _ama.Cfg_is_thread_safe_get
    if _newclass:is_thread_safe = _swig_property(_ama.Cfg_is_thread_safe_get, _ama.Cfg_is_thread_safe_set)
    __swig_setmethods__["keep_order"] = _ama.Cfg_keep_order_set
    __swig_getmethods__["keep_order"] = _ama.Cfg_keep_order_get
    if _newclass:keep_order = _swig_property(_ama.Cfg_keep_order_get, _ama.Cfg_keep_order_set)
    __swig_setmethods__["keep_order_timeout_ms"] = _ama.Cfg_keep_order_timeout_ms_set
    __swig_getmethods__["keep_order_timeout_ms"] = _ama.Cfg_keep_order_timeout_ms_get
    if _newclass:keep_order_timeout_ms = _swig_property(_ama.Cfg_keep_order_timeout_ms_get, _ama.Cfg_keep_order_timeout_ms_set)
    __swig_setmethods__["is_subscribe_full"] = _ama.Cfg_is_subscribe_full_set
    __swig_getmethods__["is_subscribe_full"] = _ama.Cfg_is_subscribe_full_get
    if _newclass:is_subscribe_full = _swig_property(_ama.Cfg_is_subscribe_full_get, _ama.Cfg_is_subscribe_full_set)
    __swig_setmethods__["ums_servers"] = _ama.Cfg_ums_servers_set
    __swig_getmethods__["ums_servers"] = _ama.Cfg_ums_servers_get
    if _newclass:ums_servers = _swig_property(_ama.Cfg_ums_servers_get, _ama.Cfg_ums_servers_set)
    __swig_setmethods__["ums_server_cnt"] = _ama.Cfg_ums_server_cnt_set
    __swig_getmethods__["ums_server_cnt"] = _ama.Cfg_ums_server_cnt_get
    if _newclass:ums_server_cnt = _swig_property(_ama.Cfg_ums_server_cnt_get, _ama.Cfg_ums_server_cnt_set)
    __swig_setmethods__["username"] = _ama.Cfg_username_set
    __swig_getmethods__["username"] = _ama.Cfg_username_get
    if _newclass:username = _swig_property(_ama.Cfg_username_get, _ama.Cfg_username_set)
    __swig_setmethods__["password"] = _ama.Cfg_password_set
    __swig_getmethods__["password"] = _ama.Cfg_password_get
    if _newclass:password = _swig_property(_ama.Cfg_password_get, _ama.Cfg_password_set)
    __swig_setmethods__["tcp_compress_mode"] = _ama.Cfg_tcp_compress_mode_set
    __swig_getmethods__["tcp_compress_mode"] = _ama.Cfg_tcp_compress_mode_get
    if _newclass:tcp_compress_mode = _swig_property(_ama.Cfg_tcp_compress_mode_get, _ama.Cfg_tcp_compress_mode_set)
    __swig_setmethods__["enable_order_book"] = _ama.Cfg_enable_order_book_set
    __swig_getmethods__["enable_order_book"] = _ama.Cfg_enable_order_book_get
    if _newclass:enable_order_book = _swig_property(_ama.Cfg_enable_order_book_get, _ama.Cfg_enable_order_book_set)
    __swig_setmethods__["entry_size"] = _ama.Cfg_entry_size_set
    __swig_getmethods__["entry_size"] = _ama.Cfg_entry_size_get
    if _newclass:entry_size = _swig_property(_ama.Cfg_entry_size_get, _ama.Cfg_entry_size_set)
    __swig_setmethods__["thread_num"] = _ama.Cfg_thread_num_set
    __swig_getmethods__["thread_num"] = _ama.Cfg_thread_num_get
    if _newclass:thread_num = _swig_property(_ama.Cfg_thread_num_get, _ama.Cfg_thread_num_set)
    __swig_setmethods__["order_queue_size"] = _ama.Cfg_order_queue_size_set
    __swig_getmethods__["order_queue_size"] = _ama.Cfg_order_queue_size_get
    if _newclass:order_queue_size = _swig_property(_ama.Cfg_order_queue_size_get, _ama.Cfg_order_queue_size_set)
    __swig_setmethods__["order_book_deliver_interval_microsecond"] = _ama.Cfg_order_book_deliver_interval_microsecond_set
    __swig_getmethods__["order_book_deliver_interval_microsecond"] = _ama.Cfg_order_book_deliver_interval_microsecond_get
    if _newclass:order_book_deliver_interval_microsecond = _swig_property(_ama.Cfg_order_book_deliver_interval_microsecond_get, _ama.Cfg_order_book_deliver_interval_microsecond_set)
    def __init__(self): 
        this = _ama.new_Cfg()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_Cfg
    __del__ = lambda self : None;
Cfg_swigregister = _ama.Cfg_swigregister
Cfg_swigregister(Cfg)

class SubscribeItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeItem_market_get, _ama.SubscribeItem_market_set)
    __swig_setmethods__["flag"] = _ama.SubscribeItem_flag_set
    __swig_getmethods__["flag"] = _ama.SubscribeItem_flag_get
    if _newclass:flag = _swig_property(_ama.SubscribeItem_flag_get, _ama.SubscribeItem_flag_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeItem_security_code_get, _ama.SubscribeItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeItem
    __del__ = lambda self : None;
SubscribeItem_swigregister = _ama.SubscribeItem_swigregister
SubscribeItem_swigregister(SubscribeItem)

class ETFItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.ETFItem_market_set
    __swig_getmethods__["market"] = _ama.ETFItem_market_get
    if _newclass:market = _swig_property(_ama.ETFItem_market_get, _ama.ETFItem_market_set)
    __swig_setmethods__["security_code"] = _ama.ETFItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.ETFItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.ETFItem_security_code_get, _ama.ETFItem_security_code_set)
    def __init__(self): 
        this = _ama.new_ETFItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFItem
    __del__ = lambda self : None;
ETFItem_swigregister = _ama.ETFItem_swigregister
ETFItem_swigregister(ETFItem)

class SubscribeCategoryItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeCategoryItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeCategoryItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeCategoryItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeCategoryItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeCategoryItem_market_get, _ama.SubscribeCategoryItem_market_set)
    __swig_setmethods__["data_type"] = _ama.SubscribeCategoryItem_data_type_set
    __swig_getmethods__["data_type"] = _ama.SubscribeCategoryItem_data_type_get
    if _newclass:data_type = _swig_property(_ama.SubscribeCategoryItem_data_type_get, _ama.SubscribeCategoryItem_data_type_set)
    __swig_setmethods__["category_type"] = _ama.SubscribeCategoryItem_category_type_set
    __swig_getmethods__["category_type"] = _ama.SubscribeCategoryItem_category_type_get
    if _newclass:category_type = _swig_property(_ama.SubscribeCategoryItem_category_type_get, _ama.SubscribeCategoryItem_category_type_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeCategoryItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeCategoryItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeCategoryItem_security_code_get, _ama.SubscribeCategoryItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeCategoryItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeCategoryItem
    __del__ = lambda self : None;
SubscribeCategoryItem_swigregister = _ama.SubscribeCategoryItem_swigregister
SubscribeCategoryItem_swigregister(SubscribeCategoryItem)

class SubscribeOrderBookItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubscribeOrderBookItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubscribeOrderBookItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market"] = _ama.SubscribeOrderBookItem_market_set
    __swig_getmethods__["market"] = _ama.SubscribeOrderBookItem_market_get
    if _newclass:market = _swig_property(_ama.SubscribeOrderBookItem_market_get, _ama.SubscribeOrderBookItem_market_set)
    __swig_setmethods__["flag"] = _ama.SubscribeOrderBookItem_flag_set
    __swig_getmethods__["flag"] = _ama.SubscribeOrderBookItem_flag_get
    if _newclass:flag = _swig_property(_ama.SubscribeOrderBookItem_flag_get, _ama.SubscribeOrderBookItem_flag_set)
    __swig_setmethods__["security_code"] = _ama.SubscribeOrderBookItem_security_code_set
    __swig_getmethods__["security_code"] = _ama.SubscribeOrderBookItem_security_code_get
    if _newclass:security_code = _swig_property(_ama.SubscribeOrderBookItem_security_code_get, _ama.SubscribeOrderBookItem_security_code_set)
    def __init__(self): 
        this = _ama.new_SubscribeOrderBookItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubscribeOrderBookItem
    __del__ = lambda self : None;
SubscribeOrderBookItem_swigregister = _ama.SubscribeOrderBookItem_swigregister
SubscribeOrderBookItem_swigregister(SubscribeOrderBookItem)

class CodeTableRecord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CodeTableRecord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CodeTableRecord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.CodeTableRecord_security_code_set
    __swig_getmethods__["security_code"] = _ama.CodeTableRecord_security_code_get
    if _newclass:security_code = _swig_property(_ama.CodeTableRecord_security_code_get, _ama.CodeTableRecord_security_code_set)
    __swig_setmethods__["market_type"] = _ama.CodeTableRecord_market_type_set
    __swig_getmethods__["market_type"] = _ama.CodeTableRecord_market_type_get
    if _newclass:market_type = _swig_property(_ama.CodeTableRecord_market_type_get, _ama.CodeTableRecord_market_type_set)
    __swig_setmethods__["symbol"] = _ama.CodeTableRecord_symbol_set
    __swig_getmethods__["symbol"] = _ama.CodeTableRecord_symbol_get
    if _newclass:symbol = _swig_property(_ama.CodeTableRecord_symbol_get, _ama.CodeTableRecord_symbol_set)
    __swig_setmethods__["english_name"] = _ama.CodeTableRecord_english_name_set
    __swig_getmethods__["english_name"] = _ama.CodeTableRecord_english_name_get
    if _newclass:english_name = _swig_property(_ama.CodeTableRecord_english_name_get, _ama.CodeTableRecord_english_name_set)
    __swig_setmethods__["security_type"] = _ama.CodeTableRecord_security_type_set
    __swig_getmethods__["security_type"] = _ama.CodeTableRecord_security_type_get
    if _newclass:security_type = _swig_property(_ama.CodeTableRecord_security_type_get, _ama.CodeTableRecord_security_type_set)
    __swig_setmethods__["currency"] = _ama.CodeTableRecord_currency_set
    __swig_getmethods__["currency"] = _ama.CodeTableRecord_currency_get
    if _newclass:currency = _swig_property(_ama.CodeTableRecord_currency_get, _ama.CodeTableRecord_currency_set)
    __swig_setmethods__["variety_category"] = _ama.CodeTableRecord_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.CodeTableRecord_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.CodeTableRecord_variety_category_get, _ama.CodeTableRecord_variety_category_set)
    __swig_setmethods__["pre_close_price"] = _ama.CodeTableRecord_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.CodeTableRecord_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.CodeTableRecord_pre_close_price_get, _ama.CodeTableRecord_pre_close_price_set)
    __swig_setmethods__["close_price"] = _ama.CodeTableRecord_close_price_set
    __swig_getmethods__["close_price"] = _ama.CodeTableRecord_close_price_get
    if _newclass:close_price = _swig_property(_ama.CodeTableRecord_close_price_get, _ama.CodeTableRecord_close_price_set)
    __swig_setmethods__["underlying_security_id"] = _ama.CodeTableRecord_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.CodeTableRecord_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.CodeTableRecord_underlying_security_id_get, _ama.CodeTableRecord_underlying_security_id_set)
    __swig_setmethods__["contract_type"] = _ama.CodeTableRecord_contract_type_set
    __swig_getmethods__["contract_type"] = _ama.CodeTableRecord_contract_type_get
    if _newclass:contract_type = _swig_property(_ama.CodeTableRecord_contract_type_get, _ama.CodeTableRecord_contract_type_set)
    __swig_setmethods__["exercise_price"] = _ama.CodeTableRecord_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.CodeTableRecord_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.CodeTableRecord_exercise_price_get, _ama.CodeTableRecord_exercise_price_set)
    __swig_setmethods__["expire_date"] = _ama.CodeTableRecord_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.CodeTableRecord_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.CodeTableRecord_expire_date_get, _ama.CodeTableRecord_expire_date_set)
    __swig_setmethods__["high_limited"] = _ama.CodeTableRecord_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.CodeTableRecord_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.CodeTableRecord_high_limited_get, _ama.CodeTableRecord_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.CodeTableRecord_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.CodeTableRecord_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.CodeTableRecord_low_limited_get, _ama.CodeTableRecord_low_limited_set)
    __swig_setmethods__["security_status"] = _ama.CodeTableRecord_security_status_set
    __swig_getmethods__["security_status"] = _ama.CodeTableRecord_security_status_get
    if _newclass:security_status = _swig_property(_ama.CodeTableRecord_security_status_get, _ama.CodeTableRecord_security_status_set)
    __swig_setmethods__["price_tick"] = _ama.CodeTableRecord_price_tick_set
    __swig_getmethods__["price_tick"] = _ama.CodeTableRecord_price_tick_get
    if _newclass:price_tick = _swig_property(_ama.CodeTableRecord_price_tick_get, _ama.CodeTableRecord_price_tick_set)
    __swig_setmethods__["buy_qty_unit"] = _ama.CodeTableRecord_buy_qty_unit_set
    __swig_getmethods__["buy_qty_unit"] = _ama.CodeTableRecord_buy_qty_unit_get
    if _newclass:buy_qty_unit = _swig_property(_ama.CodeTableRecord_buy_qty_unit_get, _ama.CodeTableRecord_buy_qty_unit_set)
    __swig_setmethods__["sell_qty_unit"] = _ama.CodeTableRecord_sell_qty_unit_set
    __swig_getmethods__["sell_qty_unit"] = _ama.CodeTableRecord_sell_qty_unit_get
    if _newclass:sell_qty_unit = _swig_property(_ama.CodeTableRecord_sell_qty_unit_get, _ama.CodeTableRecord_sell_qty_unit_set)
    __swig_setmethods__["market_buy_qty_unit"] = _ama.CodeTableRecord_market_buy_qty_unit_set
    __swig_getmethods__["market_buy_qty_unit"] = _ama.CodeTableRecord_market_buy_qty_unit_get
    if _newclass:market_buy_qty_unit = _swig_property(_ama.CodeTableRecord_market_buy_qty_unit_get, _ama.CodeTableRecord_market_buy_qty_unit_set)
    __swig_setmethods__["market_sell_qty_unit"] = _ama.CodeTableRecord_market_sell_qty_unit_set
    __swig_getmethods__["market_sell_qty_unit"] = _ama.CodeTableRecord_market_sell_qty_unit_get
    if _newclass:market_sell_qty_unit = _swig_property(_ama.CodeTableRecord_market_sell_qty_unit_get, _ama.CodeTableRecord_market_sell_qty_unit_set)
    __swig_setmethods__["buy_qty_lower_limit"] = _ama.CodeTableRecord_buy_qty_lower_limit_set
    __swig_getmethods__["buy_qty_lower_limit"] = _ama.CodeTableRecord_buy_qty_lower_limit_get
    if _newclass:buy_qty_lower_limit = _swig_property(_ama.CodeTableRecord_buy_qty_lower_limit_get, _ama.CodeTableRecord_buy_qty_lower_limit_set)
    __swig_setmethods__["buy_qty_upper_limit"] = _ama.CodeTableRecord_buy_qty_upper_limit_set
    __swig_getmethods__["buy_qty_upper_limit"] = _ama.CodeTableRecord_buy_qty_upper_limit_get
    if _newclass:buy_qty_upper_limit = _swig_property(_ama.CodeTableRecord_buy_qty_upper_limit_get, _ama.CodeTableRecord_buy_qty_upper_limit_set)
    __swig_setmethods__["sell_qty_lower_limit"] = _ama.CodeTableRecord_sell_qty_lower_limit_set
    __swig_getmethods__["sell_qty_lower_limit"] = _ama.CodeTableRecord_sell_qty_lower_limit_get
    if _newclass:sell_qty_lower_limit = _swig_property(_ama.CodeTableRecord_sell_qty_lower_limit_get, _ama.CodeTableRecord_sell_qty_lower_limit_set)
    __swig_setmethods__["sell_qty_upper_limit"] = _ama.CodeTableRecord_sell_qty_upper_limit_set
    __swig_getmethods__["sell_qty_upper_limit"] = _ama.CodeTableRecord_sell_qty_upper_limit_get
    if _newclass:sell_qty_upper_limit = _swig_property(_ama.CodeTableRecord_sell_qty_upper_limit_get, _ama.CodeTableRecord_sell_qty_upper_limit_set)
    __swig_setmethods__["market_buy_qty_lower_limit"] = _ama.CodeTableRecord_market_buy_qty_lower_limit_set
    __swig_getmethods__["market_buy_qty_lower_limit"] = _ama.CodeTableRecord_market_buy_qty_lower_limit_get
    if _newclass:market_buy_qty_lower_limit = _swig_property(_ama.CodeTableRecord_market_buy_qty_lower_limit_get, _ama.CodeTableRecord_market_buy_qty_lower_limit_set)
    __swig_setmethods__["market_buy_qty_upper_limit"] = _ama.CodeTableRecord_market_buy_qty_upper_limit_set
    __swig_getmethods__["market_buy_qty_upper_limit"] = _ama.CodeTableRecord_market_buy_qty_upper_limit_get
    if _newclass:market_buy_qty_upper_limit = _swig_property(_ama.CodeTableRecord_market_buy_qty_upper_limit_get, _ama.CodeTableRecord_market_buy_qty_upper_limit_set)
    __swig_setmethods__["market_sell_qty_lower_limit"] = _ama.CodeTableRecord_market_sell_qty_lower_limit_set
    __swig_getmethods__["market_sell_qty_lower_limit"] = _ama.CodeTableRecord_market_sell_qty_lower_limit_get
    if _newclass:market_sell_qty_lower_limit = _swig_property(_ama.CodeTableRecord_market_sell_qty_lower_limit_get, _ama.CodeTableRecord_market_sell_qty_lower_limit_set)
    __swig_setmethods__["market_sell_qty_upper_limit"] = _ama.CodeTableRecord_market_sell_qty_upper_limit_set
    __swig_getmethods__["market_sell_qty_upper_limit"] = _ama.CodeTableRecord_market_sell_qty_upper_limit_get
    if _newclass:market_sell_qty_upper_limit = _swig_property(_ama.CodeTableRecord_market_sell_qty_upper_limit_get, _ama.CodeTableRecord_market_sell_qty_upper_limit_set)
    def __init__(self): 
        this = _ama.new_CodeTableRecord()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_CodeTableRecord
    __del__ = lambda self : None;
CodeTableRecord_swigregister = _ama.CodeTableRecord_swigregister
CodeTableRecord_swigregister(CodeTableRecord)

class CodeTableRecordList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, CodeTableRecordList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, CodeTableRecordList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["list_nums"] = _ama.CodeTableRecordList_list_nums_set
    __swig_getmethods__["list_nums"] = _ama.CodeTableRecordList_list_nums_get
    if _newclass:list_nums = _swig_property(_ama.CodeTableRecordList_list_nums_get, _ama.CodeTableRecordList_list_nums_set)
    __swig_setmethods__["records"] = _ama.CodeTableRecordList_records_set
    __swig_getmethods__["records"] = _ama.CodeTableRecordList_records_get
    if _newclass:records = _swig_property(_ama.CodeTableRecordList_records_get, _ama.CodeTableRecordList_records_set)
    def __init__(self): 
        this = _ama.new_CodeTableRecordList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_CodeTableRecordList
    __del__ = lambda self : None;
CodeTableRecordList_swigregister = _ama.CodeTableRecordList_swigregister
CodeTableRecordList_swigregister(CodeTableRecordList)

class ConstituentStockInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ConstituentStockInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ConstituentStockInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.ConstituentStockInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.ConstituentStockInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.ConstituentStockInfo_security_code_get, _ama.ConstituentStockInfo_security_code_set)
    __swig_setmethods__["market_type"] = _ama.ConstituentStockInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.ConstituentStockInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.ConstituentStockInfo_market_type_get, _ama.ConstituentStockInfo_market_type_set)
    __swig_setmethods__["underlying_symbol"] = _ama.ConstituentStockInfo_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.ConstituentStockInfo_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.ConstituentStockInfo_underlying_symbol_get, _ama.ConstituentStockInfo_underlying_symbol_set)
    __swig_setmethods__["component_share"] = _ama.ConstituentStockInfo_component_share_set
    __swig_getmethods__["component_share"] = _ama.ConstituentStockInfo_component_share_get
    if _newclass:component_share = _swig_property(_ama.ConstituentStockInfo_component_share_get, _ama.ConstituentStockInfo_component_share_set)
    __swig_setmethods__["substitute_flag"] = _ama.ConstituentStockInfo_substitute_flag_set
    __swig_getmethods__["substitute_flag"] = _ama.ConstituentStockInfo_substitute_flag_get
    if _newclass:substitute_flag = _swig_property(_ama.ConstituentStockInfo_substitute_flag_get, _ama.ConstituentStockInfo_substitute_flag_set)
    __swig_setmethods__["premium_ratio"] = _ama.ConstituentStockInfo_premium_ratio_set
    __swig_getmethods__["premium_ratio"] = _ama.ConstituentStockInfo_premium_ratio_get
    if _newclass:premium_ratio = _swig_property(_ama.ConstituentStockInfo_premium_ratio_get, _ama.ConstituentStockInfo_premium_ratio_set)
    __swig_setmethods__["discount_ratio"] = _ama.ConstituentStockInfo_discount_ratio_set
    __swig_getmethods__["discount_ratio"] = _ama.ConstituentStockInfo_discount_ratio_get
    if _newclass:discount_ratio = _swig_property(_ama.ConstituentStockInfo_discount_ratio_get, _ama.ConstituentStockInfo_discount_ratio_set)
    __swig_setmethods__["creation_cash_substitute"] = _ama.ConstituentStockInfo_creation_cash_substitute_set
    __swig_getmethods__["creation_cash_substitute"] = _ama.ConstituentStockInfo_creation_cash_substitute_get
    if _newclass:creation_cash_substitute = _swig_property(_ama.ConstituentStockInfo_creation_cash_substitute_get, _ama.ConstituentStockInfo_creation_cash_substitute_set)
    __swig_setmethods__["redemption_cash_substitute"] = _ama.ConstituentStockInfo_redemption_cash_substitute_set
    __swig_getmethods__["redemption_cash_substitute"] = _ama.ConstituentStockInfo_redemption_cash_substitute_get
    if _newclass:redemption_cash_substitute = _swig_property(_ama.ConstituentStockInfo_redemption_cash_substitute_get, _ama.ConstituentStockInfo_redemption_cash_substitute_set)
    __swig_setmethods__["substitution_cash_amount"] = _ama.ConstituentStockInfo_substitution_cash_amount_set
    __swig_getmethods__["substitution_cash_amount"] = _ama.ConstituentStockInfo_substitution_cash_amount_get
    if _newclass:substitution_cash_amount = _swig_property(_ama.ConstituentStockInfo_substitution_cash_amount_get, _ama.ConstituentStockInfo_substitution_cash_amount_set)
    __swig_setmethods__["underlying_security_id"] = _ama.ConstituentStockInfo_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.ConstituentStockInfo_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.ConstituentStockInfo_underlying_security_id_get, _ama.ConstituentStockInfo_underlying_security_id_set)
    __swig_setmethods__["buy_or_sell_to_open"] = _ama.ConstituentStockInfo_buy_or_sell_to_open_set
    __swig_getmethods__["buy_or_sell_to_open"] = _ama.ConstituentStockInfo_buy_or_sell_to_open_get
    if _newclass:buy_or_sell_to_open = _swig_property(_ama.ConstituentStockInfo_buy_or_sell_to_open_get, _ama.ConstituentStockInfo_buy_or_sell_to_open_set)
    __swig_setmethods__["reserved"] = _ama.ConstituentStockInfo_reserved_set
    __swig_getmethods__["reserved"] = _ama.ConstituentStockInfo_reserved_get
    if _newclass:reserved = _swig_property(_ama.ConstituentStockInfo_reserved_get, _ama.ConstituentStockInfo_reserved_set)
    def __init__(self): 
        this = _ama.new_ConstituentStockInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ConstituentStockInfo
    __del__ = lambda self : None;
ConstituentStockInfo_swigregister = _ama.ConstituentStockInfo_swigregister
ConstituentStockInfo_swigregister(ConstituentStockInfo)

class ETFCodeTableRecord(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFCodeTableRecord, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFCodeTableRecord, name)
    __repr__ = _swig_repr
    __swig_setmethods__["security_code"] = _ama.ETFCodeTableRecord_security_code_set
    __swig_getmethods__["security_code"] = _ama.ETFCodeTableRecord_security_code_get
    if _newclass:security_code = _swig_property(_ama.ETFCodeTableRecord_security_code_get, _ama.ETFCodeTableRecord_security_code_set)
    __swig_setmethods__["creation_redemption_unit"] = _ama.ETFCodeTableRecord_creation_redemption_unit_set
    __swig_getmethods__["creation_redemption_unit"] = _ama.ETFCodeTableRecord_creation_redemption_unit_get
    if _newclass:creation_redemption_unit = _swig_property(_ama.ETFCodeTableRecord_creation_redemption_unit_get, _ama.ETFCodeTableRecord_creation_redemption_unit_set)
    __swig_setmethods__["max_cash_ratio"] = _ama.ETFCodeTableRecord_max_cash_ratio_set
    __swig_getmethods__["max_cash_ratio"] = _ama.ETFCodeTableRecord_max_cash_ratio_get
    if _newclass:max_cash_ratio = _swig_property(_ama.ETFCodeTableRecord_max_cash_ratio_get, _ama.ETFCodeTableRecord_max_cash_ratio_set)
    __swig_setmethods__["publish"] = _ama.ETFCodeTableRecord_publish_set
    __swig_getmethods__["publish"] = _ama.ETFCodeTableRecord_publish_get
    if _newclass:publish = _swig_property(_ama.ETFCodeTableRecord_publish_get, _ama.ETFCodeTableRecord_publish_set)
    __swig_setmethods__["creation"] = _ama.ETFCodeTableRecord_creation_set
    __swig_getmethods__["creation"] = _ama.ETFCodeTableRecord_creation_get
    if _newclass:creation = _swig_property(_ama.ETFCodeTableRecord_creation_get, _ama.ETFCodeTableRecord_creation_set)
    __swig_setmethods__["redemption"] = _ama.ETFCodeTableRecord_redemption_set
    __swig_getmethods__["redemption"] = _ama.ETFCodeTableRecord_redemption_get
    if _newclass:redemption = _swig_property(_ama.ETFCodeTableRecord_redemption_get, _ama.ETFCodeTableRecord_redemption_set)
    __swig_setmethods__["creation_redemption_switch"] = _ama.ETFCodeTableRecord_creation_redemption_switch_set
    __swig_getmethods__["creation_redemption_switch"] = _ama.ETFCodeTableRecord_creation_redemption_switch_get
    if _newclass:creation_redemption_switch = _swig_property(_ama.ETFCodeTableRecord_creation_redemption_switch_get, _ama.ETFCodeTableRecord_creation_redemption_switch_set)
    __swig_setmethods__["record_num"] = _ama.ETFCodeTableRecord_record_num_set
    __swig_getmethods__["record_num"] = _ama.ETFCodeTableRecord_record_num_get
    if _newclass:record_num = _swig_property(_ama.ETFCodeTableRecord_record_num_get, _ama.ETFCodeTableRecord_record_num_set)
    __swig_setmethods__["total_record_num"] = _ama.ETFCodeTableRecord_total_record_num_set
    __swig_getmethods__["total_record_num"] = _ama.ETFCodeTableRecord_total_record_num_get
    if _newclass:total_record_num = _swig_property(_ama.ETFCodeTableRecord_total_record_num_get, _ama.ETFCodeTableRecord_total_record_num_set)
    __swig_setmethods__["estimate_cash_component"] = _ama.ETFCodeTableRecord_estimate_cash_component_set
    __swig_getmethods__["estimate_cash_component"] = _ama.ETFCodeTableRecord_estimate_cash_component_get
    if _newclass:estimate_cash_component = _swig_property(_ama.ETFCodeTableRecord_estimate_cash_component_get, _ama.ETFCodeTableRecord_estimate_cash_component_set)
    __swig_setmethods__["trading_day"] = _ama.ETFCodeTableRecord_trading_day_set
    __swig_getmethods__["trading_day"] = _ama.ETFCodeTableRecord_trading_day_get
    if _newclass:trading_day = _swig_property(_ama.ETFCodeTableRecord_trading_day_get, _ama.ETFCodeTableRecord_trading_day_set)
    __swig_setmethods__["pre_trading_day"] = _ama.ETFCodeTableRecord_pre_trading_day_set
    __swig_getmethods__["pre_trading_day"] = _ama.ETFCodeTableRecord_pre_trading_day_get
    if _newclass:pre_trading_day = _swig_property(_ama.ETFCodeTableRecord_pre_trading_day_get, _ama.ETFCodeTableRecord_pre_trading_day_set)
    __swig_setmethods__["cash_component"] = _ama.ETFCodeTableRecord_cash_component_set
    __swig_getmethods__["cash_component"] = _ama.ETFCodeTableRecord_cash_component_get
    if _newclass:cash_component = _swig_property(_ama.ETFCodeTableRecord_cash_component_get, _ama.ETFCodeTableRecord_cash_component_set)
    __swig_setmethods__["nav_per_cu"] = _ama.ETFCodeTableRecord_nav_per_cu_set
    __swig_getmethods__["nav_per_cu"] = _ama.ETFCodeTableRecord_nav_per_cu_get
    if _newclass:nav_per_cu = _swig_property(_ama.ETFCodeTableRecord_nav_per_cu_get, _ama.ETFCodeTableRecord_nav_per_cu_set)
    __swig_setmethods__["nav"] = _ama.ETFCodeTableRecord_nav_set
    __swig_getmethods__["nav"] = _ama.ETFCodeTableRecord_nav_get
    if _newclass:nav = _swig_property(_ama.ETFCodeTableRecord_nav_get, _ama.ETFCodeTableRecord_nav_set)
    __swig_setmethods__["market_type"] = _ama.ETFCodeTableRecord_market_type_set
    __swig_getmethods__["market_type"] = _ama.ETFCodeTableRecord_market_type_get
    if _newclass:market_type = _swig_property(_ama.ETFCodeTableRecord_market_type_get, _ama.ETFCodeTableRecord_market_type_set)
    __swig_setmethods__["symbol"] = _ama.ETFCodeTableRecord_symbol_set
    __swig_getmethods__["symbol"] = _ama.ETFCodeTableRecord_symbol_get
    if _newclass:symbol = _swig_property(_ama.ETFCodeTableRecord_symbol_get, _ama.ETFCodeTableRecord_symbol_set)
    __swig_setmethods__["fund_management_company"] = _ama.ETFCodeTableRecord_fund_management_company_set
    __swig_getmethods__["fund_management_company"] = _ama.ETFCodeTableRecord_fund_management_company_get
    if _newclass:fund_management_company = _swig_property(_ama.ETFCodeTableRecord_fund_management_company_get, _ama.ETFCodeTableRecord_fund_management_company_set)
    __swig_setmethods__["underlying_security_id"] = _ama.ETFCodeTableRecord_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.ETFCodeTableRecord_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.ETFCodeTableRecord_underlying_security_id_get, _ama.ETFCodeTableRecord_underlying_security_id_set)
    __swig_setmethods__["underlying_security_id_source"] = _ama.ETFCodeTableRecord_underlying_security_id_source_set
    __swig_getmethods__["underlying_security_id_source"] = _ama.ETFCodeTableRecord_underlying_security_id_source_get
    if _newclass:underlying_security_id_source = _swig_property(_ama.ETFCodeTableRecord_underlying_security_id_source_get, _ama.ETFCodeTableRecord_underlying_security_id_source_set)
    __swig_setmethods__["dividend_per_cu"] = _ama.ETFCodeTableRecord_dividend_per_cu_set
    __swig_getmethods__["dividend_per_cu"] = _ama.ETFCodeTableRecord_dividend_per_cu_get
    if _newclass:dividend_per_cu = _swig_property(_ama.ETFCodeTableRecord_dividend_per_cu_get, _ama.ETFCodeTableRecord_dividend_per_cu_set)
    __swig_setmethods__["creation_limit"] = _ama.ETFCodeTableRecord_creation_limit_set
    __swig_getmethods__["creation_limit"] = _ama.ETFCodeTableRecord_creation_limit_get
    if _newclass:creation_limit = _swig_property(_ama.ETFCodeTableRecord_creation_limit_get, _ama.ETFCodeTableRecord_creation_limit_set)
    __swig_setmethods__["redemption_limit"] = _ama.ETFCodeTableRecord_redemption_limit_set
    __swig_getmethods__["redemption_limit"] = _ama.ETFCodeTableRecord_redemption_limit_get
    if _newclass:redemption_limit = _swig_property(_ama.ETFCodeTableRecord_redemption_limit_get, _ama.ETFCodeTableRecord_redemption_limit_set)
    __swig_setmethods__["creation_limit_per_user"] = _ama.ETFCodeTableRecord_creation_limit_per_user_set
    __swig_getmethods__["creation_limit_per_user"] = _ama.ETFCodeTableRecord_creation_limit_per_user_get
    if _newclass:creation_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_creation_limit_per_user_get, _ama.ETFCodeTableRecord_creation_limit_per_user_set)
    __swig_setmethods__["redemption_limit_per_user"] = _ama.ETFCodeTableRecord_redemption_limit_per_user_set
    __swig_getmethods__["redemption_limit_per_user"] = _ama.ETFCodeTableRecord_redemption_limit_per_user_get
    if _newclass:redemption_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_redemption_limit_per_user_get, _ama.ETFCodeTableRecord_redemption_limit_per_user_set)
    __swig_setmethods__["net_creation_limit"] = _ama.ETFCodeTableRecord_net_creation_limit_set
    __swig_getmethods__["net_creation_limit"] = _ama.ETFCodeTableRecord_net_creation_limit_get
    if _newclass:net_creation_limit = _swig_property(_ama.ETFCodeTableRecord_net_creation_limit_get, _ama.ETFCodeTableRecord_net_creation_limit_set)
    __swig_setmethods__["net_redemption_limit"] = _ama.ETFCodeTableRecord_net_redemption_limit_set
    __swig_getmethods__["net_redemption_limit"] = _ama.ETFCodeTableRecord_net_redemption_limit_get
    if _newclass:net_redemption_limit = _swig_property(_ama.ETFCodeTableRecord_net_redemption_limit_get, _ama.ETFCodeTableRecord_net_redemption_limit_set)
    __swig_setmethods__["net_creation_limit_per_user"] = _ama.ETFCodeTableRecord_net_creation_limit_per_user_set
    __swig_getmethods__["net_creation_limit_per_user"] = _ama.ETFCodeTableRecord_net_creation_limit_per_user_get
    if _newclass:net_creation_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_net_creation_limit_per_user_get, _ama.ETFCodeTableRecord_net_creation_limit_per_user_set)
    __swig_setmethods__["net_redemption_limit_per_user"] = _ama.ETFCodeTableRecord_net_redemption_limit_per_user_set
    __swig_getmethods__["net_redemption_limit_per_user"] = _ama.ETFCodeTableRecord_net_redemption_limit_per_user_get
    if _newclass:net_redemption_limit_per_user = _swig_property(_ama.ETFCodeTableRecord_net_redemption_limit_per_user_get, _ama.ETFCodeTableRecord_net_redemption_limit_per_user_set)
    __swig_setmethods__["all_cash_flag"] = _ama.ETFCodeTableRecord_all_cash_flag_set
    __swig_getmethods__["all_cash_flag"] = _ama.ETFCodeTableRecord_all_cash_flag_get
    if _newclass:all_cash_flag = _swig_property(_ama.ETFCodeTableRecord_all_cash_flag_get, _ama.ETFCodeTableRecord_all_cash_flag_set)
    __swig_setmethods__["all_cash_amount"] = _ama.ETFCodeTableRecord_all_cash_amount_set
    __swig_getmethods__["all_cash_amount"] = _ama.ETFCodeTableRecord_all_cash_amount_get
    if _newclass:all_cash_amount = _swig_property(_ama.ETFCodeTableRecord_all_cash_amount_get, _ama.ETFCodeTableRecord_all_cash_amount_set)
    __swig_setmethods__["all_cash_premium_rate"] = _ama.ETFCodeTableRecord_all_cash_premium_rate_set
    __swig_getmethods__["all_cash_premium_rate"] = _ama.ETFCodeTableRecord_all_cash_premium_rate_get
    if _newclass:all_cash_premium_rate = _swig_property(_ama.ETFCodeTableRecord_all_cash_premium_rate_get, _ama.ETFCodeTableRecord_all_cash_premium_rate_set)
    __swig_setmethods__["all_cash_discount_rate"] = _ama.ETFCodeTableRecord_all_cash_discount_rate_set
    __swig_getmethods__["all_cash_discount_rate"] = _ama.ETFCodeTableRecord_all_cash_discount_rate_get
    if _newclass:all_cash_discount_rate = _swig_property(_ama.ETFCodeTableRecord_all_cash_discount_rate_get, _ama.ETFCodeTableRecord_all_cash_discount_rate_set)
    __swig_setmethods__["rtgs_flag"] = _ama.ETFCodeTableRecord_rtgs_flag_set
    __swig_getmethods__["rtgs_flag"] = _ama.ETFCodeTableRecord_rtgs_flag_get
    if _newclass:rtgs_flag = _swig_property(_ama.ETFCodeTableRecord_rtgs_flag_get, _ama.ETFCodeTableRecord_rtgs_flag_set)
    __swig_setmethods__["reserved"] = _ama.ETFCodeTableRecord_reserved_set
    __swig_getmethods__["reserved"] = _ama.ETFCodeTableRecord_reserved_get
    if _newclass:reserved = _swig_property(_ama.ETFCodeTableRecord_reserved_get, _ama.ETFCodeTableRecord_reserved_set)
    __swig_setmethods__["constituent_stock_infos"] = _ama.ETFCodeTableRecord_constituent_stock_infos_set
    __swig_getmethods__["constituent_stock_infos"] = _ama.ETFCodeTableRecord_constituent_stock_infos_get
    if _newclass:constituent_stock_infos = _swig_property(_ama.ETFCodeTableRecord_constituent_stock_infos_get, _ama.ETFCodeTableRecord_constituent_stock_infos_set)
    def __init__(self): 
        this = _ama.new_ETFCodeTableRecord()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFCodeTableRecord
    __del__ = lambda self : None;
ETFCodeTableRecord_swigregister = _ama.ETFCodeTableRecord_swigregister
ETFCodeTableRecord_swigregister(ETFCodeTableRecord)

class ETFCodeTableRecordList(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ETFCodeTableRecordList, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ETFCodeTableRecordList, name)
    __repr__ = _swig_repr
    __swig_setmethods__["etf_list_nums"] = _ama.ETFCodeTableRecordList_etf_list_nums_set
    __swig_getmethods__["etf_list_nums"] = _ama.ETFCodeTableRecordList_etf_list_nums_get
    if _newclass:etf_list_nums = _swig_property(_ama.ETFCodeTableRecordList_etf_list_nums_get, _ama.ETFCodeTableRecordList_etf_list_nums_set)
    __swig_setmethods__["etf_records"] = _ama.ETFCodeTableRecordList_etf_records_set
    __swig_getmethods__["etf_records"] = _ama.ETFCodeTableRecordList_etf_records_get
    if _newclass:etf_records = _swig_property(_ama.ETFCodeTableRecordList_etf_records_get, _ama.ETFCodeTableRecordList_etf_records_set)
    def __init__(self): 
        this = _ama.new_ETFCodeTableRecordList()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_ETFCodeTableRecordList
    __del__ = lambda self : None;
ETFCodeTableRecordList_swigregister = _ama.ETFCodeTableRecordList_swigregister
ETFCodeTableRecordList_swigregister(ETFCodeTableRecordList)

class MDSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDSnapshot_market_type_get, _ama.MDSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDSnapshot_security_code_get, _ama.MDSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDSnapshot_orig_time_get, _ama.MDSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDSnapshot_trading_phase_code_get, _ama.MDSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDSnapshot_pre_close_price_get, _ama.MDSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDSnapshot_open_price_get, _ama.MDSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDSnapshot_high_price_get, _ama.MDSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDSnapshot_low_price_get, _ama.MDSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDSnapshot_last_price_get, _ama.MDSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDSnapshot_close_price_get, _ama.MDSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDSnapshot_bid_price_get, _ama.MDSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDSnapshot_bid_volume_get, _ama.MDSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDSnapshot_offer_price_get, _ama.MDSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDSnapshot_offer_volume_get, _ama.MDSnapshot_offer_volume_set)
    __swig_setmethods__["num_trades"] = _ama.MDSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDSnapshot_num_trades_get, _ama.MDSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDSnapshot_total_volume_trade_get, _ama.MDSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDSnapshot_total_value_trade_get, _ama.MDSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDSnapshot_total_bid_volume_get, _ama.MDSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDSnapshot_total_offer_volume_get, _ama.MDSnapshot_total_offer_volume_set)
    __swig_setmethods__["weighted_avg_bid_price"] = _ama.MDSnapshot_weighted_avg_bid_price_set
    __swig_getmethods__["weighted_avg_bid_price"] = _ama.MDSnapshot_weighted_avg_bid_price_get
    if _newclass:weighted_avg_bid_price = _swig_property(_ama.MDSnapshot_weighted_avg_bid_price_get, _ama.MDSnapshot_weighted_avg_bid_price_set)
    __swig_setmethods__["weighted_avg_offer_price"] = _ama.MDSnapshot_weighted_avg_offer_price_set
    __swig_getmethods__["weighted_avg_offer_price"] = _ama.MDSnapshot_weighted_avg_offer_price_get
    if _newclass:weighted_avg_offer_price = _swig_property(_ama.MDSnapshot_weighted_avg_offer_price_get, _ama.MDSnapshot_weighted_avg_offer_price_set)
    __swig_setmethods__["IOPV"] = _ama.MDSnapshot_IOPV_set
    __swig_getmethods__["IOPV"] = _ama.MDSnapshot_IOPV_get
    if _newclass:IOPV = _swig_property(_ama.MDSnapshot_IOPV_get, _ama.MDSnapshot_IOPV_set)
    __swig_setmethods__["yield_to_maturity"] = _ama.MDSnapshot_yield_to_maturity_set
    __swig_getmethods__["yield_to_maturity"] = _ama.MDSnapshot_yield_to_maturity_get
    if _newclass:yield_to_maturity = _swig_property(_ama.MDSnapshot_yield_to_maturity_get, _ama.MDSnapshot_yield_to_maturity_set)
    __swig_setmethods__["high_limited"] = _ama.MDSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDSnapshot_high_limited_get, _ama.MDSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDSnapshot_low_limited_get, _ama.MDSnapshot_low_limited_set)
    __swig_setmethods__["price_earning_ratio1"] = _ama.MDSnapshot_price_earning_ratio1_set
    __swig_getmethods__["price_earning_ratio1"] = _ama.MDSnapshot_price_earning_ratio1_get
    if _newclass:price_earning_ratio1 = _swig_property(_ama.MDSnapshot_price_earning_ratio1_get, _ama.MDSnapshot_price_earning_ratio1_set)
    __swig_setmethods__["price_earning_ratio2"] = _ama.MDSnapshot_price_earning_ratio2_set
    __swig_getmethods__["price_earning_ratio2"] = _ama.MDSnapshot_price_earning_ratio2_get
    if _newclass:price_earning_ratio2 = _swig_property(_ama.MDSnapshot_price_earning_ratio2_get, _ama.MDSnapshot_price_earning_ratio2_set)
    __swig_setmethods__["change1"] = _ama.MDSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDSnapshot_change1_get, _ama.MDSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDSnapshot_change2_get, _ama.MDSnapshot_change2_set)
    __swig_setmethods__["channel_no"] = _ama.MDSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDSnapshot_channel_no_get, _ama.MDSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDSnapshot_md_stream_id_get, _ama.MDSnapshot_md_stream_id_set)
    __swig_setmethods__["instrument_status"] = _ama.MDSnapshot_instrument_status_set
    __swig_getmethods__["instrument_status"] = _ama.MDSnapshot_instrument_status_get
    if _newclass:instrument_status = _swig_property(_ama.MDSnapshot_instrument_status_get, _ama.MDSnapshot_instrument_status_set)
    __swig_setmethods__["pre_close_iopv"] = _ama.MDSnapshot_pre_close_iopv_set
    __swig_getmethods__["pre_close_iopv"] = _ama.MDSnapshot_pre_close_iopv_get
    if _newclass:pre_close_iopv = _swig_property(_ama.MDSnapshot_pre_close_iopv_get, _ama.MDSnapshot_pre_close_iopv_set)
    __swig_setmethods__["alt_weighted_avg_bid_price"] = _ama.MDSnapshot_alt_weighted_avg_bid_price_set
    __swig_getmethods__["alt_weighted_avg_bid_price"] = _ama.MDSnapshot_alt_weighted_avg_bid_price_get
    if _newclass:alt_weighted_avg_bid_price = _swig_property(_ama.MDSnapshot_alt_weighted_avg_bid_price_get, _ama.MDSnapshot_alt_weighted_avg_bid_price_set)
    __swig_setmethods__["alt_weighted_avg_offer_price"] = _ama.MDSnapshot_alt_weighted_avg_offer_price_set
    __swig_getmethods__["alt_weighted_avg_offer_price"] = _ama.MDSnapshot_alt_weighted_avg_offer_price_get
    if _newclass:alt_weighted_avg_offer_price = _swig_property(_ama.MDSnapshot_alt_weighted_avg_offer_price_get, _ama.MDSnapshot_alt_weighted_avg_offer_price_set)
    __swig_setmethods__["etf_buy_number"] = _ama.MDSnapshot_etf_buy_number_set
    __swig_getmethods__["etf_buy_number"] = _ama.MDSnapshot_etf_buy_number_get
    if _newclass:etf_buy_number = _swig_property(_ama.MDSnapshot_etf_buy_number_get, _ama.MDSnapshot_etf_buy_number_set)
    __swig_setmethods__["etf_buy_amount"] = _ama.MDSnapshot_etf_buy_amount_set
    __swig_getmethods__["etf_buy_amount"] = _ama.MDSnapshot_etf_buy_amount_get
    if _newclass:etf_buy_amount = _swig_property(_ama.MDSnapshot_etf_buy_amount_get, _ama.MDSnapshot_etf_buy_amount_set)
    __swig_setmethods__["etf_buy_money"] = _ama.MDSnapshot_etf_buy_money_set
    __swig_getmethods__["etf_buy_money"] = _ama.MDSnapshot_etf_buy_money_get
    if _newclass:etf_buy_money = _swig_property(_ama.MDSnapshot_etf_buy_money_get, _ama.MDSnapshot_etf_buy_money_set)
    __swig_setmethods__["etf_sell_number"] = _ama.MDSnapshot_etf_sell_number_set
    __swig_getmethods__["etf_sell_number"] = _ama.MDSnapshot_etf_sell_number_get
    if _newclass:etf_sell_number = _swig_property(_ama.MDSnapshot_etf_sell_number_get, _ama.MDSnapshot_etf_sell_number_set)
    __swig_setmethods__["etf_sell_amount"] = _ama.MDSnapshot_etf_sell_amount_set
    __swig_getmethods__["etf_sell_amount"] = _ama.MDSnapshot_etf_sell_amount_get
    if _newclass:etf_sell_amount = _swig_property(_ama.MDSnapshot_etf_sell_amount_get, _ama.MDSnapshot_etf_sell_amount_set)
    __swig_setmethods__["etf_sell_money"] = _ama.MDSnapshot_etf_sell_money_set
    __swig_getmethods__["etf_sell_money"] = _ama.MDSnapshot_etf_sell_money_get
    if _newclass:etf_sell_money = _swig_property(_ama.MDSnapshot_etf_sell_money_get, _ama.MDSnapshot_etf_sell_money_set)
    __swig_setmethods__["total_warrant_exec_volume"] = _ama.MDSnapshot_total_warrant_exec_volume_set
    __swig_getmethods__["total_warrant_exec_volume"] = _ama.MDSnapshot_total_warrant_exec_volume_get
    if _newclass:total_warrant_exec_volume = _swig_property(_ama.MDSnapshot_total_warrant_exec_volume_get, _ama.MDSnapshot_total_warrant_exec_volume_set)
    __swig_setmethods__["war_lower_price"] = _ama.MDSnapshot_war_lower_price_set
    __swig_getmethods__["war_lower_price"] = _ama.MDSnapshot_war_lower_price_get
    if _newclass:war_lower_price = _swig_property(_ama.MDSnapshot_war_lower_price_get, _ama.MDSnapshot_war_lower_price_set)
    __swig_setmethods__["war_upper_price"] = _ama.MDSnapshot_war_upper_price_set
    __swig_getmethods__["war_upper_price"] = _ama.MDSnapshot_war_upper_price_get
    if _newclass:war_upper_price = _swig_property(_ama.MDSnapshot_war_upper_price_get, _ama.MDSnapshot_war_upper_price_set)
    __swig_setmethods__["withdraw_buy_number"] = _ama.MDSnapshot_withdraw_buy_number_set
    __swig_getmethods__["withdraw_buy_number"] = _ama.MDSnapshot_withdraw_buy_number_get
    if _newclass:withdraw_buy_number = _swig_property(_ama.MDSnapshot_withdraw_buy_number_get, _ama.MDSnapshot_withdraw_buy_number_set)
    __swig_setmethods__["withdraw_buy_amount"] = _ama.MDSnapshot_withdraw_buy_amount_set
    __swig_getmethods__["withdraw_buy_amount"] = _ama.MDSnapshot_withdraw_buy_amount_get
    if _newclass:withdraw_buy_amount = _swig_property(_ama.MDSnapshot_withdraw_buy_amount_get, _ama.MDSnapshot_withdraw_buy_amount_set)
    __swig_setmethods__["withdraw_buy_money"] = _ama.MDSnapshot_withdraw_buy_money_set
    __swig_getmethods__["withdraw_buy_money"] = _ama.MDSnapshot_withdraw_buy_money_get
    if _newclass:withdraw_buy_money = _swig_property(_ama.MDSnapshot_withdraw_buy_money_get, _ama.MDSnapshot_withdraw_buy_money_set)
    __swig_setmethods__["withdraw_sell_number"] = _ama.MDSnapshot_withdraw_sell_number_set
    __swig_getmethods__["withdraw_sell_number"] = _ama.MDSnapshot_withdraw_sell_number_get
    if _newclass:withdraw_sell_number = _swig_property(_ama.MDSnapshot_withdraw_sell_number_get, _ama.MDSnapshot_withdraw_sell_number_set)
    __swig_setmethods__["withdraw_sell_amount"] = _ama.MDSnapshot_withdraw_sell_amount_set
    __swig_getmethods__["withdraw_sell_amount"] = _ama.MDSnapshot_withdraw_sell_amount_get
    if _newclass:withdraw_sell_amount = _swig_property(_ama.MDSnapshot_withdraw_sell_amount_get, _ama.MDSnapshot_withdraw_sell_amount_set)
    __swig_setmethods__["withdraw_sell_money"] = _ama.MDSnapshot_withdraw_sell_money_set
    __swig_getmethods__["withdraw_sell_money"] = _ama.MDSnapshot_withdraw_sell_money_get
    if _newclass:withdraw_sell_money = _swig_property(_ama.MDSnapshot_withdraw_sell_money_get, _ama.MDSnapshot_withdraw_sell_money_set)
    __swig_setmethods__["total_bid_number"] = _ama.MDSnapshot_total_bid_number_set
    __swig_getmethods__["total_bid_number"] = _ama.MDSnapshot_total_bid_number_get
    if _newclass:total_bid_number = _swig_property(_ama.MDSnapshot_total_bid_number_get, _ama.MDSnapshot_total_bid_number_set)
    __swig_setmethods__["total_offer_number"] = _ama.MDSnapshot_total_offer_number_set
    __swig_getmethods__["total_offer_number"] = _ama.MDSnapshot_total_offer_number_get
    if _newclass:total_offer_number = _swig_property(_ama.MDSnapshot_total_offer_number_get, _ama.MDSnapshot_total_offer_number_set)
    __swig_setmethods__["bid_trade_max_duration"] = _ama.MDSnapshot_bid_trade_max_duration_set
    __swig_getmethods__["bid_trade_max_duration"] = _ama.MDSnapshot_bid_trade_max_duration_get
    if _newclass:bid_trade_max_duration = _swig_property(_ama.MDSnapshot_bid_trade_max_duration_get, _ama.MDSnapshot_bid_trade_max_duration_set)
    __swig_setmethods__["offer_trade_max_duration"] = _ama.MDSnapshot_offer_trade_max_duration_set
    __swig_getmethods__["offer_trade_max_duration"] = _ama.MDSnapshot_offer_trade_max_duration_get
    if _newclass:offer_trade_max_duration = _swig_property(_ama.MDSnapshot_offer_trade_max_duration_get, _ama.MDSnapshot_offer_trade_max_duration_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDSnapshot_num_bid_orders_get, _ama.MDSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDSnapshot_num_offer_orders_get, _ama.MDSnapshot_num_offer_orders_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDSnapshot_last_trade_time_get, _ama.MDSnapshot_last_trade_time_set)
    __swig_setmethods__["variety_category"] = _ama.MDSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDSnapshot_variety_category_get, _ama.MDSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDSnapshot
    __del__ = lambda self : None;
MDSnapshot_swigregister = _ama.MDSnapshot_swigregister
MDSnapshot_swigregister(MDSnapshot)

class MDIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDIndexSnapshot_market_type_get, _ama.MDIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDIndexSnapshot_security_code_get, _ama.MDIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDIndexSnapshot_orig_time_get, _ama.MDIndexSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDIndexSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDIndexSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDIndexSnapshot_trading_phase_code_get, _ama.MDIndexSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDIndexSnapshot_pre_close_index_get, _ama.MDIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["open_index"] = _ama.MDIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDIndexSnapshot_open_index_get, _ama.MDIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDIndexSnapshot_high_index_get, _ama.MDIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDIndexSnapshot_low_index_get, _ama.MDIndexSnapshot_low_index_set)
    __swig_setmethods__["last_index"] = _ama.MDIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDIndexSnapshot_last_index_get, _ama.MDIndexSnapshot_last_index_set)
    __swig_setmethods__["close_index"] = _ama.MDIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDIndexSnapshot_close_index_get, _ama.MDIndexSnapshot_close_index_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDIndexSnapshot_total_volume_trade_get, _ama.MDIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDIndexSnapshot_total_value_trade_get, _ama.MDIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["channel_no"] = _ama.MDIndexSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDIndexSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDIndexSnapshot_channel_no_get, _ama.MDIndexSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDIndexSnapshot_md_stream_id_get, _ama.MDIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDIndexSnapshot_variety_category_get, _ama.MDIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDIndexSnapshot
    __del__ = lambda self : None;
MDIndexSnapshot_swigregister = _ama.MDIndexSnapshot_swigregister
MDIndexSnapshot_swigregister(MDIndexSnapshot)

class MDTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDTickOrder_market_type_get, _ama.MDTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDTickOrder_security_code_get, _ama.MDTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDTickOrder_channel_no_get, _ama.MDTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDTickOrder_appl_seq_num_get, _ama.MDTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDTickOrder_order_time_get, _ama.MDTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDTickOrder_order_price_get, _ama.MDTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDTickOrder_order_volume_get, _ama.MDTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDTickOrder_side_get, _ama.MDTickOrder_side_set)
    __swig_setmethods__["order_type"] = _ama.MDTickOrder_order_type_set
    __swig_getmethods__["order_type"] = _ama.MDTickOrder_order_type_get
    if _newclass:order_type = _swig_property(_ama.MDTickOrder_order_type_get, _ama.MDTickOrder_order_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDTickOrder_md_stream_id_get, _ama.MDTickOrder_md_stream_id_set)
    __swig_setmethods__["orig_order_no"] = _ama.MDTickOrder_orig_order_no_set
    __swig_getmethods__["orig_order_no"] = _ama.MDTickOrder_orig_order_no_get
    if _newclass:orig_order_no = _swig_property(_ama.MDTickOrder_orig_order_no_get, _ama.MDTickOrder_orig_order_no_set)
    __swig_setmethods__["biz_index"] = _ama.MDTickOrder_biz_index_set
    __swig_getmethods__["biz_index"] = _ama.MDTickOrder_biz_index_get
    if _newclass:biz_index = _swig_property(_ama.MDTickOrder_biz_index_get, _ama.MDTickOrder_biz_index_set)
    __swig_setmethods__["variety_category"] = _ama.MDTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDTickOrder_variety_category_get, _ama.MDTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDTickOrder
    __del__ = lambda self : None;
MDTickOrder_swigregister = _ama.MDTickOrder_swigregister
MDTickOrder_swigregister(MDTickOrder)

class MDTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDTickExecution_market_type_get, _ama.MDTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDTickExecution_security_code_get, _ama.MDTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDTickExecution_exec_time_get, _ama.MDTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDTickExecution_channel_no_get, _ama.MDTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDTickExecution_appl_seq_num_get, _ama.MDTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDTickExecution_exec_price_get, _ama.MDTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDTickExecution_exec_volume_get, _ama.MDTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDTickExecution_value_trade_get, _ama.MDTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDTickExecution_bid_appl_seq_num_get, _ama.MDTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDTickExecution_offer_appl_seq_num_get, _ama.MDTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDTickExecution_side_get, _ama.MDTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDTickExecution_exec_type_get, _ama.MDTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDTickExecution_md_stream_id_get, _ama.MDTickExecution_md_stream_id_set)
    __swig_setmethods__["biz_index"] = _ama.MDTickExecution_biz_index_set
    __swig_getmethods__["biz_index"] = _ama.MDTickExecution_biz_index_get
    if _newclass:biz_index = _swig_property(_ama.MDTickExecution_biz_index_get, _ama.MDTickExecution_biz_index_set)
    __swig_setmethods__["variety_category"] = _ama.MDTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDTickExecution_variety_category_get, _ama.MDTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDTickExecution
    __del__ = lambda self : None;
MDTickExecution_swigregister = _ama.MDTickExecution_swigregister
MDTickExecution_swigregister(MDTickExecution)

class MDOrderQueue(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderQueue, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderQueue, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOrderQueue_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderQueue_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderQueue_market_type_get, _ama.MDOrderQueue_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderQueue_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderQueue_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderQueue_security_code_get, _ama.MDOrderQueue_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDOrderQueue_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDOrderQueue_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDOrderQueue_order_time_get, _ama.MDOrderQueue_order_time_set)
    __swig_setmethods__["side"] = _ama.MDOrderQueue_side_set
    __swig_getmethods__["side"] = _ama.MDOrderQueue_side_get
    if _newclass:side = _swig_property(_ama.MDOrderQueue_side_get, _ama.MDOrderQueue_side_set)
    __swig_setmethods__["order_price"] = _ama.MDOrderQueue_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDOrderQueue_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDOrderQueue_order_price_get, _ama.MDOrderQueue_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDOrderQueue_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDOrderQueue_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDOrderQueue_order_volume_get, _ama.MDOrderQueue_order_volume_set)
    __swig_setmethods__["num_of_orders"] = _ama.MDOrderQueue_num_of_orders_set
    __swig_getmethods__["num_of_orders"] = _ama.MDOrderQueue_num_of_orders_get
    if _newclass:num_of_orders = _swig_property(_ama.MDOrderQueue_num_of_orders_get, _ama.MDOrderQueue_num_of_orders_set)
    __swig_setmethods__["items"] = _ama.MDOrderQueue_items_set
    __swig_getmethods__["items"] = _ama.MDOrderQueue_items_get
    if _newclass:items = _swig_property(_ama.MDOrderQueue_items_get, _ama.MDOrderQueue_items_set)
    __swig_setmethods__["volume"] = _ama.MDOrderQueue_volume_set
    __swig_getmethods__["volume"] = _ama.MDOrderQueue_volume_get
    if _newclass:volume = _swig_property(_ama.MDOrderQueue_volume_get, _ama.MDOrderQueue_volume_set)
    __swig_setmethods__["channel_no"] = _ama.MDOrderQueue_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderQueue_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderQueue_channel_no_get, _ama.MDOrderQueue_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDOrderQueue_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDOrderQueue_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDOrderQueue_md_stream_id_get, _ama.MDOrderQueue_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDOrderQueue_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOrderQueue_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOrderQueue_variety_category_get, _ama.MDOrderQueue_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDOrderQueue()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderQueue
    __del__ = lambda self : None;
MDOrderQueue_swigregister = _ama.MDOrderQueue_swigregister
MDOrderQueue_swigregister(MDOrderQueue)

class MDOptionBasicInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOptionBasicInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOptionBasicInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOptionBasicInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOptionBasicInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOptionBasicInfo_market_type_get, _ama.MDOptionBasicInfo_market_type_set)
    __swig_setmethods__["security_id"] = _ama.MDOptionBasicInfo_security_id_set
    __swig_getmethods__["security_id"] = _ama.MDOptionBasicInfo_security_id_get
    if _newclass:security_id = _swig_property(_ama.MDOptionBasicInfo_security_id_get, _ama.MDOptionBasicInfo_security_id_set)
    __swig_setmethods__["contract_id"] = _ama.MDOptionBasicInfo_contract_id_set
    __swig_getmethods__["contract_id"] = _ama.MDOptionBasicInfo_contract_id_get
    if _newclass:contract_id = _swig_property(_ama.MDOptionBasicInfo_contract_id_get, _ama.MDOptionBasicInfo_contract_id_set)
    __swig_setmethods__["contract_symbol"] = _ama.MDOptionBasicInfo_contract_symbol_set
    __swig_getmethods__["contract_symbol"] = _ama.MDOptionBasicInfo_contract_symbol_get
    if _newclass:contract_symbol = _swig_property(_ama.MDOptionBasicInfo_contract_symbol_get, _ama.MDOptionBasicInfo_contract_symbol_set)
    __swig_setmethods__["underlying_security_id"] = _ama.MDOptionBasicInfo_underlying_security_id_set
    __swig_getmethods__["underlying_security_id"] = _ama.MDOptionBasicInfo_underlying_security_id_get
    if _newclass:underlying_security_id = _swig_property(_ama.MDOptionBasicInfo_underlying_security_id_get, _ama.MDOptionBasicInfo_underlying_security_id_set)
    __swig_setmethods__["underlying_symbol"] = _ama.MDOptionBasicInfo_underlying_symbol_set
    __swig_getmethods__["underlying_symbol"] = _ama.MDOptionBasicInfo_underlying_symbol_get
    if _newclass:underlying_symbol = _swig_property(_ama.MDOptionBasicInfo_underlying_symbol_get, _ama.MDOptionBasicInfo_underlying_symbol_set)
    __swig_setmethods__["underlying_type"] = _ama.MDOptionBasicInfo_underlying_type_set
    __swig_getmethods__["underlying_type"] = _ama.MDOptionBasicInfo_underlying_type_get
    if _newclass:underlying_type = _swig_property(_ama.MDOptionBasicInfo_underlying_type_get, _ama.MDOptionBasicInfo_underlying_type_set)
    __swig_setmethods__["option_type"] = _ama.MDOptionBasicInfo_option_type_set
    __swig_getmethods__["option_type"] = _ama.MDOptionBasicInfo_option_type_get
    if _newclass:option_type = _swig_property(_ama.MDOptionBasicInfo_option_type_get, _ama.MDOptionBasicInfo_option_type_set)
    __swig_setmethods__["call_or_put"] = _ama.MDOptionBasicInfo_call_or_put_set
    __swig_getmethods__["call_or_put"] = _ama.MDOptionBasicInfo_call_or_put_get
    if _newclass:call_or_put = _swig_property(_ama.MDOptionBasicInfo_call_or_put_get, _ama.MDOptionBasicInfo_call_or_put_set)
    __swig_setmethods__["contract_multiplieri_unit"] = _ama.MDOptionBasicInfo_contract_multiplieri_unit_set
    __swig_getmethods__["contract_multiplieri_unit"] = _ama.MDOptionBasicInfo_contract_multiplieri_unit_get
    if _newclass:contract_multiplieri_unit = _swig_property(_ama.MDOptionBasicInfo_contract_multiplieri_unit_get, _ama.MDOptionBasicInfo_contract_multiplieri_unit_set)
    __swig_setmethods__["exercise_price"] = _ama.MDOptionBasicInfo_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.MDOptionBasicInfo_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.MDOptionBasicInfo_exercise_price_get, _ama.MDOptionBasicInfo_exercise_price_set)
    __swig_setmethods__["start_date"] = _ama.MDOptionBasicInfo_start_date_set
    __swig_getmethods__["start_date"] = _ama.MDOptionBasicInfo_start_date_get
    if _newclass:start_date = _swig_property(_ama.MDOptionBasicInfo_start_date_get, _ama.MDOptionBasicInfo_start_date_set)
    __swig_setmethods__["end_date"] = _ama.MDOptionBasicInfo_end_date_set
    __swig_getmethods__["end_date"] = _ama.MDOptionBasicInfo_end_date_get
    if _newclass:end_date = _swig_property(_ama.MDOptionBasicInfo_end_date_get, _ama.MDOptionBasicInfo_end_date_set)
    __swig_setmethods__["exercise_date"] = _ama.MDOptionBasicInfo_exercise_date_set
    __swig_getmethods__["exercise_date"] = _ama.MDOptionBasicInfo_exercise_date_get
    if _newclass:exercise_date = _swig_property(_ama.MDOptionBasicInfo_exercise_date_get, _ama.MDOptionBasicInfo_exercise_date_set)
    __swig_setmethods__["delivery_date"] = _ama.MDOptionBasicInfo_delivery_date_set
    __swig_getmethods__["delivery_date"] = _ama.MDOptionBasicInfo_delivery_date_get
    if _newclass:delivery_date = _swig_property(_ama.MDOptionBasicInfo_delivery_date_get, _ama.MDOptionBasicInfo_delivery_date_set)
    __swig_setmethods__["expire_date"] = _ama.MDOptionBasicInfo_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.MDOptionBasicInfo_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.MDOptionBasicInfo_expire_date_get, _ama.MDOptionBasicInfo_expire_date_set)
    __swig_setmethods__["update_version"] = _ama.MDOptionBasicInfo_update_version_set
    __swig_getmethods__["update_version"] = _ama.MDOptionBasicInfo_update_version_get
    if _newclass:update_version = _swig_property(_ama.MDOptionBasicInfo_update_version_get, _ama.MDOptionBasicInfo_update_version_set)
    __swig_setmethods__["total_long_position"] = _ama.MDOptionBasicInfo_total_long_position_set
    __swig_getmethods__["total_long_position"] = _ama.MDOptionBasicInfo_total_long_position_get
    if _newclass:total_long_position = _swig_property(_ama.MDOptionBasicInfo_total_long_position_get, _ama.MDOptionBasicInfo_total_long_position_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDOptionBasicInfo_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDOptionBasicInfo_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDOptionBasicInfo_pre_close_price_get, _ama.MDOptionBasicInfo_pre_close_price_set)
    __swig_setmethods__["pre_settl_price"] = _ama.MDOptionBasicInfo_pre_settl_price_set
    __swig_getmethods__["pre_settl_price"] = _ama.MDOptionBasicInfo_pre_settl_price_get
    if _newclass:pre_settl_price = _swig_property(_ama.MDOptionBasicInfo_pre_settl_price_get, _ama.MDOptionBasicInfo_pre_settl_price_set)
    __swig_setmethods__["underlying_pre_close_price"] = _ama.MDOptionBasicInfo_underlying_pre_close_price_set
    __swig_getmethods__["underlying_pre_close_price"] = _ama.MDOptionBasicInfo_underlying_pre_close_price_get
    if _newclass:underlying_pre_close_price = _swig_property(_ama.MDOptionBasicInfo_underlying_pre_close_price_get, _ama.MDOptionBasicInfo_underlying_pre_close_price_set)
    __swig_setmethods__["price_limit_type"] = _ama.MDOptionBasicInfo_price_limit_type_set
    __swig_getmethods__["price_limit_type"] = _ama.MDOptionBasicInfo_price_limit_type_get
    if _newclass:price_limit_type = _swig_property(_ama.MDOptionBasicInfo_price_limit_type_get, _ama.MDOptionBasicInfo_price_limit_type_set)
    __swig_setmethods__["high_limited"] = _ama.MDOptionBasicInfo_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDOptionBasicInfo_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDOptionBasicInfo_high_limited_get, _ama.MDOptionBasicInfo_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDOptionBasicInfo_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDOptionBasicInfo_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDOptionBasicInfo_low_limited_get, _ama.MDOptionBasicInfo_low_limited_set)
    __swig_setmethods__["margin_unit"] = _ama.MDOptionBasicInfo_margin_unit_set
    __swig_getmethods__["margin_unit"] = _ama.MDOptionBasicInfo_margin_unit_get
    if _newclass:margin_unit = _swig_property(_ama.MDOptionBasicInfo_margin_unit_get, _ama.MDOptionBasicInfo_margin_unit_set)
    __swig_setmethods__["margin_ratio_param1"] = _ama.MDOptionBasicInfo_margin_ratio_param1_set
    __swig_getmethods__["margin_ratio_param1"] = _ama.MDOptionBasicInfo_margin_ratio_param1_get
    if _newclass:margin_ratio_param1 = _swig_property(_ama.MDOptionBasicInfo_margin_ratio_param1_get, _ama.MDOptionBasicInfo_margin_ratio_param1_set)
    __swig_setmethods__["margin_ratio_param2"] = _ama.MDOptionBasicInfo_margin_ratio_param2_set
    __swig_getmethods__["margin_ratio_param2"] = _ama.MDOptionBasicInfo_margin_ratio_param2_get
    if _newclass:margin_ratio_param2 = _swig_property(_ama.MDOptionBasicInfo_margin_ratio_param2_get, _ama.MDOptionBasicInfo_margin_ratio_param2_set)
    __swig_setmethods__["round_lot"] = _ama.MDOptionBasicInfo_round_lot_set
    __swig_getmethods__["round_lot"] = _ama.MDOptionBasicInfo_round_lot_get
    if _newclass:round_lot = _swig_property(_ama.MDOptionBasicInfo_round_lot_get, _ama.MDOptionBasicInfo_round_lot_set)
    __swig_setmethods__["lmt_ord_min_floor"] = _ama.MDOptionBasicInfo_lmt_ord_min_floor_set
    __swig_getmethods__["lmt_ord_min_floor"] = _ama.MDOptionBasicInfo_lmt_ord_min_floor_get
    if _newclass:lmt_ord_min_floor = _swig_property(_ama.MDOptionBasicInfo_lmt_ord_min_floor_get, _ama.MDOptionBasicInfo_lmt_ord_min_floor_set)
    __swig_setmethods__["lmt_ord_max_floor"] = _ama.MDOptionBasicInfo_lmt_ord_max_floor_set
    __swig_getmethods__["lmt_ord_max_floor"] = _ama.MDOptionBasicInfo_lmt_ord_max_floor_get
    if _newclass:lmt_ord_max_floor = _swig_property(_ama.MDOptionBasicInfo_lmt_ord_max_floor_get, _ama.MDOptionBasicInfo_lmt_ord_max_floor_set)
    __swig_setmethods__["mkt_ord_min_floor"] = _ama.MDOptionBasicInfo_mkt_ord_min_floor_set
    __swig_getmethods__["mkt_ord_min_floor"] = _ama.MDOptionBasicInfo_mkt_ord_min_floor_get
    if _newclass:mkt_ord_min_floor = _swig_property(_ama.MDOptionBasicInfo_mkt_ord_min_floor_get, _ama.MDOptionBasicInfo_mkt_ord_min_floor_set)
    __swig_setmethods__["mkt_ord_max_floor"] = _ama.MDOptionBasicInfo_mkt_ord_max_floor_set
    __swig_getmethods__["mkt_ord_max_floor"] = _ama.MDOptionBasicInfo_mkt_ord_max_floor_get
    if _newclass:mkt_ord_max_floor = _swig_property(_ama.MDOptionBasicInfo_mkt_ord_max_floor_get, _ama.MDOptionBasicInfo_mkt_ord_max_floor_set)
    __swig_setmethods__["tick_size"] = _ama.MDOptionBasicInfo_tick_size_set
    __swig_getmethods__["tick_size"] = _ama.MDOptionBasicInfo_tick_size_get
    if _newclass:tick_size = _swig_property(_ama.MDOptionBasicInfo_tick_size_get, _ama.MDOptionBasicInfo_tick_size_set)
    __swig_setmethods__["security_status_flag"] = _ama.MDOptionBasicInfo_security_status_flag_set
    __swig_getmethods__["security_status_flag"] = _ama.MDOptionBasicInfo_security_status_flag_get
    if _newclass:security_status_flag = _swig_property(_ama.MDOptionBasicInfo_security_status_flag_get, _ama.MDOptionBasicInfo_security_status_flag_set)
    def __init__(self): 
        this = _ama.new_MDOptionBasicInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOptionBasicInfo
    __del__ = lambda self : None;
MDOptionBasicInfo_swigregister = _ama.MDOptionBasicInfo_swigregister
MDOptionBasicInfo_swigregister(MDOptionBasicInfo)

class MDOptionSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOptionSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOptionSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOptionSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOptionSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOptionSnapshot_market_type_get, _ama.MDOptionSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOptionSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOptionSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOptionSnapshot_security_code_get, _ama.MDOptionSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDOptionSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDOptionSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDOptionSnapshot_orig_time_get, _ama.MDOptionSnapshot_orig_time_set)
    __swig_setmethods__["pre_settle_price"] = _ama.MDOptionSnapshot_pre_settle_price_set
    __swig_getmethods__["pre_settle_price"] = _ama.MDOptionSnapshot_pre_settle_price_get
    if _newclass:pre_settle_price = _swig_property(_ama.MDOptionSnapshot_pre_settle_price_get, _ama.MDOptionSnapshot_pre_settle_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDOptionSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDOptionSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDOptionSnapshot_pre_close_price_get, _ama.MDOptionSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDOptionSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDOptionSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDOptionSnapshot_open_price_get, _ama.MDOptionSnapshot_open_price_set)
    __swig_setmethods__["auction_price"] = _ama.MDOptionSnapshot_auction_price_set
    __swig_getmethods__["auction_price"] = _ama.MDOptionSnapshot_auction_price_get
    if _newclass:auction_price = _swig_property(_ama.MDOptionSnapshot_auction_price_get, _ama.MDOptionSnapshot_auction_price_set)
    __swig_setmethods__["auction_volume"] = _ama.MDOptionSnapshot_auction_volume_set
    __swig_getmethods__["auction_volume"] = _ama.MDOptionSnapshot_auction_volume_get
    if _newclass:auction_volume = _swig_property(_ama.MDOptionSnapshot_auction_volume_get, _ama.MDOptionSnapshot_auction_volume_set)
    __swig_setmethods__["high_price"] = _ama.MDOptionSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDOptionSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDOptionSnapshot_high_price_get, _ama.MDOptionSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDOptionSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDOptionSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDOptionSnapshot_low_price_get, _ama.MDOptionSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDOptionSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDOptionSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDOptionSnapshot_last_price_get, _ama.MDOptionSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDOptionSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDOptionSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDOptionSnapshot_close_price_get, _ama.MDOptionSnapshot_close_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDOptionSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDOptionSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDOptionSnapshot_high_limited_get, _ama.MDOptionSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDOptionSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDOptionSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDOptionSnapshot_low_limited_get, _ama.MDOptionSnapshot_low_limited_set)
    __swig_setmethods__["bid_price"] = _ama.MDOptionSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDOptionSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDOptionSnapshot_bid_price_get, _ama.MDOptionSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDOptionSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDOptionSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDOptionSnapshot_bid_volume_get, _ama.MDOptionSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDOptionSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDOptionSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDOptionSnapshot_offer_price_get, _ama.MDOptionSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDOptionSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDOptionSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDOptionSnapshot_offer_volume_get, _ama.MDOptionSnapshot_offer_volume_set)
    __swig_setmethods__["settle_price"] = _ama.MDOptionSnapshot_settle_price_set
    __swig_getmethods__["settle_price"] = _ama.MDOptionSnapshot_settle_price_get
    if _newclass:settle_price = _swig_property(_ama.MDOptionSnapshot_settle_price_get, _ama.MDOptionSnapshot_settle_price_set)
    __swig_setmethods__["total_long_position"] = _ama.MDOptionSnapshot_total_long_position_set
    __swig_getmethods__["total_long_position"] = _ama.MDOptionSnapshot_total_long_position_get
    if _newclass:total_long_position = _swig_property(_ama.MDOptionSnapshot_total_long_position_get, _ama.MDOptionSnapshot_total_long_position_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOptionSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOptionSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOptionSnapshot_total_volume_trade_get, _ama.MDOptionSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOptionSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOptionSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOptionSnapshot_total_value_trade_get, _ama.MDOptionSnapshot_total_value_trade_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDOptionSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDOptionSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDOptionSnapshot_trading_phase_code_get, _ama.MDOptionSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDOptionSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOptionSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOptionSnapshot_channel_no_get, _ama.MDOptionSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDOptionSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDOptionSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDOptionSnapshot_md_stream_id_get, _ama.MDOptionSnapshot_md_stream_id_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDOptionSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDOptionSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDOptionSnapshot_last_trade_time_get, _ama.MDOptionSnapshot_last_trade_time_set)
    __swig_setmethods__["ref_price"] = _ama.MDOptionSnapshot_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDOptionSnapshot_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDOptionSnapshot_ref_price_get, _ama.MDOptionSnapshot_ref_price_set)
    __swig_setmethods__["variety_category"] = _ama.MDOptionSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOptionSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOptionSnapshot_variety_category_get, _ama.MDOptionSnapshot_variety_category_set)
    __swig_setmethods__["contract_type"] = _ama.MDOptionSnapshot_contract_type_set
    __swig_getmethods__["contract_type"] = _ama.MDOptionSnapshot_contract_type_get
    if _newclass:contract_type = _swig_property(_ama.MDOptionSnapshot_contract_type_get, _ama.MDOptionSnapshot_contract_type_set)
    __swig_setmethods__["expire_date"] = _ama.MDOptionSnapshot_expire_date_set
    __swig_getmethods__["expire_date"] = _ama.MDOptionSnapshot_expire_date_get
    if _newclass:expire_date = _swig_property(_ama.MDOptionSnapshot_expire_date_get, _ama.MDOptionSnapshot_expire_date_set)
    __swig_setmethods__["underlying_security_code"] = _ama.MDOptionSnapshot_underlying_security_code_set
    __swig_getmethods__["underlying_security_code"] = _ama.MDOptionSnapshot_underlying_security_code_get
    if _newclass:underlying_security_code = _swig_property(_ama.MDOptionSnapshot_underlying_security_code_get, _ama.MDOptionSnapshot_underlying_security_code_set)
    __swig_setmethods__["exercise_price"] = _ama.MDOptionSnapshot_exercise_price_set
    __swig_getmethods__["exercise_price"] = _ama.MDOptionSnapshot_exercise_price_get
    if _newclass:exercise_price = _swig_property(_ama.MDOptionSnapshot_exercise_price_get, _ama.MDOptionSnapshot_exercise_price_set)
    def __init__(self): 
        this = _ama.new_MDOptionSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOptionSnapshot
    __del__ = lambda self : None;
MDOptionSnapshot_swigregister = _ama.MDOptionSnapshot_swigregister
MDOptionSnapshot_swigregister(MDOptionSnapshot)

class MDHKTSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTSnapshot_market_type_get, _ama.MDHKTSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTSnapshot_security_code_get, _ama.MDHKTSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTSnapshot_orig_time_get, _ama.MDHKTSnapshot_orig_time_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDHKTSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDHKTSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDHKTSnapshot_pre_close_price_get, _ama.MDHKTSnapshot_pre_close_price_set)
    __swig_setmethods__["nominal_price"] = _ama.MDHKTSnapshot_nominal_price_set
    __swig_getmethods__["nominal_price"] = _ama.MDHKTSnapshot_nominal_price_get
    if _newclass:nominal_price = _swig_property(_ama.MDHKTSnapshot_nominal_price_get, _ama.MDHKTSnapshot_nominal_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKTSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKTSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKTSnapshot_high_price_get, _ama.MDHKTSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKTSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKTSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKTSnapshot_low_price_get, _ama.MDHKTSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDHKTSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDHKTSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDHKTSnapshot_last_price_get, _ama.MDHKTSnapshot_last_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDHKTSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDHKTSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDHKTSnapshot_bid_price_get, _ama.MDHKTSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDHKTSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDHKTSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDHKTSnapshot_bid_volume_get, _ama.MDHKTSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDHKTSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDHKTSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDHKTSnapshot_offer_price_get, _ama.MDHKTSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDHKTSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDHKTSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDHKTSnapshot_offer_volume_get, _ama.MDHKTSnapshot_offer_volume_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDHKTSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDHKTSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDHKTSnapshot_total_volume_trade_get, _ama.MDHKTSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDHKTSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDHKTSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDHKTSnapshot_total_value_trade_get, _ama.MDHKTSnapshot_total_value_trade_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDHKTSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDHKTSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDHKTSnapshot_trading_phase_code_get, _ama.MDHKTSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTSnapshot_channel_no_get, _ama.MDHKTSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTSnapshot_md_stream_id_get, _ama.MDHKTSnapshot_md_stream_id_set)
    __swig_setmethods__["ref_price"] = _ama.MDHKTSnapshot_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDHKTSnapshot_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDHKTSnapshot_ref_price_get, _ama.MDHKTSnapshot_ref_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDHKTSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDHKTSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDHKTSnapshot_high_limited_get, _ama.MDHKTSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDHKTSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDHKTSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDHKTSnapshot_low_limited_get, _ama.MDHKTSnapshot_low_limited_set)
    __swig_setmethods__["bid_price_limit_up"] = _ama.MDHKTSnapshot_bid_price_limit_up_set
    __swig_getmethods__["bid_price_limit_up"] = _ama.MDHKTSnapshot_bid_price_limit_up_get
    if _newclass:bid_price_limit_up = _swig_property(_ama.MDHKTSnapshot_bid_price_limit_up_get, _ama.MDHKTSnapshot_bid_price_limit_up_set)
    __swig_setmethods__["bid_price_limit_down"] = _ama.MDHKTSnapshot_bid_price_limit_down_set
    __swig_getmethods__["bid_price_limit_down"] = _ama.MDHKTSnapshot_bid_price_limit_down_get
    if _newclass:bid_price_limit_down = _swig_property(_ama.MDHKTSnapshot_bid_price_limit_down_get, _ama.MDHKTSnapshot_bid_price_limit_down_set)
    __swig_setmethods__["offer_price_limit_up"] = _ama.MDHKTSnapshot_offer_price_limit_up_set
    __swig_getmethods__["offer_price_limit_up"] = _ama.MDHKTSnapshot_offer_price_limit_up_get
    if _newclass:offer_price_limit_up = _swig_property(_ama.MDHKTSnapshot_offer_price_limit_up_get, _ama.MDHKTSnapshot_offer_price_limit_up_set)
    __swig_setmethods__["offer_price_limit_down"] = _ama.MDHKTSnapshot_offer_price_limit_down_set
    __swig_getmethods__["offer_price_limit_down"] = _ama.MDHKTSnapshot_offer_price_limit_down_get
    if _newclass:offer_price_limit_down = _swig_property(_ama.MDHKTSnapshot_offer_price_limit_down_get, _ama.MDHKTSnapshot_offer_price_limit_down_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTSnapshot_variety_category_get, _ama.MDHKTSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTSnapshot
    __del__ = lambda self : None;
MDHKTSnapshot_swigregister = _ama.MDHKTSnapshot_swigregister
MDHKTSnapshot_swigregister(MDHKTSnapshot)

class MDHKTVCM(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTVCM, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTVCM, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTVCM_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTVCM_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTVCM_market_type_get, _ama.MDHKTVCM_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTVCM_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTVCM_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTVCM_security_code_get, _ama.MDHKTVCM_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTVCM_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTVCM_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTVCM_orig_time_get, _ama.MDHKTVCM_orig_time_set)
    __swig_setmethods__["start_time"] = _ama.MDHKTVCM_start_time_set
    __swig_getmethods__["start_time"] = _ama.MDHKTVCM_start_time_get
    if _newclass:start_time = _swig_property(_ama.MDHKTVCM_start_time_get, _ama.MDHKTVCM_start_time_set)
    __swig_setmethods__["end_time"] = _ama.MDHKTVCM_end_time_set
    __swig_getmethods__["end_time"] = _ama.MDHKTVCM_end_time_get
    if _newclass:end_time = _swig_property(_ama.MDHKTVCM_end_time_get, _ama.MDHKTVCM_end_time_set)
    __swig_setmethods__["ref_price"] = _ama.MDHKTVCM_ref_price_set
    __swig_getmethods__["ref_price"] = _ama.MDHKTVCM_ref_price_get
    if _newclass:ref_price = _swig_property(_ama.MDHKTVCM_ref_price_get, _ama.MDHKTVCM_ref_price_set)
    __swig_setmethods__["low_price"] = _ama.MDHKTVCM_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDHKTVCM_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDHKTVCM_low_price_get, _ama.MDHKTVCM_low_price_set)
    __swig_setmethods__["high_price"] = _ama.MDHKTVCM_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDHKTVCM_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDHKTVCM_high_price_get, _ama.MDHKTVCM_high_price_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTVCM_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTVCM_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTVCM_md_stream_id_get, _ama.MDHKTVCM_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTVCM_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTVCM_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTVCM_variety_category_get, _ama.MDHKTVCM_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTVCM()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTVCM
    __del__ = lambda self : None;
MDHKTVCM_swigregister = _ama.MDHKTVCM_swigregister
MDHKTVCM_swigregister(MDHKTVCM)

class MDAfterHourFixedPriceSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDAfterHourFixedPriceSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDAfterHourFixedPriceSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDAfterHourFixedPriceSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDAfterHourFixedPriceSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_market_type_get, _ama.MDAfterHourFixedPriceSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDAfterHourFixedPriceSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDAfterHourFixedPriceSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_security_code_get, _ama.MDAfterHourFixedPriceSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDAfterHourFixedPriceSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDAfterHourFixedPriceSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_orig_time_get, _ama.MDAfterHourFixedPriceSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_get, _ama.MDAfterHourFixedPriceSnapshot_trading_phase_code_set)
    __swig_setmethods__["close_price"] = _ama.MDAfterHourFixedPriceSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDAfterHourFixedPriceSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_close_price_get, _ama.MDAfterHourFixedPriceSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDAfterHourFixedPriceSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDAfterHourFixedPriceSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_bid_price_get, _ama.MDAfterHourFixedPriceSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_bid_volume_get, _ama.MDAfterHourFixedPriceSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDAfterHourFixedPriceSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDAfterHourFixedPriceSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_offer_price_get, _ama.MDAfterHourFixedPriceSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_offer_volume_get, _ama.MDAfterHourFixedPriceSnapshot_offer_volume_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_pre_close_price_get, _ama.MDAfterHourFixedPriceSnapshot_pre_close_price_set)
    __swig_setmethods__["num_trades"] = _ama.MDAfterHourFixedPriceSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDAfterHourFixedPriceSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_num_trades_get, _ama.MDAfterHourFixedPriceSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_get, _ama.MDAfterHourFixedPriceSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_value_trade_get, _ama.MDAfterHourFixedPriceSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_get, _ama.MDAfterHourFixedPriceSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_get, _ama.MDAfterHourFixedPriceSnapshot_total_offer_volume_set)
    __swig_setmethods__["channel_no"] = _ama.MDAfterHourFixedPriceSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDAfterHourFixedPriceSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_channel_no_get, _ama.MDAfterHourFixedPriceSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_md_stream_id_get, _ama.MDAfterHourFixedPriceSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDAfterHourFixedPriceSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDAfterHourFixedPriceSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDAfterHourFixedPriceSnapshot_variety_category_get, _ama.MDAfterHourFixedPriceSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDAfterHourFixedPriceSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDAfterHourFixedPriceSnapshot
    __del__ = lambda self : None;
MDAfterHourFixedPriceSnapshot_swigregister = _ama.MDAfterHourFixedPriceSnapshot_swigregister
MDAfterHourFixedPriceSnapshot_swigregister(MDAfterHourFixedPriceSnapshot)

class MDAfterHourFixedPriceTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDAfterHourFixedPriceTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDAfterHourFixedPriceTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDAfterHourFixedPriceTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDAfterHourFixedPriceTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_market_type_get, _ama.MDAfterHourFixedPriceTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_appl_seq_num_set)
    __swig_setmethods__["security_code"] = _ama.MDAfterHourFixedPriceTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDAfterHourFixedPriceTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_security_code_get, _ama.MDAfterHourFixedPriceTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDAfterHourFixedPriceTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDAfterHourFixedPriceTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_time_get, _ama.MDAfterHourFixedPriceTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDAfterHourFixedPriceTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDAfterHourFixedPriceTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_price_get, _ama.MDAfterHourFixedPriceTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDAfterHourFixedPriceTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDAfterHourFixedPriceTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_volume_get, _ama.MDAfterHourFixedPriceTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDAfterHourFixedPriceTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDAfterHourFixedPriceTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_value_trade_get, _ama.MDAfterHourFixedPriceTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_get, _ama.MDAfterHourFixedPriceTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDAfterHourFixedPriceTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDAfterHourFixedPriceTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_side_get, _ama.MDAfterHourFixedPriceTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDAfterHourFixedPriceTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDAfterHourFixedPriceTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_exec_type_get, _ama.MDAfterHourFixedPriceTickExecution_exec_type_set)
    __swig_setmethods__["channel_no"] = _ama.MDAfterHourFixedPriceTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDAfterHourFixedPriceTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_channel_no_get, _ama.MDAfterHourFixedPriceTickExecution_channel_no_set)
    __swig_setmethods__["variety_category"] = _ama.MDAfterHourFixedPriceTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDAfterHourFixedPriceTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDAfterHourFixedPriceTickExecution_variety_category_get, _ama.MDAfterHourFixedPriceTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDAfterHourFixedPriceTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDAfterHourFixedPriceTickExecution
    __del__ = lambda self : None;
MDAfterHourFixedPriceTickExecution_swigregister = _ama.MDAfterHourFixedPriceTickExecution_swigregister
MDAfterHourFixedPriceTickExecution_swigregister(MDAfterHourFixedPriceTickExecution)

class MDFutureSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDFutureSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDFutureSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDFutureSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDFutureSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDFutureSnapshot_market_type_get, _ama.MDFutureSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDFutureSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDFutureSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDFutureSnapshot_security_code_get, _ama.MDFutureSnapshot_security_code_set)
    __swig_setmethods__["action_day"] = _ama.MDFutureSnapshot_action_day_set
    __swig_getmethods__["action_day"] = _ama.MDFutureSnapshot_action_day_get
    if _newclass:action_day = _swig_property(_ama.MDFutureSnapshot_action_day_get, _ama.MDFutureSnapshot_action_day_set)
    __swig_setmethods__["orig_time"] = _ama.MDFutureSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDFutureSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDFutureSnapshot_orig_time_get, _ama.MDFutureSnapshot_orig_time_set)
    __swig_setmethods__["exchange_inst_id"] = _ama.MDFutureSnapshot_exchange_inst_id_set
    __swig_getmethods__["exchange_inst_id"] = _ama.MDFutureSnapshot_exchange_inst_id_get
    if _newclass:exchange_inst_id = _swig_property(_ama.MDFutureSnapshot_exchange_inst_id_get, _ama.MDFutureSnapshot_exchange_inst_id_set)
    __swig_setmethods__["last_price"] = _ama.MDFutureSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDFutureSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDFutureSnapshot_last_price_get, _ama.MDFutureSnapshot_last_price_set)
    __swig_setmethods__["pre_settle_price"] = _ama.MDFutureSnapshot_pre_settle_price_set
    __swig_getmethods__["pre_settle_price"] = _ama.MDFutureSnapshot_pre_settle_price_get
    if _newclass:pre_settle_price = _swig_property(_ama.MDFutureSnapshot_pre_settle_price_get, _ama.MDFutureSnapshot_pre_settle_price_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDFutureSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDFutureSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDFutureSnapshot_pre_close_price_get, _ama.MDFutureSnapshot_pre_close_price_set)
    __swig_setmethods__["pre_open_interest"] = _ama.MDFutureSnapshot_pre_open_interest_set
    __swig_getmethods__["pre_open_interest"] = _ama.MDFutureSnapshot_pre_open_interest_get
    if _newclass:pre_open_interest = _swig_property(_ama.MDFutureSnapshot_pre_open_interest_get, _ama.MDFutureSnapshot_pre_open_interest_set)
    __swig_setmethods__["open_price"] = _ama.MDFutureSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDFutureSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDFutureSnapshot_open_price_get, _ama.MDFutureSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDFutureSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDFutureSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDFutureSnapshot_high_price_get, _ama.MDFutureSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDFutureSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDFutureSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDFutureSnapshot_low_price_get, _ama.MDFutureSnapshot_low_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDFutureSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDFutureSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_volume_trade_get, _ama.MDFutureSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDFutureSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDFutureSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDFutureSnapshot_total_value_trade_get, _ama.MDFutureSnapshot_total_value_trade_set)
    __swig_setmethods__["open_interest"] = _ama.MDFutureSnapshot_open_interest_set
    __swig_getmethods__["open_interest"] = _ama.MDFutureSnapshot_open_interest_get
    if _newclass:open_interest = _swig_property(_ama.MDFutureSnapshot_open_interest_get, _ama.MDFutureSnapshot_open_interest_set)
    __swig_setmethods__["close_price"] = _ama.MDFutureSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDFutureSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDFutureSnapshot_close_price_get, _ama.MDFutureSnapshot_close_price_set)
    __swig_setmethods__["settle_price"] = _ama.MDFutureSnapshot_settle_price_set
    __swig_getmethods__["settle_price"] = _ama.MDFutureSnapshot_settle_price_get
    if _newclass:settle_price = _swig_property(_ama.MDFutureSnapshot_settle_price_get, _ama.MDFutureSnapshot_settle_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDFutureSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDFutureSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDFutureSnapshot_high_limited_get, _ama.MDFutureSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDFutureSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDFutureSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDFutureSnapshot_low_limited_get, _ama.MDFutureSnapshot_low_limited_set)
    __swig_setmethods__["pre_delta"] = _ama.MDFutureSnapshot_pre_delta_set
    __swig_getmethods__["pre_delta"] = _ama.MDFutureSnapshot_pre_delta_get
    if _newclass:pre_delta = _swig_property(_ama.MDFutureSnapshot_pre_delta_get, _ama.MDFutureSnapshot_pre_delta_set)
    __swig_setmethods__["curr_delta"] = _ama.MDFutureSnapshot_curr_delta_set
    __swig_getmethods__["curr_delta"] = _ama.MDFutureSnapshot_curr_delta_get
    if _newclass:curr_delta = _swig_property(_ama.MDFutureSnapshot_curr_delta_get, _ama.MDFutureSnapshot_curr_delta_set)
    __swig_setmethods__["bid_price"] = _ama.MDFutureSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDFutureSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDFutureSnapshot_bid_price_get, _ama.MDFutureSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDFutureSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDFutureSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDFutureSnapshot_bid_volume_get, _ama.MDFutureSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDFutureSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDFutureSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDFutureSnapshot_offer_price_get, _ama.MDFutureSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDFutureSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDFutureSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDFutureSnapshot_offer_volume_get, _ama.MDFutureSnapshot_offer_volume_set)
    __swig_setmethods__["average_price"] = _ama.MDFutureSnapshot_average_price_set
    __swig_getmethods__["average_price"] = _ama.MDFutureSnapshot_average_price_get
    if _newclass:average_price = _swig_property(_ama.MDFutureSnapshot_average_price_get, _ama.MDFutureSnapshot_average_price_set)
    __swig_setmethods__["trading_day"] = _ama.MDFutureSnapshot_trading_day_set
    __swig_getmethods__["trading_day"] = _ama.MDFutureSnapshot_trading_day_get
    if _newclass:trading_day = _swig_property(_ama.MDFutureSnapshot_trading_day_get, _ama.MDFutureSnapshot_trading_day_set)
    __swig_setmethods__["variety_category"] = _ama.MDFutureSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDFutureSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDFutureSnapshot_variety_category_get, _ama.MDFutureSnapshot_variety_category_set)
    __swig_setmethods__["exchange_inst_groupid"] = _ama.MDFutureSnapshot_exchange_inst_groupid_set
    __swig_getmethods__["exchange_inst_groupid"] = _ama.MDFutureSnapshot_exchange_inst_groupid_get
    if _newclass:exchange_inst_groupid = _swig_property(_ama.MDFutureSnapshot_exchange_inst_groupid_get, _ama.MDFutureSnapshot_exchange_inst_groupid_set)
    __swig_setmethods__["his_high_price"] = _ama.MDFutureSnapshot_his_high_price_set
    __swig_getmethods__["his_high_price"] = _ama.MDFutureSnapshot_his_high_price_get
    if _newclass:his_high_price = _swig_property(_ama.MDFutureSnapshot_his_high_price_get, _ama.MDFutureSnapshot_his_high_price_set)
    __swig_setmethods__["his_low_price"] = _ama.MDFutureSnapshot_his_low_price_set
    __swig_getmethods__["his_low_price"] = _ama.MDFutureSnapshot_his_low_price_get
    if _newclass:his_low_price = _swig_property(_ama.MDFutureSnapshot_his_low_price_get, _ama.MDFutureSnapshot_his_low_price_set)
    __swig_setmethods__["latest_volume_trade"] = _ama.MDFutureSnapshot_latest_volume_trade_set
    __swig_getmethods__["latest_volume_trade"] = _ama.MDFutureSnapshot_latest_volume_trade_get
    if _newclass:latest_volume_trade = _swig_property(_ama.MDFutureSnapshot_latest_volume_trade_get, _ama.MDFutureSnapshot_latest_volume_trade_set)
    __swig_setmethods__["init_volume_trade"] = _ama.MDFutureSnapshot_init_volume_trade_set
    __swig_getmethods__["init_volume_trade"] = _ama.MDFutureSnapshot_init_volume_trade_get
    if _newclass:init_volume_trade = _swig_property(_ama.MDFutureSnapshot_init_volume_trade_get, _ama.MDFutureSnapshot_init_volume_trade_set)
    __swig_setmethods__["change_volume_trade"] = _ama.MDFutureSnapshot_change_volume_trade_set
    __swig_getmethods__["change_volume_trade"] = _ama.MDFutureSnapshot_change_volume_trade_get
    if _newclass:change_volume_trade = _swig_property(_ama.MDFutureSnapshot_change_volume_trade_get, _ama.MDFutureSnapshot_change_volume_trade_set)
    __swig_setmethods__["bid_imply_volume"] = _ama.MDFutureSnapshot_bid_imply_volume_set
    __swig_getmethods__["bid_imply_volume"] = _ama.MDFutureSnapshot_bid_imply_volume_get
    if _newclass:bid_imply_volume = _swig_property(_ama.MDFutureSnapshot_bid_imply_volume_get, _ama.MDFutureSnapshot_bid_imply_volume_set)
    __swig_setmethods__["offer_imply_volume"] = _ama.MDFutureSnapshot_offer_imply_volume_set
    __swig_getmethods__["offer_imply_volume"] = _ama.MDFutureSnapshot_offer_imply_volume_get
    if _newclass:offer_imply_volume = _swig_property(_ama.MDFutureSnapshot_offer_imply_volume_get, _ama.MDFutureSnapshot_offer_imply_volume_set)
    __swig_setmethods__["arbi_type"] = _ama.MDFutureSnapshot_arbi_type_set
    __swig_getmethods__["arbi_type"] = _ama.MDFutureSnapshot_arbi_type_get
    if _newclass:arbi_type = _swig_property(_ama.MDFutureSnapshot_arbi_type_get, _ama.MDFutureSnapshot_arbi_type_set)
    __swig_setmethods__["instrument_id_1"] = _ama.MDFutureSnapshot_instrument_id_1_set
    __swig_getmethods__["instrument_id_1"] = _ama.MDFutureSnapshot_instrument_id_1_get
    if _newclass:instrument_id_1 = _swig_property(_ama.MDFutureSnapshot_instrument_id_1_get, _ama.MDFutureSnapshot_instrument_id_1_set)
    __swig_setmethods__["instrument_id_2"] = _ama.MDFutureSnapshot_instrument_id_2_set
    __swig_getmethods__["instrument_id_2"] = _ama.MDFutureSnapshot_instrument_id_2_get
    if _newclass:instrument_id_2 = _swig_property(_ama.MDFutureSnapshot_instrument_id_2_get, _ama.MDFutureSnapshot_instrument_id_2_set)
    __swig_setmethods__["instrument_name"] = _ama.MDFutureSnapshot_instrument_name_set
    __swig_getmethods__["instrument_name"] = _ama.MDFutureSnapshot_instrument_name_get
    if _newclass:instrument_name = _swig_property(_ama.MDFutureSnapshot_instrument_name_get, _ama.MDFutureSnapshot_instrument_name_set)
    __swig_setmethods__["total_bid_volume_trade"] = _ama.MDFutureSnapshot_total_bid_volume_trade_set
    __swig_getmethods__["total_bid_volume_trade"] = _ama.MDFutureSnapshot_total_bid_volume_trade_get
    if _newclass:total_bid_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_bid_volume_trade_get, _ama.MDFutureSnapshot_total_bid_volume_trade_set)
    __swig_setmethods__["total_ask_volume_trade"] = _ama.MDFutureSnapshot_total_ask_volume_trade_set
    __swig_getmethods__["total_ask_volume_trade"] = _ama.MDFutureSnapshot_total_ask_volume_trade_get
    if _newclass:total_ask_volume_trade = _swig_property(_ama.MDFutureSnapshot_total_ask_volume_trade_get, _ama.MDFutureSnapshot_total_ask_volume_trade_set)
    def __init__(self): 
        this = _ama.new_MDFutureSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDFutureSnapshot
    __del__ = lambda self : None;
MDFutureSnapshot_swigregister = _ama.MDFutureSnapshot_swigregister
MDFutureSnapshot_swigregister(MDFutureSnapshot)

class MDCSIIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCSIIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCSIIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCSIIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCSIIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCSIIndexSnapshot_market_type_get, _ama.MDCSIIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDCSIIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCSIIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCSIIndexSnapshot_security_code_get, _ama.MDCSIIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDCSIIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCSIIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCSIIndexSnapshot_orig_time_get, _ama.MDCSIIndexSnapshot_orig_time_set)
    __swig_setmethods__["last_index"] = _ama.MDCSIIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDCSIIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDCSIIndexSnapshot_last_index_get, _ama.MDCSIIndexSnapshot_last_index_set)
    __swig_setmethods__["open_index"] = _ama.MDCSIIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDCSIIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDCSIIndexSnapshot_open_index_get, _ama.MDCSIIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDCSIIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDCSIIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDCSIIndexSnapshot_high_index_get, _ama.MDCSIIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDCSIIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDCSIIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDCSIIndexSnapshot_low_index_get, _ama.MDCSIIndexSnapshot_low_index_set)
    __swig_setmethods__["close_index"] = _ama.MDCSIIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDCSIIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDCSIIndexSnapshot_close_index_get, _ama.MDCSIIndexSnapshot_close_index_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDCSIIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDCSIIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDCSIIndexSnapshot_pre_close_index_get, _ama.MDCSIIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["change"] = _ama.MDCSIIndexSnapshot_change_set
    __swig_getmethods__["change"] = _ama.MDCSIIndexSnapshot_change_get
    if _newclass:change = _swig_property(_ama.MDCSIIndexSnapshot_change_get, _ama.MDCSIIndexSnapshot_change_set)
    __swig_setmethods__["ratio_of_change"] = _ama.MDCSIIndexSnapshot_ratio_of_change_set
    __swig_getmethods__["ratio_of_change"] = _ama.MDCSIIndexSnapshot_ratio_of_change_get
    if _newclass:ratio_of_change = _swig_property(_ama.MDCSIIndexSnapshot_ratio_of_change_get, _ama.MDCSIIndexSnapshot_ratio_of_change_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCSIIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCSIIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCSIIndexSnapshot_total_volume_trade_get, _ama.MDCSIIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDCSIIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDCSIIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDCSIIndexSnapshot_total_value_trade_get, _ama.MDCSIIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["exchange_rate"] = _ama.MDCSIIndexSnapshot_exchange_rate_set
    __swig_getmethods__["exchange_rate"] = _ama.MDCSIIndexSnapshot_exchange_rate_get
    if _newclass:exchange_rate = _swig_property(_ama.MDCSIIndexSnapshot_exchange_rate_get, _ama.MDCSIIndexSnapshot_exchange_rate_set)
    __swig_setmethods__["currency_symbol"] = _ama.MDCSIIndexSnapshot_currency_symbol_set
    __swig_getmethods__["currency_symbol"] = _ama.MDCSIIndexSnapshot_currency_symbol_get
    if _newclass:currency_symbol = _swig_property(_ama.MDCSIIndexSnapshot_currency_symbol_get, _ama.MDCSIIndexSnapshot_currency_symbol_set)
    __swig_setmethods__["close_index2"] = _ama.MDCSIIndexSnapshot_close_index2_set
    __swig_getmethods__["close_index2"] = _ama.MDCSIIndexSnapshot_close_index2_get
    if _newclass:close_index2 = _swig_property(_ama.MDCSIIndexSnapshot_close_index2_get, _ama.MDCSIIndexSnapshot_close_index2_set)
    __swig_setmethods__["close_index3"] = _ama.MDCSIIndexSnapshot_close_index3_set
    __swig_getmethods__["close_index3"] = _ama.MDCSIIndexSnapshot_close_index3_get
    if _newclass:close_index3 = _swig_property(_ama.MDCSIIndexSnapshot_close_index3_get, _ama.MDCSIIndexSnapshot_close_index3_set)
    __swig_setmethods__["index_market"] = _ama.MDCSIIndexSnapshot_index_market_set
    __swig_getmethods__["index_market"] = _ama.MDCSIIndexSnapshot_index_market_get
    if _newclass:index_market = _swig_property(_ama.MDCSIIndexSnapshot_index_market_get, _ama.MDCSIIndexSnapshot_index_market_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDCSIIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDCSIIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDCSIIndexSnapshot_md_stream_id_get, _ama.MDCSIIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDCSIIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCSIIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCSIIndexSnapshot_variety_category_get, _ama.MDCSIIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCSIIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCSIIndexSnapshot
    __del__ = lambda self : None;
MDCSIIndexSnapshot_swigregister = _ama.MDCSIIndexSnapshot_swigregister
MDCSIIndexSnapshot_swigregister(MDCSIIndexSnapshot)

class MDIndicatorOfTradingVolumeSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDIndicatorOfTradingVolumeSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDIndicatorOfTradingVolumeSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_market_type_get, _ama.MDIndicatorOfTradingVolumeSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_security_code_get, _ama.MDIndicatorOfTradingVolumeSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_get, _ama.MDIndicatorOfTradingVolumeSnapshot_orig_time_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_get, _ama.MDIndicatorOfTradingVolumeSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_get, _ama.MDIndicatorOfTradingVolumeSnapshot_total_value_trade_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_get, _ama.MDIndicatorOfTradingVolumeSnapshot_pre_close_price_set)
    __swig_setmethods__["stock_num"] = _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_set
    __swig_getmethods__["stock_num"] = _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_get
    if _newclass:stock_num = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_get, _ama.MDIndicatorOfTradingVolumeSnapshot_stock_num_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_get, _ama.MDIndicatorOfTradingVolumeSnapshot_trading_phase_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_get, _ama.MDIndicatorOfTradingVolumeSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_get, _ama.MDIndicatorOfTradingVolumeSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_get, _ama.MDIndicatorOfTradingVolumeSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDIndicatorOfTradingVolumeSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDIndicatorOfTradingVolumeSnapshot
    __del__ = lambda self : None;
MDIndicatorOfTradingVolumeSnapshot_swigregister = _ama.MDIndicatorOfTradingVolumeSnapshot_swigregister
MDIndicatorOfTradingVolumeSnapshot_swigregister(MDIndicatorOfTradingVolumeSnapshot)

class MDCnIndexSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDCnIndexSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDCnIndexSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDCnIndexSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDCnIndexSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDCnIndexSnapshot_market_type_get, _ama.MDCnIndexSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDCnIndexSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDCnIndexSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDCnIndexSnapshot_security_code_get, _ama.MDCnIndexSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDCnIndexSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDCnIndexSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDCnIndexSnapshot_orig_time_get, _ama.MDCnIndexSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDCnIndexSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDCnIndexSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDCnIndexSnapshot_trading_phase_code_get, _ama.MDCnIndexSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_index"] = _ama.MDCnIndexSnapshot_pre_close_index_set
    __swig_getmethods__["pre_close_index"] = _ama.MDCnIndexSnapshot_pre_close_index_get
    if _newclass:pre_close_index = _swig_property(_ama.MDCnIndexSnapshot_pre_close_index_get, _ama.MDCnIndexSnapshot_pre_close_index_set)
    __swig_setmethods__["open_index"] = _ama.MDCnIndexSnapshot_open_index_set
    __swig_getmethods__["open_index"] = _ama.MDCnIndexSnapshot_open_index_get
    if _newclass:open_index = _swig_property(_ama.MDCnIndexSnapshot_open_index_get, _ama.MDCnIndexSnapshot_open_index_set)
    __swig_setmethods__["high_index"] = _ama.MDCnIndexSnapshot_high_index_set
    __swig_getmethods__["high_index"] = _ama.MDCnIndexSnapshot_high_index_get
    if _newclass:high_index = _swig_property(_ama.MDCnIndexSnapshot_high_index_get, _ama.MDCnIndexSnapshot_high_index_set)
    __swig_setmethods__["low_index"] = _ama.MDCnIndexSnapshot_low_index_set
    __swig_getmethods__["low_index"] = _ama.MDCnIndexSnapshot_low_index_get
    if _newclass:low_index = _swig_property(_ama.MDCnIndexSnapshot_low_index_get, _ama.MDCnIndexSnapshot_low_index_set)
    __swig_setmethods__["last_index"] = _ama.MDCnIndexSnapshot_last_index_set
    __swig_getmethods__["last_index"] = _ama.MDCnIndexSnapshot_last_index_get
    if _newclass:last_index = _swig_property(_ama.MDCnIndexSnapshot_last_index_get, _ama.MDCnIndexSnapshot_last_index_set)
    __swig_setmethods__["close_index"] = _ama.MDCnIndexSnapshot_close_index_set
    __swig_getmethods__["close_index"] = _ama.MDCnIndexSnapshot_close_index_get
    if _newclass:close_index = _swig_property(_ama.MDCnIndexSnapshot_close_index_get, _ama.MDCnIndexSnapshot_close_index_set)
    __swig_setmethods__["close_index2"] = _ama.MDCnIndexSnapshot_close_index2_set
    __swig_getmethods__["close_index2"] = _ama.MDCnIndexSnapshot_close_index2_get
    if _newclass:close_index2 = _swig_property(_ama.MDCnIndexSnapshot_close_index2_get, _ama.MDCnIndexSnapshot_close_index2_set)
    __swig_setmethods__["close_index3"] = _ama.MDCnIndexSnapshot_close_index3_set
    __swig_getmethods__["close_index3"] = _ama.MDCnIndexSnapshot_close_index3_get
    if _newclass:close_index3 = _swig_property(_ama.MDCnIndexSnapshot_close_index3_get, _ama.MDCnIndexSnapshot_close_index3_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDCnIndexSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDCnIndexSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDCnIndexSnapshot_total_volume_trade_get, _ama.MDCnIndexSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDCnIndexSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDCnIndexSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDCnIndexSnapshot_total_value_trade_get, _ama.MDCnIndexSnapshot_total_value_trade_set)
    __swig_setmethods__["channel_no"] = _ama.MDCnIndexSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDCnIndexSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDCnIndexSnapshot_channel_no_get, _ama.MDCnIndexSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDCnIndexSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDCnIndexSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDCnIndexSnapshot_md_stream_id_get, _ama.MDCnIndexSnapshot_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDCnIndexSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDCnIndexSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDCnIndexSnapshot_variety_category_get, _ama.MDCnIndexSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDCnIndexSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDCnIndexSnapshot
    __del__ = lambda self : None;
MDCnIndexSnapshot_swigregister = _ama.MDCnIndexSnapshot_swigregister
MDCnIndexSnapshot_swigregister(MDCnIndexSnapshot)

class MDRefinancingTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDRefinancingTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDRefinancingTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDRefinancingTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDRefinancingTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDRefinancingTickOrder_market_type_get, _ama.MDRefinancingTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDRefinancingTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDRefinancingTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDRefinancingTickOrder_security_code_get, _ama.MDRefinancingTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDRefinancingTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDRefinancingTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDRefinancingTickOrder_channel_no_get, _ama.MDRefinancingTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDRefinancingTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDRefinancingTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDRefinancingTickOrder_appl_seq_num_get, _ama.MDRefinancingTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDRefinancingTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDRefinancingTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDRefinancingTickOrder_order_time_get, _ama.MDRefinancingTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDRefinancingTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDRefinancingTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDRefinancingTickOrder_order_price_get, _ama.MDRefinancingTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDRefinancingTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDRefinancingTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDRefinancingTickOrder_order_volume_get, _ama.MDRefinancingTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDRefinancingTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDRefinancingTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDRefinancingTickOrder_side_get, _ama.MDRefinancingTickOrder_side_set)
    __swig_setmethods__["expiration_days"] = _ama.MDRefinancingTickOrder_expiration_days_set
    __swig_getmethods__["expiration_days"] = _ama.MDRefinancingTickOrder_expiration_days_get
    if _newclass:expiration_days = _swig_property(_ama.MDRefinancingTickOrder_expiration_days_get, _ama.MDRefinancingTickOrder_expiration_days_set)
    __swig_setmethods__["expiration_type"] = _ama.MDRefinancingTickOrder_expiration_type_set
    __swig_getmethods__["expiration_type"] = _ama.MDRefinancingTickOrder_expiration_type_get
    if _newclass:expiration_type = _swig_property(_ama.MDRefinancingTickOrder_expiration_type_get, _ama.MDRefinancingTickOrder_expiration_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDRefinancingTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDRefinancingTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDRefinancingTickOrder_md_stream_id_get, _ama.MDRefinancingTickOrder_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDRefinancingTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDRefinancingTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDRefinancingTickOrder_variety_category_get, _ama.MDRefinancingTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDRefinancingTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDRefinancingTickOrder
    __del__ = lambda self : None;
MDRefinancingTickOrder_swigregister = _ama.MDRefinancingTickOrder_swigregister
MDRefinancingTickOrder_swigregister(MDRefinancingTickOrder)

class MDRefinancingTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDRefinancingTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDRefinancingTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDRefinancingTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDRefinancingTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDRefinancingTickExecution_market_type_get, _ama.MDRefinancingTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDRefinancingTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDRefinancingTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDRefinancingTickExecution_security_code_get, _ama.MDRefinancingTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDRefinancingTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDRefinancingTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDRefinancingTickExecution_exec_time_get, _ama.MDRefinancingTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDRefinancingTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDRefinancingTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDRefinancingTickExecution_channel_no_get, _ama.MDRefinancingTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDRefinancingTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDRefinancingTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_appl_seq_num_get, _ama.MDRefinancingTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDRefinancingTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDRefinancingTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDRefinancingTickExecution_exec_price_get, _ama.MDRefinancingTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDRefinancingTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDRefinancingTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDRefinancingTickExecution_exec_volume_get, _ama.MDRefinancingTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDRefinancingTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDRefinancingTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDRefinancingTickExecution_value_trade_get, _ama.MDRefinancingTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDRefinancingTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDRefinancingTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_bid_appl_seq_num_get, _ama.MDRefinancingTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDRefinancingTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDRefinancingTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDRefinancingTickExecution_offer_appl_seq_num_get, _ama.MDRefinancingTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDRefinancingTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDRefinancingTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDRefinancingTickExecution_side_get, _ama.MDRefinancingTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDRefinancingTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDRefinancingTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDRefinancingTickExecution_exec_type_get, _ama.MDRefinancingTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDRefinancingTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDRefinancingTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDRefinancingTickExecution_md_stream_id_get, _ama.MDRefinancingTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDRefinancingTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDRefinancingTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDRefinancingTickExecution_variety_category_get, _ama.MDRefinancingTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDRefinancingTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDRefinancingTickExecution
    __del__ = lambda self : None;
MDRefinancingTickExecution_swigregister = _ama.MDRefinancingTickExecution_swigregister
MDRefinancingTickExecution_swigregister(MDRefinancingTickExecution)

class MDNegotiableTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNegotiableTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNegotiableTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNegotiableTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNegotiableTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNegotiableTickOrder_market_type_get, _ama.MDNegotiableTickOrder_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNegotiableTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNegotiableTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNegotiableTickOrder_security_code_get, _ama.MDNegotiableTickOrder_security_code_set)
    __swig_setmethods__["channel_no"] = _ama.MDNegotiableTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDNegotiableTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDNegotiableTickOrder_channel_no_get, _ama.MDNegotiableTickOrder_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDNegotiableTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDNegotiableTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDNegotiableTickOrder_appl_seq_num_get, _ama.MDNegotiableTickOrder_appl_seq_num_set)
    __swig_setmethods__["order_time"] = _ama.MDNegotiableTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDNegotiableTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDNegotiableTickOrder_order_time_get, _ama.MDNegotiableTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDNegotiableTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDNegotiableTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDNegotiableTickOrder_order_price_get, _ama.MDNegotiableTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDNegotiableTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDNegotiableTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDNegotiableTickOrder_order_volume_get, _ama.MDNegotiableTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDNegotiableTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDNegotiableTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDNegotiableTickOrder_side_get, _ama.MDNegotiableTickOrder_side_set)
    __swig_setmethods__["confirm_id"] = _ama.MDNegotiableTickOrder_confirm_id_set
    __swig_getmethods__["confirm_id"] = _ama.MDNegotiableTickOrder_confirm_id_get
    if _newclass:confirm_id = _swig_property(_ama.MDNegotiableTickOrder_confirm_id_get, _ama.MDNegotiableTickOrder_confirm_id_set)
    __swig_setmethods__["contactor"] = _ama.MDNegotiableTickOrder_contactor_set
    __swig_getmethods__["contactor"] = _ama.MDNegotiableTickOrder_contactor_get
    if _newclass:contactor = _swig_property(_ama.MDNegotiableTickOrder_contactor_get, _ama.MDNegotiableTickOrder_contactor_set)
    __swig_setmethods__["contact_info"] = _ama.MDNegotiableTickOrder_contact_info_set
    __swig_getmethods__["contact_info"] = _ama.MDNegotiableTickOrder_contact_info_get
    if _newclass:contact_info = _swig_property(_ama.MDNegotiableTickOrder_contact_info_get, _ama.MDNegotiableTickOrder_contact_info_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNegotiableTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNegotiableTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNegotiableTickOrder_md_stream_id_get, _ama.MDNegotiableTickOrder_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDNegotiableTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNegotiableTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNegotiableTickOrder_variety_category_get, _ama.MDNegotiableTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNegotiableTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNegotiableTickOrder
    __del__ = lambda self : None;
MDNegotiableTickOrder_swigregister = _ama.MDNegotiableTickOrder_swigregister
MDNegotiableTickOrder_swigregister(MDNegotiableTickOrder)

class MDNegotiableTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNegotiableTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNegotiableTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNegotiableTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNegotiableTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNegotiableTickExecution_market_type_get, _ama.MDNegotiableTickExecution_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNegotiableTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNegotiableTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNegotiableTickExecution_security_code_get, _ama.MDNegotiableTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDNegotiableTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDNegotiableTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDNegotiableTickExecution_exec_time_get, _ama.MDNegotiableTickExecution_exec_time_set)
    __swig_setmethods__["channel_no"] = _ama.MDNegotiableTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDNegotiableTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDNegotiableTickExecution_channel_no_get, _ama.MDNegotiableTickExecution_channel_no_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDNegotiableTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDNegotiableTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_appl_seq_num_get, _ama.MDNegotiableTickExecution_appl_seq_num_set)
    __swig_setmethods__["exec_price"] = _ama.MDNegotiableTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDNegotiableTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDNegotiableTickExecution_exec_price_get, _ama.MDNegotiableTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDNegotiableTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDNegotiableTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDNegotiableTickExecution_exec_volume_get, _ama.MDNegotiableTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDNegotiableTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDNegotiableTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDNegotiableTickExecution_value_trade_get, _ama.MDNegotiableTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDNegotiableTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDNegotiableTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_bid_appl_seq_num_get, _ama.MDNegotiableTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDNegotiableTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDNegotiableTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDNegotiableTickExecution_offer_appl_seq_num_get, _ama.MDNegotiableTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDNegotiableTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDNegotiableTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDNegotiableTickExecution_side_get, _ama.MDNegotiableTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDNegotiableTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDNegotiableTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDNegotiableTickExecution_exec_type_get, _ama.MDNegotiableTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNegotiableTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNegotiableTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNegotiableTickExecution_md_stream_id_get, _ama.MDNegotiableTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDNegotiableTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNegotiableTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNegotiableTickExecution_variety_category_get, _ama.MDNegotiableTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNegotiableTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNegotiableTickExecution
    __del__ = lambda self : None;
MDNegotiableTickExecution_swigregister = _ama.MDNegotiableTickExecution_swigregister
MDNegotiableTickExecution_swigregister(MDNegotiableTickExecution)

class MDHKTRealtimeLimit(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTRealtimeLimit, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTRealtimeLimit, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTRealtimeLimit_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTRealtimeLimit_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTRealtimeLimit_market_type_get, _ama.MDHKTRealtimeLimit_market_type_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTRealtimeLimit_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTRealtimeLimit_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTRealtimeLimit_orig_time_get, _ama.MDHKTRealtimeLimit_orig_time_set)
    __swig_setmethods__["threshold_amount"] = _ama.MDHKTRealtimeLimit_threshold_amount_set
    __swig_getmethods__["threshold_amount"] = _ama.MDHKTRealtimeLimit_threshold_amount_get
    if _newclass:threshold_amount = _swig_property(_ama.MDHKTRealtimeLimit_threshold_amount_get, _ama.MDHKTRealtimeLimit_threshold_amount_set)
    __swig_setmethods__["pos_amt"] = _ama.MDHKTRealtimeLimit_pos_amt_set
    __swig_getmethods__["pos_amt"] = _ama.MDHKTRealtimeLimit_pos_amt_get
    if _newclass:pos_amt = _swig_property(_ama.MDHKTRealtimeLimit_pos_amt_get, _ama.MDHKTRealtimeLimit_pos_amt_set)
    __swig_setmethods__["amount_status"] = _ama.MDHKTRealtimeLimit_amount_status_set
    __swig_getmethods__["amount_status"] = _ama.MDHKTRealtimeLimit_amount_status_get
    if _newclass:amount_status = _swig_property(_ama.MDHKTRealtimeLimit_amount_status_get, _ama.MDHKTRealtimeLimit_amount_status_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTRealtimeLimit_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTRealtimeLimit_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTRealtimeLimit_channel_no_get, _ama.MDHKTRealtimeLimit_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTRealtimeLimit_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTRealtimeLimit_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTRealtimeLimit_md_stream_id_get, _ama.MDHKTRealtimeLimit_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTRealtimeLimit_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTRealtimeLimit_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTRealtimeLimit_variety_category_get, _ama.MDHKTRealtimeLimit_variety_category_set)
    __swig_setmethods__["mkt_status"] = _ama.MDHKTRealtimeLimit_mkt_status_set
    __swig_getmethods__["mkt_status"] = _ama.MDHKTRealtimeLimit_mkt_status_get
    if _newclass:mkt_status = _swig_property(_ama.MDHKTRealtimeLimit_mkt_status_get, _ama.MDHKTRealtimeLimit_mkt_status_set)
    def __init__(self): 
        this = _ama.new_MDHKTRealtimeLimit()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTRealtimeLimit
    __del__ = lambda self : None;
MDHKTRealtimeLimit_swigregister = _ama.MDHKTRealtimeLimit_swigregister
MDHKTRealtimeLimit_swigregister(MDHKTRealtimeLimit)

class MDHKTProductStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKTProductStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKTProductStatus, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKTProductStatus_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKTProductStatus_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKTProductStatus_market_type_get, _ama.MDHKTProductStatus_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDHKTProductStatus_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDHKTProductStatus_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDHKTProductStatus_security_code_get, _ama.MDHKTProductStatus_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKTProductStatus_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKTProductStatus_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKTProductStatus_orig_time_get, _ama.MDHKTProductStatus_orig_time_set)
    __swig_setmethods__["trading_status1"] = _ama.MDHKTProductStatus_trading_status1_set
    __swig_getmethods__["trading_status1"] = _ama.MDHKTProductStatus_trading_status1_get
    if _newclass:trading_status1 = _swig_property(_ama.MDHKTProductStatus_trading_status1_get, _ama.MDHKTProductStatus_trading_status1_set)
    __swig_setmethods__["trading_status2"] = _ama.MDHKTProductStatus_trading_status2_set
    __swig_getmethods__["trading_status2"] = _ama.MDHKTProductStatus_trading_status2_get
    if _newclass:trading_status2 = _swig_property(_ama.MDHKTProductStatus_trading_status2_get, _ama.MDHKTProductStatus_trading_status2_set)
    __swig_setmethods__["channel_no"] = _ama.MDHKTProductStatus_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDHKTProductStatus_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDHKTProductStatus_channel_no_get, _ama.MDHKTProductStatus_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDHKTProductStatus_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDHKTProductStatus_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDHKTProductStatus_md_stream_id_get, _ama.MDHKTProductStatus_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKTProductStatus_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKTProductStatus_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKTProductStatus_variety_category_get, _ama.MDHKTProductStatus_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKTProductStatus()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKTProductStatus
    __del__ = lambda self : None;
MDHKTProductStatus_swigregister = _ama.MDHKTProductStatus_swigregister
MDHKTProductStatus_swigregister(MDHKTProductStatus)

class MDHKMarketStatus(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDHKMarketStatus, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDHKMarketStatus, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDHKMarketStatus_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDHKMarketStatus_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDHKMarketStatus_market_type_get, _ama.MDHKMarketStatus_market_type_set)
    __swig_setmethods__["orig_time"] = _ama.MDHKMarketStatus_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDHKMarketStatus_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDHKMarketStatus_orig_time_get, _ama.MDHKMarketStatus_orig_time_set)
    __swig_setmethods__["trading_session_sub_id"] = _ama.MDHKMarketStatus_trading_session_sub_id_set
    __swig_getmethods__["trading_session_sub_id"] = _ama.MDHKMarketStatus_trading_session_sub_id_get
    if _newclass:trading_session_sub_id = _swig_property(_ama.MDHKMarketStatus_trading_session_sub_id_get, _ama.MDHKMarketStatus_trading_session_sub_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDHKMarketStatus_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDHKMarketStatus_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDHKMarketStatus_variety_category_get, _ama.MDHKMarketStatus_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDHKMarketStatus()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDHKMarketStatus
    __del__ = lambda self : None;
MDHKMarketStatus_swigregister = _ama.MDHKMarketStatus_swigregister
MDHKMarketStatus_swigregister(MDHKMarketStatus)

class MDNEEQSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQSnapshot_market_type_get, _ama.MDNEEQSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQSnapshot_security_code_get, _ama.MDNEEQSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQSnapshot_orig_time_get, _ama.MDNEEQSnapshot_orig_time_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDNEEQSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDNEEQSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDNEEQSnapshot_pre_close_price_get, _ama.MDNEEQSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDNEEQSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDNEEQSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDNEEQSnapshot_open_price_get, _ama.MDNEEQSnapshot_open_price_set)
    __swig_setmethods__["last_price"] = _ama.MDNEEQSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDNEEQSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDNEEQSnapshot_last_price_get, _ama.MDNEEQSnapshot_last_price_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDNEEQSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDNEEQSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDNEEQSnapshot_total_volume_trade_get, _ama.MDNEEQSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDNEEQSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDNEEQSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDNEEQSnapshot_total_value_trade_get, _ama.MDNEEQSnapshot_total_value_trade_set)
    __swig_setmethods__["num_trades"] = _ama.MDNEEQSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDNEEQSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDNEEQSnapshot_num_trades_get, _ama.MDNEEQSnapshot_num_trades_set)
    __swig_setmethods__["high_price"] = _ama.MDNEEQSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDNEEQSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDNEEQSnapshot_high_price_get, _ama.MDNEEQSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDNEEQSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDNEEQSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDNEEQSnapshot_low_price_get, _ama.MDNEEQSnapshot_low_price_set)
    __swig_setmethods__["price_earning_ratio1"] = _ama.MDNEEQSnapshot_price_earning_ratio1_set
    __swig_getmethods__["price_earning_ratio1"] = _ama.MDNEEQSnapshot_price_earning_ratio1_get
    if _newclass:price_earning_ratio1 = _swig_property(_ama.MDNEEQSnapshot_price_earning_ratio1_get, _ama.MDNEEQSnapshot_price_earning_ratio1_set)
    __swig_setmethods__["price_earning_ratio2"] = _ama.MDNEEQSnapshot_price_earning_ratio2_set
    __swig_getmethods__["price_earning_ratio2"] = _ama.MDNEEQSnapshot_price_earning_ratio2_get
    if _newclass:price_earning_ratio2 = _swig_property(_ama.MDNEEQSnapshot_price_earning_ratio2_get, _ama.MDNEEQSnapshot_price_earning_ratio2_set)
    __swig_setmethods__["change1"] = _ama.MDNEEQSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDNEEQSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDNEEQSnapshot_change1_get, _ama.MDNEEQSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDNEEQSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDNEEQSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDNEEQSnapshot_change2_get, _ama.MDNEEQSnapshot_change2_set)
    __swig_setmethods__["open_interest"] = _ama.MDNEEQSnapshot_open_interest_set
    __swig_getmethods__["open_interest"] = _ama.MDNEEQSnapshot_open_interest_get
    if _newclass:open_interest = _swig_property(_ama.MDNEEQSnapshot_open_interest_get, _ama.MDNEEQSnapshot_open_interest_set)
    __swig_setmethods__["bid_price"] = _ama.MDNEEQSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDNEEQSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDNEEQSnapshot_bid_price_get, _ama.MDNEEQSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDNEEQSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDNEEQSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDNEEQSnapshot_bid_volume_get, _ama.MDNEEQSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDNEEQSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDNEEQSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDNEEQSnapshot_offer_price_get, _ama.MDNEEQSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDNEEQSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDNEEQSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDNEEQSnapshot_offer_volume_get, _ama.MDNEEQSnapshot_offer_volume_set)
    __swig_setmethods__["index_factor"] = _ama.MDNEEQSnapshot_index_factor_set
    __swig_getmethods__["index_factor"] = _ama.MDNEEQSnapshot_index_factor_get
    if _newclass:index_factor = _swig_property(_ama.MDNEEQSnapshot_index_factor_get, _ama.MDNEEQSnapshot_index_factor_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDNEEQSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDNEEQSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDNEEQSnapshot_trading_phase_code_get, _ama.MDNEEQSnapshot_trading_phase_code_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQSnapshot_variety_category_get, _ama.MDNEEQSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQSnapshot
    __del__ = lambda self : None;
MDNEEQSnapshot_swigregister = _ama.MDNEEQSnapshot_swigregister
MDNEEQSnapshot_swigregister(MDNEEQSnapshot)

class MDNEEQSecurityInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQSecurityInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQSecurityInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQSecurityInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQSecurityInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQSecurityInfo_market_type_get, _ama.MDNEEQSecurityInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQSecurityInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQSecurityInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQSecurityInfo_security_code_get, _ama.MDNEEQSecurityInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQSecurityInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQSecurityInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQSecurityInfo_orig_time_get, _ama.MDNEEQSecurityInfo_orig_time_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQSecurityInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQSecurityInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQSecurityInfo_security_abbreviation_get, _ama.MDNEEQSecurityInfo_security_abbreviation_set)
    __swig_setmethods__["underlying_security"] = _ama.MDNEEQSecurityInfo_underlying_security_set
    __swig_getmethods__["underlying_security"] = _ama.MDNEEQSecurityInfo_underlying_security_get
    if _newclass:underlying_security = _swig_property(_ama.MDNEEQSecurityInfo_underlying_security_get, _ama.MDNEEQSecurityInfo_underlying_security_set)
    __swig_setmethods__["ISIN"] = _ama.MDNEEQSecurityInfo_ISIN_set
    __swig_getmethods__["ISIN"] = _ama.MDNEEQSecurityInfo_ISIN_get
    if _newclass:ISIN = _swig_property(_ama.MDNEEQSecurityInfo_ISIN_get, _ama.MDNEEQSecurityInfo_ISIN_set)
    __swig_setmethods__["trading_unit"] = _ama.MDNEEQSecurityInfo_trading_unit_set
    __swig_getmethods__["trading_unit"] = _ama.MDNEEQSecurityInfo_trading_unit_get
    if _newclass:trading_unit = _swig_property(_ama.MDNEEQSecurityInfo_trading_unit_get, _ama.MDNEEQSecurityInfo_trading_unit_set)
    __swig_setmethods__["industry_type"] = _ama.MDNEEQSecurityInfo_industry_type_set
    __swig_getmethods__["industry_type"] = _ama.MDNEEQSecurityInfo_industry_type_get
    if _newclass:industry_type = _swig_property(_ama.MDNEEQSecurityInfo_industry_type_get, _ama.MDNEEQSecurityInfo_industry_type_set)
    __swig_setmethods__["currency"] = _ama.MDNEEQSecurityInfo_currency_set
    __swig_getmethods__["currency"] = _ama.MDNEEQSecurityInfo_currency_get
    if _newclass:currency = _swig_property(_ama.MDNEEQSecurityInfo_currency_get, _ama.MDNEEQSecurityInfo_currency_set)
    __swig_setmethods__["par_value"] = _ama.MDNEEQSecurityInfo_par_value_set
    __swig_getmethods__["par_value"] = _ama.MDNEEQSecurityInfo_par_value_get
    if _newclass:par_value = _swig_property(_ama.MDNEEQSecurityInfo_par_value_get, _ama.MDNEEQSecurityInfo_par_value_set)
    __swig_setmethods__["general_capital"] = _ama.MDNEEQSecurityInfo_general_capital_set
    __swig_getmethods__["general_capital"] = _ama.MDNEEQSecurityInfo_general_capital_get
    if _newclass:general_capital = _swig_property(_ama.MDNEEQSecurityInfo_general_capital_get, _ama.MDNEEQSecurityInfo_general_capital_set)
    __swig_setmethods__["unrestricted_capital"] = _ama.MDNEEQSecurityInfo_unrestricted_capital_set
    __swig_getmethods__["unrestricted_capital"] = _ama.MDNEEQSecurityInfo_unrestricted_capital_get
    if _newclass:unrestricted_capital = _swig_property(_ama.MDNEEQSecurityInfo_unrestricted_capital_get, _ama.MDNEEQSecurityInfo_unrestricted_capital_set)
    __swig_setmethods__["last_year_earning"] = _ama.MDNEEQSecurityInfo_last_year_earning_set
    __swig_getmethods__["last_year_earning"] = _ama.MDNEEQSecurityInfo_last_year_earning_get
    if _newclass:last_year_earning = _swig_property(_ama.MDNEEQSecurityInfo_last_year_earning_get, _ama.MDNEEQSecurityInfo_last_year_earning_set)
    __swig_setmethods__["cur_year_earning"] = _ama.MDNEEQSecurityInfo_cur_year_earning_set
    __swig_getmethods__["cur_year_earning"] = _ama.MDNEEQSecurityInfo_cur_year_earning_get
    if _newclass:cur_year_earning = _swig_property(_ama.MDNEEQSecurityInfo_cur_year_earning_get, _ama.MDNEEQSecurityInfo_cur_year_earning_set)
    __swig_setmethods__["brokerage_rate"] = _ama.MDNEEQSecurityInfo_brokerage_rate_set
    __swig_getmethods__["brokerage_rate"] = _ama.MDNEEQSecurityInfo_brokerage_rate_get
    if _newclass:brokerage_rate = _swig_property(_ama.MDNEEQSecurityInfo_brokerage_rate_get, _ama.MDNEEQSecurityInfo_brokerage_rate_set)
    __swig_setmethods__["stamp_duty_rate"] = _ama.MDNEEQSecurityInfo_stamp_duty_rate_set
    __swig_getmethods__["stamp_duty_rate"] = _ama.MDNEEQSecurityInfo_stamp_duty_rate_get
    if _newclass:stamp_duty_rate = _swig_property(_ama.MDNEEQSecurityInfo_stamp_duty_rate_get, _ama.MDNEEQSecurityInfo_stamp_duty_rate_set)
    __swig_setmethods__["transfer_fee_rate"] = _ama.MDNEEQSecurityInfo_transfer_fee_rate_set
    __swig_getmethods__["transfer_fee_rate"] = _ama.MDNEEQSecurityInfo_transfer_fee_rate_get
    if _newclass:transfer_fee_rate = _swig_property(_ama.MDNEEQSecurityInfo_transfer_fee_rate_get, _ama.MDNEEQSecurityInfo_transfer_fee_rate_set)
    __swig_setmethods__["listing_date"] = _ama.MDNEEQSecurityInfo_listing_date_set
    __swig_getmethods__["listing_date"] = _ama.MDNEEQSecurityInfo_listing_date_get
    if _newclass:listing_date = _swig_property(_ama.MDNEEQSecurityInfo_listing_date_get, _ama.MDNEEQSecurityInfo_listing_date_set)
    __swig_setmethods__["value_date"] = _ama.MDNEEQSecurityInfo_value_date_set
    __swig_getmethods__["value_date"] = _ama.MDNEEQSecurityInfo_value_date_get
    if _newclass:value_date = _swig_property(_ama.MDNEEQSecurityInfo_value_date_get, _ama.MDNEEQSecurityInfo_value_date_set)
    __swig_setmethods__["expiring_date"] = _ama.MDNEEQSecurityInfo_expiring_date_set
    __swig_getmethods__["expiring_date"] = _ama.MDNEEQSecurityInfo_expiring_date_get
    if _newclass:expiring_date = _swig_property(_ama.MDNEEQSecurityInfo_expiring_date_get, _ama.MDNEEQSecurityInfo_expiring_date_set)
    __swig_setmethods__["every_limited"] = _ama.MDNEEQSecurityInfo_every_limited_set
    __swig_getmethods__["every_limited"] = _ama.MDNEEQSecurityInfo_every_limited_get
    if _newclass:every_limited = _swig_property(_ama.MDNEEQSecurityInfo_every_limited_get, _ama.MDNEEQSecurityInfo_every_limited_set)
    __swig_setmethods__["buy_amount_unit"] = _ama.MDNEEQSecurityInfo_buy_amount_unit_set
    __swig_getmethods__["buy_amount_unit"] = _ama.MDNEEQSecurityInfo_buy_amount_unit_get
    if _newclass:buy_amount_unit = _swig_property(_ama.MDNEEQSecurityInfo_buy_amount_unit_get, _ama.MDNEEQSecurityInfo_buy_amount_unit_set)
    __swig_setmethods__["sell_amount_unit"] = _ama.MDNEEQSecurityInfo_sell_amount_unit_set
    __swig_getmethods__["sell_amount_unit"] = _ama.MDNEEQSecurityInfo_sell_amount_unit_get
    if _newclass:sell_amount_unit = _swig_property(_ama.MDNEEQSecurityInfo_sell_amount_unit_get, _ama.MDNEEQSecurityInfo_sell_amount_unit_set)
    __swig_setmethods__["mini_dec_amount"] = _ama.MDNEEQSecurityInfo_mini_dec_amount_set
    __swig_getmethods__["mini_dec_amount"] = _ama.MDNEEQSecurityInfo_mini_dec_amount_get
    if _newclass:mini_dec_amount = _swig_property(_ama.MDNEEQSecurityInfo_mini_dec_amount_get, _ama.MDNEEQSecurityInfo_mini_dec_amount_set)
    __swig_setmethods__["price_level"] = _ama.MDNEEQSecurityInfo_price_level_set
    __swig_getmethods__["price_level"] = _ama.MDNEEQSecurityInfo_price_level_get
    if _newclass:price_level = _swig_property(_ama.MDNEEQSecurityInfo_price_level_get, _ama.MDNEEQSecurityInfo_price_level_set)
    __swig_setmethods__["first_trade_limit"] = _ama.MDNEEQSecurityInfo_first_trade_limit_set
    __swig_getmethods__["first_trade_limit"] = _ama.MDNEEQSecurityInfo_first_trade_limit_get
    if _newclass:first_trade_limit = _swig_property(_ama.MDNEEQSecurityInfo_first_trade_limit_get, _ama.MDNEEQSecurityInfo_first_trade_limit_set)
    __swig_setmethods__["follow_trade_limit"] = _ama.MDNEEQSecurityInfo_follow_trade_limit_set
    __swig_getmethods__["follow_trade_limit"] = _ama.MDNEEQSecurityInfo_follow_trade_limit_get
    if _newclass:follow_trade_limit = _swig_property(_ama.MDNEEQSecurityInfo_follow_trade_limit_get, _ama.MDNEEQSecurityInfo_follow_trade_limit_set)
    __swig_setmethods__["limit_param_nature"] = _ama.MDNEEQSecurityInfo_limit_param_nature_set
    __swig_getmethods__["limit_param_nature"] = _ama.MDNEEQSecurityInfo_limit_param_nature_get
    if _newclass:limit_param_nature = _swig_property(_ama.MDNEEQSecurityInfo_limit_param_nature_get, _ama.MDNEEQSecurityInfo_limit_param_nature_set)
    __swig_setmethods__["high_limited"] = _ama.MDNEEQSecurityInfo_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDNEEQSecurityInfo_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDNEEQSecurityInfo_high_limited_get, _ama.MDNEEQSecurityInfo_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDNEEQSecurityInfo_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDNEEQSecurityInfo_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDNEEQSecurityInfo_low_limited_get, _ama.MDNEEQSecurityInfo_low_limited_set)
    __swig_setmethods__["block_trade_ceiling"] = _ama.MDNEEQSecurityInfo_block_trade_ceiling_set
    __swig_getmethods__["block_trade_ceiling"] = _ama.MDNEEQSecurityInfo_block_trade_ceiling_get
    if _newclass:block_trade_ceiling = _swig_property(_ama.MDNEEQSecurityInfo_block_trade_ceiling_get, _ama.MDNEEQSecurityInfo_block_trade_ceiling_set)
    __swig_setmethods__["block_trade_floor"] = _ama.MDNEEQSecurityInfo_block_trade_floor_set
    __swig_getmethods__["block_trade_floor"] = _ama.MDNEEQSecurityInfo_block_trade_floor_get
    if _newclass:block_trade_floor = _swig_property(_ama.MDNEEQSecurityInfo_block_trade_floor_get, _ama.MDNEEQSecurityInfo_block_trade_floor_set)
    __swig_setmethods__["component_mark"] = _ama.MDNEEQSecurityInfo_component_mark_set
    __swig_getmethods__["component_mark"] = _ama.MDNEEQSecurityInfo_component_mark_get
    if _newclass:component_mark = _swig_property(_ama.MDNEEQSecurityInfo_component_mark_get, _ama.MDNEEQSecurityInfo_component_mark_set)
    __swig_setmethods__["conver_ratio"] = _ama.MDNEEQSecurityInfo_conver_ratio_set
    __swig_getmethods__["conver_ratio"] = _ama.MDNEEQSecurityInfo_conver_ratio_get
    if _newclass:conver_ratio = _swig_property(_ama.MDNEEQSecurityInfo_conver_ratio_get, _ama.MDNEEQSecurityInfo_conver_ratio_set)
    __swig_setmethods__["trade_status"] = _ama.MDNEEQSecurityInfo_trade_status_set
    __swig_getmethods__["trade_status"] = _ama.MDNEEQSecurityInfo_trade_status_get
    if _newclass:trade_status = _swig_property(_ama.MDNEEQSecurityInfo_trade_status_get, _ama.MDNEEQSecurityInfo_trade_status_set)
    __swig_setmethods__["security_level"] = _ama.MDNEEQSecurityInfo_security_level_set
    __swig_getmethods__["security_level"] = _ama.MDNEEQSecurityInfo_security_level_get
    if _newclass:security_level = _swig_property(_ama.MDNEEQSecurityInfo_security_level_get, _ama.MDNEEQSecurityInfo_security_level_set)
    __swig_setmethods__["trade_type"] = _ama.MDNEEQSecurityInfo_trade_type_set
    __swig_getmethods__["trade_type"] = _ama.MDNEEQSecurityInfo_trade_type_get
    if _newclass:trade_type = _swig_property(_ama.MDNEEQSecurityInfo_trade_type_get, _ama.MDNEEQSecurityInfo_trade_type_set)
    __swig_setmethods__["market_maker_num"] = _ama.MDNEEQSecurityInfo_market_maker_num_set
    __swig_getmethods__["market_maker_num"] = _ama.MDNEEQSecurityInfo_market_maker_num_get
    if _newclass:market_maker_num = _swig_property(_ama.MDNEEQSecurityInfo_market_maker_num_get, _ama.MDNEEQSecurityInfo_market_maker_num_set)
    __swig_setmethods__["suspen_sign"] = _ama.MDNEEQSecurityInfo_suspen_sign_set
    __swig_getmethods__["suspen_sign"] = _ama.MDNEEQSecurityInfo_suspen_sign_get
    if _newclass:suspen_sign = _swig_property(_ama.MDNEEQSecurityInfo_suspen_sign_get, _ama.MDNEEQSecurityInfo_suspen_sign_set)
    __swig_setmethods__["ex_sign"] = _ama.MDNEEQSecurityInfo_ex_sign_set
    __swig_getmethods__["ex_sign"] = _ama.MDNEEQSecurityInfo_ex_sign_get
    if _newclass:ex_sign = _swig_property(_ama.MDNEEQSecurityInfo_ex_sign_get, _ama.MDNEEQSecurityInfo_ex_sign_set)
    __swig_setmethods__["net_vote_sign"] = _ama.MDNEEQSecurityInfo_net_vote_sign_set
    __swig_getmethods__["net_vote_sign"] = _ama.MDNEEQSecurityInfo_net_vote_sign_get
    if _newclass:net_vote_sign = _swig_property(_ama.MDNEEQSecurityInfo_net_vote_sign_get, _ama.MDNEEQSecurityInfo_net_vote_sign_set)
    __swig_setmethods__["other_buss_sign"] = _ama.MDNEEQSecurityInfo_other_buss_sign_set
    __swig_getmethods__["other_buss_sign"] = _ama.MDNEEQSecurityInfo_other_buss_sign_get
    if _newclass:other_buss_sign = _swig_property(_ama.MDNEEQSecurityInfo_other_buss_sign_get, _ama.MDNEEQSecurityInfo_other_buss_sign_set)
    __swig_setmethods__["record_update_time"] = _ama.MDNEEQSecurityInfo_record_update_time_set
    __swig_getmethods__["record_update_time"] = _ama.MDNEEQSecurityInfo_record_update_time_get
    if _newclass:record_update_time = _swig_property(_ama.MDNEEQSecurityInfo_record_update_time_get, _ama.MDNEEQSecurityInfo_record_update_time_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQSecurityInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQSecurityInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQSecurityInfo_variety_category_get, _ama.MDNEEQSecurityInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQSecurityInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQSecurityInfo
    __del__ = lambda self : None;
MDNEEQSecurityInfo_swigregister = _ama.MDNEEQSecurityInfo_swigregister
MDNEEQSecurityInfo_swigregister(MDNEEQSecurityInfo)

class MDNEEQNonPublicTransDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNonPublicTransDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNonPublicTransDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_market_type_get, _ama.MDNEEQNonPublicTransDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_security_code_get, _ama.MDNEEQNonPublicTransDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_get, _ama.MDNEEQNonPublicTransDeclaredInfo_orig_time_set)
    __swig_setmethods__["transaction_unit"] = _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_set
    __swig_getmethods__["transaction_unit"] = _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_get
    if _newclass:transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_get, _ama.MDNEEQNonPublicTransDeclaredInfo_transaction_unit_set)
    __swig_setmethods__["security_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_set
    __swig_getmethods__["security_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_get
    if _newclass:security_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_security_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_security_category_set)
    __swig_setmethods__["declare_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_set
    __swig_getmethods__["declare_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_get
    if _newclass:declare_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_category_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_price_set)
    __swig_setmethods__["deal_agreement_num"] = _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_set
    __swig_getmethods__["deal_agreement_num"] = _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_get
    if _newclass:deal_agreement_num = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_get, _ama.MDNEEQNonPublicTransDeclaredInfo_deal_agreement_num_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_get, _ama.MDNEEQNonPublicTransDeclaredInfo_declare_time_set)
    __swig_setmethods__["record_status"] = _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_set
    __swig_getmethods__["record_status"] = _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_get
    if _newclass:record_status = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_record_status_get, _ama.MDNEEQNonPublicTransDeclaredInfo_record_status_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_get, _ama.MDNEEQNonPublicTransDeclaredInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_get, _ama.MDNEEQNonPublicTransDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNonPublicTransDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNonPublicTransDeclaredInfo
    __del__ = lambda self : None;
MDNEEQNonPublicTransDeclaredInfo_swigregister = _ama.MDNEEQNonPublicTransDeclaredInfo_swigregister
MDNEEQNonPublicTransDeclaredInfo_swigregister(MDNEEQNonPublicTransDeclaredInfo)

class MDNEEQHierarchicalInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQHierarchicalInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQHierarchicalInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQHierarchicalInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQHierarchicalInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQHierarchicalInfo_market_type_get, _ama.MDNEEQHierarchicalInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQHierarchicalInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQHierarchicalInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQHierarchicalInfo_security_code_get, _ama.MDNEEQHierarchicalInfo_security_code_set)
    __swig_setmethods__["trade_date"] = _ama.MDNEEQHierarchicalInfo_trade_date_set
    __swig_getmethods__["trade_date"] = _ama.MDNEEQHierarchicalInfo_trade_date_get
    if _newclass:trade_date = _swig_property(_ama.MDNEEQHierarchicalInfo_trade_date_get, _ama.MDNEEQHierarchicalInfo_trade_date_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQHierarchicalInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQHierarchicalInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQHierarchicalInfo_security_abbreviation_get, _ama.MDNEEQHierarchicalInfo_security_abbreviation_set)
    __swig_setmethods__["layered_sign"] = _ama.MDNEEQHierarchicalInfo_layered_sign_set
    __swig_getmethods__["layered_sign"] = _ama.MDNEEQHierarchicalInfo_layered_sign_get
    if _newclass:layered_sign = _swig_property(_ama.MDNEEQHierarchicalInfo_layered_sign_get, _ama.MDNEEQHierarchicalInfo_layered_sign_set)
    __swig_setmethods__["layered_effective_date"] = _ama.MDNEEQHierarchicalInfo_layered_effective_date_set
    __swig_getmethods__["layered_effective_date"] = _ama.MDNEEQHierarchicalInfo_layered_effective_date_get
    if _newclass:layered_effective_date = _swig_property(_ama.MDNEEQHierarchicalInfo_layered_effective_date_get, _ama.MDNEEQHierarchicalInfo_layered_effective_date_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQHierarchicalInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQHierarchicalInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQHierarchicalInfo_backup_sign_get, _ama.MDNEEQHierarchicalInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQHierarchicalInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQHierarchicalInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQHierarchicalInfo_variety_category_get, _ama.MDNEEQHierarchicalInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQHierarchicalInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQHierarchicalInfo
    __del__ = lambda self : None;
MDNEEQHierarchicalInfo_swigregister = _ama.MDNEEQHierarchicalInfo_swigregister
MDNEEQHierarchicalInfo_swigregister(MDNEEQHierarchicalInfo)

class MDOrderBookItem(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBookItem, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBookItem, name)
    __repr__ = _swig_repr
    __swig_setmethods__["price"] = _ama.MDOrderBookItem_price_set
    __swig_getmethods__["price"] = _ama.MDOrderBookItem_price_get
    if _newclass:price = _swig_property(_ama.MDOrderBookItem_price_get, _ama.MDOrderBookItem_price_set)
    __swig_setmethods__["volume"] = _ama.MDOrderBookItem_volume_set
    __swig_getmethods__["volume"] = _ama.MDOrderBookItem_volume_get
    if _newclass:volume = _swig_property(_ama.MDOrderBookItem_volume_get, _ama.MDOrderBookItem_volume_set)
    __swig_setmethods__["order_queue_size"] = _ama.MDOrderBookItem_order_queue_size_set
    __swig_getmethods__["order_queue_size"] = _ama.MDOrderBookItem_order_queue_size_get
    if _newclass:order_queue_size = _swig_property(_ama.MDOrderBookItem_order_queue_size_get, _ama.MDOrderBookItem_order_queue_size_set)
    __swig_setmethods__["order_queue"] = _ama.MDOrderBookItem_order_queue_set
    __swig_getmethods__["order_queue"] = _ama.MDOrderBookItem_order_queue_get
    if _newclass:order_queue = _swig_property(_ama.MDOrderBookItem_order_queue_get, _ama.MDOrderBookItem_order_queue_set)
    def __init__(self): 
        this = _ama.new_MDOrderBookItem()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBookItem
    __del__ = lambda self : None;
MDOrderBookItem_swigregister = _ama.MDOrderBookItem_swigregister
MDOrderBookItem_swigregister(MDOrderBookItem)

class MDOrderBook(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBook, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBook, name)
    __repr__ = _swig_repr
    __swig_setmethods__["channel_no"] = _ama.MDOrderBook_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderBook_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderBook_channel_no_get, _ama.MDOrderBook_channel_no_set)
    __swig_setmethods__["market_type"] = _ama.MDOrderBook_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderBook_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderBook_market_type_get, _ama.MDOrderBook_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderBook_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderBook_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderBook_security_code_get, _ama.MDOrderBook_security_code_set)
    __swig_setmethods__["last_tick_time"] = _ama.MDOrderBook_last_tick_time_set
    __swig_getmethods__["last_tick_time"] = _ama.MDOrderBook_last_tick_time_get
    if _newclass:last_tick_time = _swig_property(_ama.MDOrderBook_last_tick_time_get, _ama.MDOrderBook_last_tick_time_set)
    __swig_setmethods__["last_snapshot_time"] = _ama.MDOrderBook_last_snapshot_time_set
    __swig_getmethods__["last_snapshot_time"] = _ama.MDOrderBook_last_snapshot_time_get
    if _newclass:last_snapshot_time = _swig_property(_ama.MDOrderBook_last_snapshot_time_get, _ama.MDOrderBook_last_snapshot_time_set)
    __swig_setmethods__["last_tick_seq"] = _ama.MDOrderBook_last_tick_seq_set
    __swig_getmethods__["last_tick_seq"] = _ama.MDOrderBook_last_tick_seq_get
    if _newclass:last_tick_seq = _swig_property(_ama.MDOrderBook_last_tick_seq_get, _ama.MDOrderBook_last_tick_seq_set)
    __swig_setmethods__["bid_order_book"] = _ama.MDOrderBook_bid_order_book_set
    __swig_getmethods__["bid_order_book"] = _ama.MDOrderBook_bid_order_book_get
    if _newclass:bid_order_book = _swig_property(_ama.MDOrderBook_bid_order_book_get, _ama.MDOrderBook_bid_order_book_set)
    __swig_setmethods__["offer_order_book"] = _ama.MDOrderBook_offer_order_book_set
    __swig_getmethods__["offer_order_book"] = _ama.MDOrderBook_offer_order_book_get
    if _newclass:offer_order_book = _swig_property(_ama.MDOrderBook_offer_order_book_get, _ama.MDOrderBook_offer_order_book_set)
    __swig_setmethods__["total_num_trades"] = _ama.MDOrderBook_total_num_trades_set
    __swig_getmethods__["total_num_trades"] = _ama.MDOrderBook_total_num_trades_get
    if _newclass:total_num_trades = _swig_property(_ama.MDOrderBook_total_num_trades_get, _ama.MDOrderBook_total_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOrderBook_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOrderBook_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOrderBook_total_volume_trade_get, _ama.MDOrderBook_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOrderBook_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOrderBook_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOrderBook_total_value_trade_get, _ama.MDOrderBook_total_value_trade_set)
    def __init__(self): 
        this = _ama.new_MDOrderBook()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBook
    __del__ = lambda self : None;
MDOrderBook_swigregister = _ama.MDOrderBook_swigregister
MDOrderBook_swigregister(MDOrderBook)

class MDOrderBookSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDOrderBookSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDOrderBookSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDOrderBookSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDOrderBookSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDOrderBookSnapshot_market_type_get, _ama.MDOrderBookSnapshot_market_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDOrderBookSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDOrderBookSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDOrderBookSnapshot_variety_category_get, _ama.MDOrderBookSnapshot_variety_category_set)
    __swig_setmethods__["security_code"] = _ama.MDOrderBookSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDOrderBookSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDOrderBookSnapshot_security_code_get, _ama.MDOrderBookSnapshot_security_code_set)
    __swig_setmethods__["last_tick_seq"] = _ama.MDOrderBookSnapshot_last_tick_seq_set
    __swig_getmethods__["last_tick_seq"] = _ama.MDOrderBookSnapshot_last_tick_seq_get
    if _newclass:last_tick_seq = _swig_property(_ama.MDOrderBookSnapshot_last_tick_seq_get, _ama.MDOrderBookSnapshot_last_tick_seq_set)
    __swig_setmethods__["channel_no"] = _ama.MDOrderBookSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDOrderBookSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDOrderBookSnapshot_channel_no_get, _ama.MDOrderBookSnapshot_channel_no_set)
    __swig_setmethods__["orig_time"] = _ama.MDOrderBookSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDOrderBookSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDOrderBookSnapshot_orig_time_get, _ama.MDOrderBookSnapshot_orig_time_set)
    __swig_setmethods__["last_price"] = _ama.MDOrderBookSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDOrderBookSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDOrderBookSnapshot_last_price_get, _ama.MDOrderBookSnapshot_last_price_set)
    __swig_setmethods__["total_num_trades"] = _ama.MDOrderBookSnapshot_total_num_trades_set
    __swig_getmethods__["total_num_trades"] = _ama.MDOrderBookSnapshot_total_num_trades_get
    if _newclass:total_num_trades = _swig_property(_ama.MDOrderBookSnapshot_total_num_trades_get, _ama.MDOrderBookSnapshot_total_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDOrderBookSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDOrderBookSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDOrderBookSnapshot_total_volume_trade_get, _ama.MDOrderBookSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDOrderBookSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDOrderBookSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDOrderBookSnapshot_total_value_trade_get, _ama.MDOrderBookSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDOrderBookSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDOrderBookSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDOrderBookSnapshot_total_bid_volume_get, _ama.MDOrderBookSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDOrderBookSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDOrderBookSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDOrderBookSnapshot_total_offer_volume_get, _ama.MDOrderBookSnapshot_total_offer_volume_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDOrderBookSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDOrderBookSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDOrderBookSnapshot_num_bid_orders_get, _ama.MDOrderBookSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDOrderBookSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDOrderBookSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDOrderBookSnapshot_num_offer_orders_get, _ama.MDOrderBookSnapshot_num_offer_orders_set)
    __swig_setmethods__["bid_price"] = _ama.MDOrderBookSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDOrderBookSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDOrderBookSnapshot_bid_price_get, _ama.MDOrderBookSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDOrderBookSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDOrderBookSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDOrderBookSnapshot_bid_volume_get, _ama.MDOrderBookSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDOrderBookSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDOrderBookSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDOrderBookSnapshot_offer_price_get, _ama.MDOrderBookSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDOrderBookSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDOrderBookSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDOrderBookSnapshot_offer_volume_get, _ama.MDOrderBookSnapshot_offer_volume_set)
    def __init__(self): 
        this = _ama.new_MDOrderBookSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDOrderBookSnapshot
    __del__ = lambda self : None;
MDOrderBookSnapshot_swigregister = _ama.MDOrderBookSnapshot_swigregister
MDOrderBookSnapshot_swigregister(MDOrderBookSnapshot)

class MDNEEQNegotiableDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNegotiableDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNegotiableDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNegotiableDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNegotiableDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_market_type_get, _ama.MDNEEQNegotiableDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNegotiableDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNegotiableDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_security_code_get, _ama.MDNEEQNegotiableDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNegotiableDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNegotiableDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_orig_time_get, _ama.MDNEEQNegotiableDeclaredInfo_orig_time_set)
    __swig_setmethods__["transaction_unit"] = _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_set
    __swig_getmethods__["transaction_unit"] = _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_get
    if _newclass:transaction_unit = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_get, _ama.MDNEEQNegotiableDeclaredInfo_transaction_unit_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_get, _ama.MDNEEQNegotiableDeclaredInfo_md_stream_id_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_volume_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_price_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_price_set)
    __swig_setmethods__["deal_agreement_num"] = _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_set
    __swig_getmethods__["deal_agreement_num"] = _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_get
    if _newclass:deal_agreement_num = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_get, _ama.MDNEEQNegotiableDeclaredInfo_deal_agreement_num_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQNegotiableDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_declare_time_get, _ama.MDNEEQNegotiableDeclaredInfo_declare_time_set)
    __swig_setmethods__["record_status"] = _ama.MDNEEQNegotiableDeclaredInfo_record_status_set
    __swig_getmethods__["record_status"] = _ama.MDNEEQNegotiableDeclaredInfo_record_status_get
    if _newclass:record_status = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_record_status_get, _ama.MDNEEQNegotiableDeclaredInfo_record_status_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_backup_sign_get, _ama.MDNEEQNegotiableDeclaredInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNegotiableDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNegotiableDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNegotiableDeclaredInfo_variety_category_get, _ama.MDNEEQNegotiableDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNegotiableDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNegotiableDeclaredInfo
    __del__ = lambda self : None;
MDNEEQNegotiableDeclaredInfo_swigregister = _ama.MDNEEQNegotiableDeclaredInfo_swigregister
MDNEEQNegotiableDeclaredInfo_swigregister(MDNEEQNegotiableDeclaredInfo)

class MDNEEQMarketMakerDeclaredInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQMarketMakerDeclaredInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQMarketMakerDeclaredInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_market_type_get, _ama.MDNEEQMarketMakerDeclaredInfo_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQMarketMakerDeclaredInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQMarketMakerDeclaredInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_security_code_get, _ama.MDNEEQMarketMakerDeclaredInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_orig_time_get, _ama.MDNEEQMarketMakerDeclaredInfo_orig_time_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_get, _ama.MDNEEQMarketMakerDeclaredInfo_md_stream_id_set)
    __swig_setmethods__["declare_volume"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_set
    __swig_getmethods__["declare_volume"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_get
    if _newclass:declare_volume = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_volume_set)
    __swig_setmethods__["declare_price"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_set
    __swig_getmethods__["declare_price"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_get
    if _newclass:declare_price = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_price_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_price_set)
    __swig_setmethods__["data_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_data_type_set
    __swig_getmethods__["data_type"] = _ama.MDNEEQMarketMakerDeclaredInfo_data_type_get
    if _newclass:data_type = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_data_type_get, _ama.MDNEEQMarketMakerDeclaredInfo_data_type_set)
    __swig_setmethods__["declare_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_set
    __swig_getmethods__["declare_time"] = _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_get
    if _newclass:declare_time = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_declare_time_get, _ama.MDNEEQMarketMakerDeclaredInfo_declare_time_set)
    __swig_setmethods__["backup_field"] = _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_set
    __swig_getmethods__["backup_field"] = _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_get
    if _newclass:backup_field = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_backup_field_get, _ama.MDNEEQMarketMakerDeclaredInfo_backup_field_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQMarketMakerDeclaredInfo_variety_category_get, _ama.MDNEEQMarketMakerDeclaredInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQMarketMakerDeclaredInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQMarketMakerDeclaredInfo
    __del__ = lambda self : None;
MDNEEQMarketMakerDeclaredInfo_swigregister = _ama.MDNEEQMarketMakerDeclaredInfo_swigregister
MDNEEQMarketMakerDeclaredInfo_swigregister(MDNEEQMarketMakerDeclaredInfo)

class MDNEEQNonPublicTransferDealInfo(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDNEEQNonPublicTransferDealInfo, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDNEEQNonPublicTransferDealInfo, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDNEEQNonPublicTransferDealInfo_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDNEEQNonPublicTransferDealInfo_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_market_type_get, _ama.MDNEEQNonPublicTransferDealInfo_market_type_set)
    __swig_setmethods__["serial_num"] = _ama.MDNEEQNonPublicTransferDealInfo_serial_num_set
    __swig_getmethods__["serial_num"] = _ama.MDNEEQNonPublicTransferDealInfo_serial_num_get
    if _newclass:serial_num = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_serial_num_get, _ama.MDNEEQNonPublicTransferDealInfo_serial_num_set)
    __swig_setmethods__["security_code"] = _ama.MDNEEQNonPublicTransferDealInfo_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDNEEQNonPublicTransferDealInfo_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_code_get, _ama.MDNEEQNonPublicTransferDealInfo_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDNEEQNonPublicTransferDealInfo_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDNEEQNonPublicTransferDealInfo_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_orig_time_get, _ama.MDNEEQNonPublicTransferDealInfo_orig_time_set)
    __swig_setmethods__["security_abbreviation"] = _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_set
    __swig_getmethods__["security_abbreviation"] = _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_get
    if _newclass:security_abbreviation = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_get, _ama.MDNEEQNonPublicTransferDealInfo_security_abbreviation_set)
    __swig_setmethods__["security_category"] = _ama.MDNEEQNonPublicTransferDealInfo_security_category_set
    __swig_getmethods__["security_category"] = _ama.MDNEEQNonPublicTransferDealInfo_security_category_get
    if _newclass:security_category = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_security_category_get, _ama.MDNEEQNonPublicTransferDealInfo_security_category_set)
    __swig_setmethods__["bid_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_set
    __swig_getmethods__["bid_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_get
    if _newclass:bid_transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_get, _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_set)
    __swig_setmethods__["bid_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_set
    __swig_getmethods__["bid_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_get
    if _newclass:bid_transaction_unit_name = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_get, _ama.MDNEEQNonPublicTransferDealInfo_bid_transaction_unit_name_set)
    __swig_setmethods__["offer_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_set
    __swig_getmethods__["offer_transaction_unit"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_get
    if _newclass:offer_transaction_unit = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_get, _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_set)
    __swig_setmethods__["offer_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_set
    __swig_getmethods__["offer_transaction_unit_name"] = _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_get
    if _newclass:offer_transaction_unit_name = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_get, _ama.MDNEEQNonPublicTransferDealInfo_offer_transaction_unit_name_set)
    __swig_setmethods__["deal_volume"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_set
    __swig_getmethods__["deal_volume"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_get
    if _newclass:deal_volume = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_volume_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_volume_set)
    __swig_setmethods__["deal_price"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_price_set
    __swig_getmethods__["deal_price"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_price_get
    if _newclass:deal_price = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_price_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_price_set)
    __swig_setmethods__["deal_time"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_time_set
    __swig_getmethods__["deal_time"] = _ama.MDNEEQNonPublicTransferDealInfo_deal_time_get
    if _newclass:deal_time = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_deal_time_get, _ama.MDNEEQNonPublicTransferDealInfo_deal_time_set)
    __swig_setmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_set
    __swig_getmethods__["backup_sign"] = _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_get
    if _newclass:backup_sign = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_backup_sign_get, _ama.MDNEEQNonPublicTransferDealInfo_backup_sign_set)
    __swig_setmethods__["variety_category"] = _ama.MDNEEQNonPublicTransferDealInfo_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDNEEQNonPublicTransferDealInfo_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDNEEQNonPublicTransferDealInfo_variety_category_get, _ama.MDNEEQNonPublicTransferDealInfo_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDNEEQNonPublicTransferDealInfo()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDNEEQNonPublicTransferDealInfo
    __del__ = lambda self : None;
MDNEEQNonPublicTransferDealInfo_swigregister = _ama.MDNEEQNonPublicTransferDealInfo_swigregister
MDNEEQNonPublicTransferDealInfo_swigregister(MDNEEQNonPublicTransferDealInfo)

class SubTradingPhase(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SubTradingPhase, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SubTradingPhase, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sub_trading_phase_code"] = _ama.SubTradingPhase_sub_trading_phase_code_set
    __swig_getmethods__["sub_trading_phase_code"] = _ama.SubTradingPhase_sub_trading_phase_code_get
    if _newclass:sub_trading_phase_code = _swig_property(_ama.SubTradingPhase_sub_trading_phase_code_get, _ama.SubTradingPhase_sub_trading_phase_code_set)
    __swig_setmethods__["trading_type"] = _ama.SubTradingPhase_trading_type_set
    __swig_getmethods__["trading_type"] = _ama.SubTradingPhase_trading_type_get
    if _newclass:trading_type = _swig_property(_ama.SubTradingPhase_trading_type_get, _ama.SubTradingPhase_trading_type_set)
    def __init__(self): 
        this = _ama.new_SubTradingPhase()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_SubTradingPhase
    __del__ = lambda self : None;
SubTradingPhase_swigregister = _ama.SubTradingPhase_swigregister
SubTradingPhase_swigregister(SubTradingPhase)

class MDBondSnapshot(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondSnapshot, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondSnapshot, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondSnapshot_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondSnapshot_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondSnapshot_market_type_get, _ama.MDBondSnapshot_market_type_set)
    __swig_setmethods__["security_code"] = _ama.MDBondSnapshot_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondSnapshot_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondSnapshot_security_code_get, _ama.MDBondSnapshot_security_code_set)
    __swig_setmethods__["orig_time"] = _ama.MDBondSnapshot_orig_time_set
    __swig_getmethods__["orig_time"] = _ama.MDBondSnapshot_orig_time_get
    if _newclass:orig_time = _swig_property(_ama.MDBondSnapshot_orig_time_get, _ama.MDBondSnapshot_orig_time_set)
    __swig_setmethods__["trading_phase_code"] = _ama.MDBondSnapshot_trading_phase_code_set
    __swig_getmethods__["trading_phase_code"] = _ama.MDBondSnapshot_trading_phase_code_get
    if _newclass:trading_phase_code = _swig_property(_ama.MDBondSnapshot_trading_phase_code_get, _ama.MDBondSnapshot_trading_phase_code_set)
    __swig_setmethods__["pre_close_price"] = _ama.MDBondSnapshot_pre_close_price_set
    __swig_getmethods__["pre_close_price"] = _ama.MDBondSnapshot_pre_close_price_get
    if _newclass:pre_close_price = _swig_property(_ama.MDBondSnapshot_pre_close_price_get, _ama.MDBondSnapshot_pre_close_price_set)
    __swig_setmethods__["open_price"] = _ama.MDBondSnapshot_open_price_set
    __swig_getmethods__["open_price"] = _ama.MDBondSnapshot_open_price_get
    if _newclass:open_price = _swig_property(_ama.MDBondSnapshot_open_price_get, _ama.MDBondSnapshot_open_price_set)
    __swig_setmethods__["high_price"] = _ama.MDBondSnapshot_high_price_set
    __swig_getmethods__["high_price"] = _ama.MDBondSnapshot_high_price_get
    if _newclass:high_price = _swig_property(_ama.MDBondSnapshot_high_price_get, _ama.MDBondSnapshot_high_price_set)
    __swig_setmethods__["low_price"] = _ama.MDBondSnapshot_low_price_set
    __swig_getmethods__["low_price"] = _ama.MDBondSnapshot_low_price_get
    if _newclass:low_price = _swig_property(_ama.MDBondSnapshot_low_price_get, _ama.MDBondSnapshot_low_price_set)
    __swig_setmethods__["last_price"] = _ama.MDBondSnapshot_last_price_set
    __swig_getmethods__["last_price"] = _ama.MDBondSnapshot_last_price_get
    if _newclass:last_price = _swig_property(_ama.MDBondSnapshot_last_price_get, _ama.MDBondSnapshot_last_price_set)
    __swig_setmethods__["close_price"] = _ama.MDBondSnapshot_close_price_set
    __swig_getmethods__["close_price"] = _ama.MDBondSnapshot_close_price_get
    if _newclass:close_price = _swig_property(_ama.MDBondSnapshot_close_price_get, _ama.MDBondSnapshot_close_price_set)
    __swig_setmethods__["bid_price"] = _ama.MDBondSnapshot_bid_price_set
    __swig_getmethods__["bid_price"] = _ama.MDBondSnapshot_bid_price_get
    if _newclass:bid_price = _swig_property(_ama.MDBondSnapshot_bid_price_get, _ama.MDBondSnapshot_bid_price_set)
    __swig_setmethods__["bid_volume"] = _ama.MDBondSnapshot_bid_volume_set
    __swig_getmethods__["bid_volume"] = _ama.MDBondSnapshot_bid_volume_get
    if _newclass:bid_volume = _swig_property(_ama.MDBondSnapshot_bid_volume_get, _ama.MDBondSnapshot_bid_volume_set)
    __swig_setmethods__["offer_price"] = _ama.MDBondSnapshot_offer_price_set
    __swig_getmethods__["offer_price"] = _ama.MDBondSnapshot_offer_price_get
    if _newclass:offer_price = _swig_property(_ama.MDBondSnapshot_offer_price_get, _ama.MDBondSnapshot_offer_price_set)
    __swig_setmethods__["offer_volume"] = _ama.MDBondSnapshot_offer_volume_set
    __swig_getmethods__["offer_volume"] = _ama.MDBondSnapshot_offer_volume_get
    if _newclass:offer_volume = _swig_property(_ama.MDBondSnapshot_offer_volume_get, _ama.MDBondSnapshot_offer_volume_set)
    __swig_setmethods__["num_trades"] = _ama.MDBondSnapshot_num_trades_set
    __swig_getmethods__["num_trades"] = _ama.MDBondSnapshot_num_trades_get
    if _newclass:num_trades = _swig_property(_ama.MDBondSnapshot_num_trades_get, _ama.MDBondSnapshot_num_trades_set)
    __swig_setmethods__["total_volume_trade"] = _ama.MDBondSnapshot_total_volume_trade_set
    __swig_getmethods__["total_volume_trade"] = _ama.MDBondSnapshot_total_volume_trade_get
    if _newclass:total_volume_trade = _swig_property(_ama.MDBondSnapshot_total_volume_trade_get, _ama.MDBondSnapshot_total_volume_trade_set)
    __swig_setmethods__["total_value_trade"] = _ama.MDBondSnapshot_total_value_trade_set
    __swig_getmethods__["total_value_trade"] = _ama.MDBondSnapshot_total_value_trade_get
    if _newclass:total_value_trade = _swig_property(_ama.MDBondSnapshot_total_value_trade_get, _ama.MDBondSnapshot_total_value_trade_set)
    __swig_setmethods__["total_bid_volume"] = _ama.MDBondSnapshot_total_bid_volume_set
    __swig_getmethods__["total_bid_volume"] = _ama.MDBondSnapshot_total_bid_volume_get
    if _newclass:total_bid_volume = _swig_property(_ama.MDBondSnapshot_total_bid_volume_get, _ama.MDBondSnapshot_total_bid_volume_set)
    __swig_setmethods__["total_offer_volume"] = _ama.MDBondSnapshot_total_offer_volume_set
    __swig_getmethods__["total_offer_volume"] = _ama.MDBondSnapshot_total_offer_volume_get
    if _newclass:total_offer_volume = _swig_property(_ama.MDBondSnapshot_total_offer_volume_get, _ama.MDBondSnapshot_total_offer_volume_set)
    __swig_setmethods__["weighted_avg_bid_price"] = _ama.MDBondSnapshot_weighted_avg_bid_price_set
    __swig_getmethods__["weighted_avg_bid_price"] = _ama.MDBondSnapshot_weighted_avg_bid_price_get
    if _newclass:weighted_avg_bid_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_bid_price_get, _ama.MDBondSnapshot_weighted_avg_bid_price_set)
    __swig_setmethods__["weighted_avg_offer_price"] = _ama.MDBondSnapshot_weighted_avg_offer_price_set
    __swig_getmethods__["weighted_avg_offer_price"] = _ama.MDBondSnapshot_weighted_avg_offer_price_get
    if _newclass:weighted_avg_offer_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_offer_price_get, _ama.MDBondSnapshot_weighted_avg_offer_price_set)
    __swig_setmethods__["high_limited"] = _ama.MDBondSnapshot_high_limited_set
    __swig_getmethods__["high_limited"] = _ama.MDBondSnapshot_high_limited_get
    if _newclass:high_limited = _swig_property(_ama.MDBondSnapshot_high_limited_get, _ama.MDBondSnapshot_high_limited_set)
    __swig_setmethods__["low_limited"] = _ama.MDBondSnapshot_low_limited_set
    __swig_getmethods__["low_limited"] = _ama.MDBondSnapshot_low_limited_get
    if _newclass:low_limited = _swig_property(_ama.MDBondSnapshot_low_limited_get, _ama.MDBondSnapshot_low_limited_set)
    __swig_setmethods__["change1"] = _ama.MDBondSnapshot_change1_set
    __swig_getmethods__["change1"] = _ama.MDBondSnapshot_change1_get
    if _newclass:change1 = _swig_property(_ama.MDBondSnapshot_change1_get, _ama.MDBondSnapshot_change1_set)
    __swig_setmethods__["change2"] = _ama.MDBondSnapshot_change2_set
    __swig_getmethods__["change2"] = _ama.MDBondSnapshot_change2_get
    if _newclass:change2 = _swig_property(_ama.MDBondSnapshot_change2_get, _ama.MDBondSnapshot_change2_set)
    __swig_setmethods__["weighted_avg_bp"] = _ama.MDBondSnapshot_weighted_avg_bp_set
    __swig_getmethods__["weighted_avg_bp"] = _ama.MDBondSnapshot_weighted_avg_bp_get
    if _newclass:weighted_avg_bp = _swig_property(_ama.MDBondSnapshot_weighted_avg_bp_get, _ama.MDBondSnapshot_weighted_avg_bp_set)
    __swig_setmethods__["pre_close_weighted_avg_price"] = _ama.MDBondSnapshot_pre_close_weighted_avg_price_set
    __swig_getmethods__["pre_close_weighted_avg_price"] = _ama.MDBondSnapshot_pre_close_weighted_avg_price_get
    if _newclass:pre_close_weighted_avg_price = _swig_property(_ama.MDBondSnapshot_pre_close_weighted_avg_price_get, _ama.MDBondSnapshot_pre_close_weighted_avg_price_set)
    __swig_setmethods__["auct_last_price"] = _ama.MDBondSnapshot_auct_last_price_set
    __swig_getmethods__["auct_last_price"] = _ama.MDBondSnapshot_auct_last_price_get
    if _newclass:auct_last_price = _swig_property(_ama.MDBondSnapshot_auct_last_price_get, _ama.MDBondSnapshot_auct_last_price_set)
    __swig_setmethods__["last_price_trading_type"] = _ama.MDBondSnapshot_last_price_trading_type_set
    __swig_getmethods__["last_price_trading_type"] = _ama.MDBondSnapshot_last_price_trading_type_get
    if _newclass:last_price_trading_type = _swig_property(_ama.MDBondSnapshot_last_price_trading_type_get, _ama.MDBondSnapshot_last_price_trading_type_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondSnapshot_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondSnapshot_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondSnapshot_channel_no_get, _ama.MDBondSnapshot_channel_no_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondSnapshot_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondSnapshot_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondSnapshot_md_stream_id_get, _ama.MDBondSnapshot_md_stream_id_set)
    __swig_setmethods__["instrument_status"] = _ama.MDBondSnapshot_instrument_status_set
    __swig_getmethods__["instrument_status"] = _ama.MDBondSnapshot_instrument_status_get
    if _newclass:instrument_status = _swig_property(_ama.MDBondSnapshot_instrument_status_get, _ama.MDBondSnapshot_instrument_status_set)
    __swig_setmethods__["withdraw_buy_number"] = _ama.MDBondSnapshot_withdraw_buy_number_set
    __swig_getmethods__["withdraw_buy_number"] = _ama.MDBondSnapshot_withdraw_buy_number_get
    if _newclass:withdraw_buy_number = _swig_property(_ama.MDBondSnapshot_withdraw_buy_number_get, _ama.MDBondSnapshot_withdraw_buy_number_set)
    __swig_setmethods__["withdraw_buy_amount"] = _ama.MDBondSnapshot_withdraw_buy_amount_set
    __swig_getmethods__["withdraw_buy_amount"] = _ama.MDBondSnapshot_withdraw_buy_amount_get
    if _newclass:withdraw_buy_amount = _swig_property(_ama.MDBondSnapshot_withdraw_buy_amount_get, _ama.MDBondSnapshot_withdraw_buy_amount_set)
    __swig_setmethods__["withdraw_buy_money"] = _ama.MDBondSnapshot_withdraw_buy_money_set
    __swig_getmethods__["withdraw_buy_money"] = _ama.MDBondSnapshot_withdraw_buy_money_get
    if _newclass:withdraw_buy_money = _swig_property(_ama.MDBondSnapshot_withdraw_buy_money_get, _ama.MDBondSnapshot_withdraw_buy_money_set)
    __swig_setmethods__["withdraw_sell_number"] = _ama.MDBondSnapshot_withdraw_sell_number_set
    __swig_getmethods__["withdraw_sell_number"] = _ama.MDBondSnapshot_withdraw_sell_number_get
    if _newclass:withdraw_sell_number = _swig_property(_ama.MDBondSnapshot_withdraw_sell_number_get, _ama.MDBondSnapshot_withdraw_sell_number_set)
    __swig_setmethods__["withdraw_sell_amount"] = _ama.MDBondSnapshot_withdraw_sell_amount_set
    __swig_getmethods__["withdraw_sell_amount"] = _ama.MDBondSnapshot_withdraw_sell_amount_get
    if _newclass:withdraw_sell_amount = _swig_property(_ama.MDBondSnapshot_withdraw_sell_amount_get, _ama.MDBondSnapshot_withdraw_sell_amount_set)
    __swig_setmethods__["withdraw_sell_money"] = _ama.MDBondSnapshot_withdraw_sell_money_set
    __swig_getmethods__["withdraw_sell_money"] = _ama.MDBondSnapshot_withdraw_sell_money_get
    if _newclass:withdraw_sell_money = _swig_property(_ama.MDBondSnapshot_withdraw_sell_money_get, _ama.MDBondSnapshot_withdraw_sell_money_set)
    __swig_setmethods__["total_bid_number"] = _ama.MDBondSnapshot_total_bid_number_set
    __swig_getmethods__["total_bid_number"] = _ama.MDBondSnapshot_total_bid_number_get
    if _newclass:total_bid_number = _swig_property(_ama.MDBondSnapshot_total_bid_number_get, _ama.MDBondSnapshot_total_bid_number_set)
    __swig_setmethods__["total_offer_number"] = _ama.MDBondSnapshot_total_offer_number_set
    __swig_getmethods__["total_offer_number"] = _ama.MDBondSnapshot_total_offer_number_get
    if _newclass:total_offer_number = _swig_property(_ama.MDBondSnapshot_total_offer_number_get, _ama.MDBondSnapshot_total_offer_number_set)
    __swig_setmethods__["bid_trade_max_duration"] = _ama.MDBondSnapshot_bid_trade_max_duration_set
    __swig_getmethods__["bid_trade_max_duration"] = _ama.MDBondSnapshot_bid_trade_max_duration_get
    if _newclass:bid_trade_max_duration = _swig_property(_ama.MDBondSnapshot_bid_trade_max_duration_get, _ama.MDBondSnapshot_bid_trade_max_duration_set)
    __swig_setmethods__["offer_trade_max_duration"] = _ama.MDBondSnapshot_offer_trade_max_duration_set
    __swig_getmethods__["offer_trade_max_duration"] = _ama.MDBondSnapshot_offer_trade_max_duration_get
    if _newclass:offer_trade_max_duration = _swig_property(_ama.MDBondSnapshot_offer_trade_max_duration_get, _ama.MDBondSnapshot_offer_trade_max_duration_set)
    __swig_setmethods__["num_bid_orders"] = _ama.MDBondSnapshot_num_bid_orders_set
    __swig_getmethods__["num_bid_orders"] = _ama.MDBondSnapshot_num_bid_orders_get
    if _newclass:num_bid_orders = _swig_property(_ama.MDBondSnapshot_num_bid_orders_get, _ama.MDBondSnapshot_num_bid_orders_set)
    __swig_setmethods__["num_offer_orders"] = _ama.MDBondSnapshot_num_offer_orders_set
    __swig_getmethods__["num_offer_orders"] = _ama.MDBondSnapshot_num_offer_orders_get
    if _newclass:num_offer_orders = _swig_property(_ama.MDBondSnapshot_num_offer_orders_get, _ama.MDBondSnapshot_num_offer_orders_set)
    __swig_setmethods__["last_trade_time"] = _ama.MDBondSnapshot_last_trade_time_set
    __swig_getmethods__["last_trade_time"] = _ama.MDBondSnapshot_last_trade_time_get
    if _newclass:last_trade_time = _swig_property(_ama.MDBondSnapshot_last_trade_time_get, _ama.MDBondSnapshot_last_trade_time_set)
    __swig_setmethods__["weighted_avg_price"] = _ama.MDBondSnapshot_weighted_avg_price_set
    __swig_getmethods__["weighted_avg_price"] = _ama.MDBondSnapshot_weighted_avg_price_get
    if _newclass:weighted_avg_price = _swig_property(_ama.MDBondSnapshot_weighted_avg_price_get, _ama.MDBondSnapshot_weighted_avg_price_set)
    __swig_setmethods__["no_sub_trading_phase_code"] = _ama.MDBondSnapshot_no_sub_trading_phase_code_set
    __swig_getmethods__["no_sub_trading_phase_code"] = _ama.MDBondSnapshot_no_sub_trading_phase_code_get
    if _newclass:no_sub_trading_phase_code = _swig_property(_ama.MDBondSnapshot_no_sub_trading_phase_code_get, _ama.MDBondSnapshot_no_sub_trading_phase_code_set)
    __swig_setmethods__["sub_trading_phase"] = _ama.MDBondSnapshot_sub_trading_phase_set
    __swig_getmethods__["sub_trading_phase"] = _ama.MDBondSnapshot_sub_trading_phase_get
    if _newclass:sub_trading_phase = _swig_property(_ama.MDBondSnapshot_sub_trading_phase_get, _ama.MDBondSnapshot_sub_trading_phase_set)
    __swig_setmethods__["auct_volume_trade"] = _ama.MDBondSnapshot_auct_volume_trade_set
    __swig_getmethods__["auct_volume_trade"] = _ama.MDBondSnapshot_auct_volume_trade_get
    if _newclass:auct_volume_trade = _swig_property(_ama.MDBondSnapshot_auct_volume_trade_get, _ama.MDBondSnapshot_auct_volume_trade_set)
    __swig_setmethods__["auct_value_trade"] = _ama.MDBondSnapshot_auct_value_trade_set
    __swig_getmethods__["auct_value_trade"] = _ama.MDBondSnapshot_auct_value_trade_get
    if _newclass:auct_value_trade = _swig_property(_ama.MDBondSnapshot_auct_value_trade_get, _ama.MDBondSnapshot_auct_value_trade_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondSnapshot_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondSnapshot_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondSnapshot_variety_category_get, _ama.MDBondSnapshot_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondSnapshot()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondSnapshot
    __del__ = lambda self : None;
MDBondSnapshot_swigregister = _ama.MDBondSnapshot_swigregister
MDBondSnapshot_swigregister(MDBondSnapshot)

class MDBondTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondTickOrder_market_type_get, _ama.MDBondTickOrder_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondTickOrder_appl_seq_num_get, _ama.MDBondTickOrder_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondTickOrder_channel_no_get, _ama.MDBondTickOrder_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondTickOrder_security_code_get, _ama.MDBondTickOrder_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDBondTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDBondTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDBondTickOrder_order_time_get, _ama.MDBondTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDBondTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDBondTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDBondTickOrder_order_price_get, _ama.MDBondTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDBondTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDBondTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDBondTickOrder_order_volume_get, _ama.MDBondTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDBondTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDBondTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDBondTickOrder_side_get, _ama.MDBondTickOrder_side_set)
    __swig_setmethods__["order_type"] = _ama.MDBondTickOrder_order_type_set
    __swig_getmethods__["order_type"] = _ama.MDBondTickOrder_order_type_get
    if _newclass:order_type = _swig_property(_ama.MDBondTickOrder_order_type_get, _ama.MDBondTickOrder_order_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondTickOrder_md_stream_id_get, _ama.MDBondTickOrder_md_stream_id_set)
    __swig_setmethods__["product_status"] = _ama.MDBondTickOrder_product_status_set
    __swig_getmethods__["product_status"] = _ama.MDBondTickOrder_product_status_get
    if _newclass:product_status = _swig_property(_ama.MDBondTickOrder_product_status_get, _ama.MDBondTickOrder_product_status_set)
    __swig_setmethods__["orig_order_no"] = _ama.MDBondTickOrder_orig_order_no_set
    __swig_getmethods__["orig_order_no"] = _ama.MDBondTickOrder_orig_order_no_get
    if _newclass:orig_order_no = _swig_property(_ama.MDBondTickOrder_orig_order_no_get, _ama.MDBondTickOrder_orig_order_no_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondTickOrder_variety_category_get, _ama.MDBondTickOrder_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondTickOrder
    __del__ = lambda self : None;
MDBondTickOrder_swigregister = _ama.MDBondTickOrder_swigregister
MDBondTickOrder_swigregister(MDBondTickOrder)

class MDBondQuotedTickOrder(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondQuotedTickOrder, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondQuotedTickOrder, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondQuotedTickOrder_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondQuotedTickOrder_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondQuotedTickOrder_market_type_get, _ama.MDBondQuotedTickOrder_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondQuotedTickOrder_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondQuotedTickOrder_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondQuotedTickOrder_appl_seq_num_get, _ama.MDBondQuotedTickOrder_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondQuotedTickOrder_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondQuotedTickOrder_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondQuotedTickOrder_channel_no_get, _ama.MDBondQuotedTickOrder_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondQuotedTickOrder_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondQuotedTickOrder_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondQuotedTickOrder_security_code_get, _ama.MDBondQuotedTickOrder_security_code_set)
    __swig_setmethods__["order_time"] = _ama.MDBondQuotedTickOrder_order_time_set
    __swig_getmethods__["order_time"] = _ama.MDBondQuotedTickOrder_order_time_get
    if _newclass:order_time = _swig_property(_ama.MDBondQuotedTickOrder_order_time_get, _ama.MDBondQuotedTickOrder_order_time_set)
    __swig_setmethods__["order_price"] = _ama.MDBondQuotedTickOrder_order_price_set
    __swig_getmethods__["order_price"] = _ama.MDBondQuotedTickOrder_order_price_get
    if _newclass:order_price = _swig_property(_ama.MDBondQuotedTickOrder_order_price_get, _ama.MDBondQuotedTickOrder_order_price_set)
    __swig_setmethods__["order_volume"] = _ama.MDBondQuotedTickOrder_order_volume_set
    __swig_getmethods__["order_volume"] = _ama.MDBondQuotedTickOrder_order_volume_get
    if _newclass:order_volume = _swig_property(_ama.MDBondQuotedTickOrder_order_volume_get, _ama.MDBondQuotedTickOrder_order_volume_set)
    __swig_setmethods__["side"] = _ama.MDBondQuotedTickOrder_side_set
    __swig_getmethods__["side"] = _ama.MDBondQuotedTickOrder_side_get
    if _newclass:side = _swig_property(_ama.MDBondQuotedTickOrder_side_get, _ama.MDBondQuotedTickOrder_side_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondQuotedTickOrder_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondQuotedTickOrder_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondQuotedTickOrder_md_stream_id_get, _ama.MDBondQuotedTickOrder_md_stream_id_set)
    __swig_setmethods__["quote_id"] = _ama.MDBondQuotedTickOrder_quote_id_set
    __swig_getmethods__["quote_id"] = _ama.MDBondQuotedTickOrder_quote_id_get
    if _newclass:quote_id = _swig_property(_ama.MDBondQuotedTickOrder_quote_id_get, _ama.MDBondQuotedTickOrder_quote_id_set)
    __swig_setmethods__["member_id"] = _ama.MDBondQuotedTickOrder_member_id_set
    __swig_getmethods__["member_id"] = _ama.MDBondQuotedTickOrder_member_id_get
    if _newclass:member_id = _swig_property(_ama.MDBondQuotedTickOrder_member_id_get, _ama.MDBondQuotedTickOrder_member_id_set)
    __swig_setmethods__["investor_type"] = _ama.MDBondQuotedTickOrder_investor_type_set
    __swig_getmethods__["investor_type"] = _ama.MDBondQuotedTickOrder_investor_type_get
    if _newclass:investor_type = _swig_property(_ama.MDBondQuotedTickOrder_investor_type_get, _ama.MDBondQuotedTickOrder_investor_type_set)
    __swig_setmethods__["investor_id"] = _ama.MDBondQuotedTickOrder_investor_id_set
    __swig_getmethods__["investor_id"] = _ama.MDBondQuotedTickOrder_investor_id_get
    if _newclass:investor_id = _swig_property(_ama.MDBondQuotedTickOrder_investor_id_get, _ama.MDBondQuotedTickOrder_investor_id_set)
    __swig_setmethods__["investor_name"] = _ama.MDBondQuotedTickOrder_investor_name_set
    __swig_getmethods__["investor_name"] = _ama.MDBondQuotedTickOrder_investor_name_get
    if _newclass:investor_name = _swig_property(_ama.MDBondQuotedTickOrder_investor_name_get, _ama.MDBondQuotedTickOrder_investor_name_set)
    __swig_setmethods__["trader_code"] = _ama.MDBondQuotedTickOrder_trader_code_set
    __swig_getmethods__["trader_code"] = _ama.MDBondQuotedTickOrder_trader_code_get
    if _newclass:trader_code = _swig_property(_ama.MDBondQuotedTickOrder_trader_code_get, _ama.MDBondQuotedTickOrder_trader_code_set)
    __swig_setmethods__["settl_period"] = _ama.MDBondQuotedTickOrder_settl_period_set
    __swig_getmethods__["settl_period"] = _ama.MDBondQuotedTickOrder_settl_period_get
    if _newclass:settl_period = _swig_property(_ama.MDBondQuotedTickOrder_settl_period_get, _ama.MDBondQuotedTickOrder_settl_period_set)
    __swig_setmethods__["settl_type"] = _ama.MDBondQuotedTickOrder_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDBondQuotedTickOrder_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDBondQuotedTickOrder_settl_type_get, _ama.MDBondQuotedTickOrder_settl_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondQuotedTickOrder_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondQuotedTickOrder_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondQuotedTickOrder_variety_category_get, _ama.MDBondQuotedTickOrder_variety_category_set)
    __swig_setmethods__["secondary_order_id"] = _ama.MDBondQuotedTickOrder_secondary_order_id_set
    __swig_getmethods__["secondary_order_id"] = _ama.MDBondQuotedTickOrder_secondary_order_id_get
    if _newclass:secondary_order_id = _swig_property(_ama.MDBondQuotedTickOrder_secondary_order_id_get, _ama.MDBondQuotedTickOrder_secondary_order_id_set)
    __swig_setmethods__["bid_trans_type"] = _ama.MDBondQuotedTickOrder_bid_trans_type_set
    __swig_getmethods__["bid_trans_type"] = _ama.MDBondQuotedTickOrder_bid_trans_type_get
    if _newclass:bid_trans_type = _swig_property(_ama.MDBondQuotedTickOrder_bid_trans_type_get, _ama.MDBondQuotedTickOrder_bid_trans_type_set)
    __swig_setmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickOrder_bid_execinst_type_set
    __swig_getmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickOrder_bid_execinst_type_get
    if _newclass:bid_execinst_type = _swig_property(_ama.MDBondQuotedTickOrder_bid_execinst_type_get, _ama.MDBondQuotedTickOrder_bid_execinst_type_set)
    __swig_setmethods__["lowlimit_price"] = _ama.MDBondQuotedTickOrder_lowlimit_price_set
    __swig_getmethods__["lowlimit_price"] = _ama.MDBondQuotedTickOrder_lowlimit_price_get
    if _newclass:lowlimit_price = _swig_property(_ama.MDBondQuotedTickOrder_lowlimit_price_get, _ama.MDBondQuotedTickOrder_lowlimit_price_set)
    __swig_setmethods__["highlimit_price"] = _ama.MDBondQuotedTickOrder_highlimit_price_set
    __swig_getmethods__["highlimit_price"] = _ama.MDBondQuotedTickOrder_highlimit_price_get
    if _newclass:highlimit_price = _swig_property(_ama.MDBondQuotedTickOrder_highlimit_price_get, _ama.MDBondQuotedTickOrder_highlimit_price_set)
    __swig_setmethods__["min_qty"] = _ama.MDBondQuotedTickOrder_min_qty_set
    __swig_getmethods__["min_qty"] = _ama.MDBondQuotedTickOrder_min_qty_get
    if _newclass:min_qty = _swig_property(_ama.MDBondQuotedTickOrder_min_qty_get, _ama.MDBondQuotedTickOrder_min_qty_set)
    __swig_setmethods__["trade_date"] = _ama.MDBondQuotedTickOrder_trade_date_set
    __swig_getmethods__["trade_date"] = _ama.MDBondQuotedTickOrder_trade_date_get
    if _newclass:trade_date = _swig_property(_ama.MDBondQuotedTickOrder_trade_date_get, _ama.MDBondQuotedTickOrder_trade_date_set)
    def __init__(self): 
        this = _ama.new_MDBondQuotedTickOrder()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondQuotedTickOrder
    __del__ = lambda self : None;
MDBondQuotedTickOrder_swigregister = _ama.MDBondQuotedTickOrder_swigregister
MDBondQuotedTickOrder_swigregister(MDBondQuotedTickOrder)

class MDBondTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondTickExecution_market_type_get, _ama.MDBondTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondTickExecution_appl_seq_num_get, _ama.MDBondTickExecution_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondTickExecution_channel_no_get, _ama.MDBondTickExecution_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondTickExecution_security_code_get, _ama.MDBondTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDBondTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDBondTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDBondTickExecution_exec_time_get, _ama.MDBondTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDBondTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDBondTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDBondTickExecution_exec_price_get, _ama.MDBondTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDBondTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDBondTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDBondTickExecution_exec_volume_get, _ama.MDBondTickExecution_exec_volume_set)
    __swig_setmethods__["value_trade"] = _ama.MDBondTickExecution_value_trade_set
    __swig_getmethods__["value_trade"] = _ama.MDBondTickExecution_value_trade_get
    if _newclass:value_trade = _swig_property(_ama.MDBondTickExecution_value_trade_get, _ama.MDBondTickExecution_value_trade_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDBondTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDBondTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDBondTickExecution_bid_appl_seq_num_get, _ama.MDBondTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDBondTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDBondTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDBondTickExecution_offer_appl_seq_num_get, _ama.MDBondTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["side"] = _ama.MDBondTickExecution_side_set
    __swig_getmethods__["side"] = _ama.MDBondTickExecution_side_get
    if _newclass:side = _swig_property(_ama.MDBondTickExecution_side_get, _ama.MDBondTickExecution_side_set)
    __swig_setmethods__["exec_type"] = _ama.MDBondTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDBondTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDBondTickExecution_exec_type_get, _ama.MDBondTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondTickExecution_md_stream_id_get, _ama.MDBondTickExecution_md_stream_id_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondTickExecution_variety_category_get, _ama.MDBondTickExecution_variety_category_set)
    def __init__(self): 
        this = _ama.new_MDBondTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondTickExecution
    __del__ = lambda self : None;
MDBondTickExecution_swigregister = _ama.MDBondTickExecution_swigregister
MDBondTickExecution_swigregister(MDBondTickExecution)

class MDBondQuotedTickExecution(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, MDBondQuotedTickExecution, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, MDBondQuotedTickExecution, name)
    __repr__ = _swig_repr
    __swig_setmethods__["market_type"] = _ama.MDBondQuotedTickExecution_market_type_set
    __swig_getmethods__["market_type"] = _ama.MDBondQuotedTickExecution_market_type_get
    if _newclass:market_type = _swig_property(_ama.MDBondQuotedTickExecution_market_type_get, _ama.MDBondQuotedTickExecution_market_type_set)
    __swig_setmethods__["appl_seq_num"] = _ama.MDBondQuotedTickExecution_appl_seq_num_set
    __swig_getmethods__["appl_seq_num"] = _ama.MDBondQuotedTickExecution_appl_seq_num_get
    if _newclass:appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_appl_seq_num_get, _ama.MDBondQuotedTickExecution_appl_seq_num_set)
    __swig_setmethods__["channel_no"] = _ama.MDBondQuotedTickExecution_channel_no_set
    __swig_getmethods__["channel_no"] = _ama.MDBondQuotedTickExecution_channel_no_get
    if _newclass:channel_no = _swig_property(_ama.MDBondQuotedTickExecution_channel_no_get, _ama.MDBondQuotedTickExecution_channel_no_set)
    __swig_setmethods__["security_code"] = _ama.MDBondQuotedTickExecution_security_code_set
    __swig_getmethods__["security_code"] = _ama.MDBondQuotedTickExecution_security_code_get
    if _newclass:security_code = _swig_property(_ama.MDBondQuotedTickExecution_security_code_get, _ama.MDBondQuotedTickExecution_security_code_set)
    __swig_setmethods__["exec_time"] = _ama.MDBondQuotedTickExecution_exec_time_set
    __swig_getmethods__["exec_time"] = _ama.MDBondQuotedTickExecution_exec_time_get
    if _newclass:exec_time = _swig_property(_ama.MDBondQuotedTickExecution_exec_time_get, _ama.MDBondQuotedTickExecution_exec_time_set)
    __swig_setmethods__["exec_price"] = _ama.MDBondQuotedTickExecution_exec_price_set
    __swig_getmethods__["exec_price"] = _ama.MDBondQuotedTickExecution_exec_price_get
    if _newclass:exec_price = _swig_property(_ama.MDBondQuotedTickExecution_exec_price_get, _ama.MDBondQuotedTickExecution_exec_price_set)
    __swig_setmethods__["exec_volume"] = _ama.MDBondQuotedTickExecution_exec_volume_set
    __swig_getmethods__["exec_volume"] = _ama.MDBondQuotedTickExecution_exec_volume_get
    if _newclass:exec_volume = _swig_property(_ama.MDBondQuotedTickExecution_exec_volume_get, _ama.MDBondQuotedTickExecution_exec_volume_set)
    __swig_setmethods__["bid_appl_seq_num"] = _ama.MDBondQuotedTickExecution_bid_appl_seq_num_set
    __swig_getmethods__["bid_appl_seq_num"] = _ama.MDBondQuotedTickExecution_bid_appl_seq_num_get
    if _newclass:bid_appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_bid_appl_seq_num_get, _ama.MDBondQuotedTickExecution_bid_appl_seq_num_set)
    __swig_setmethods__["offer_appl_seq_num"] = _ama.MDBondQuotedTickExecution_offer_appl_seq_num_set
    __swig_getmethods__["offer_appl_seq_num"] = _ama.MDBondQuotedTickExecution_offer_appl_seq_num_get
    if _newclass:offer_appl_seq_num = _swig_property(_ama.MDBondQuotedTickExecution_offer_appl_seq_num_get, _ama.MDBondQuotedTickExecution_offer_appl_seq_num_set)
    __swig_setmethods__["exec_type"] = _ama.MDBondQuotedTickExecution_exec_type_set
    __swig_getmethods__["exec_type"] = _ama.MDBondQuotedTickExecution_exec_type_get
    if _newclass:exec_type = _swig_property(_ama.MDBondQuotedTickExecution_exec_type_get, _ama.MDBondQuotedTickExecution_exec_type_set)
    __swig_setmethods__["md_stream_id"] = _ama.MDBondQuotedTickExecution_md_stream_id_set
    __swig_getmethods__["md_stream_id"] = _ama.MDBondQuotedTickExecution_md_stream_id_get
    if _newclass:md_stream_id = _swig_property(_ama.MDBondQuotedTickExecution_md_stream_id_get, _ama.MDBondQuotedTickExecution_md_stream_id_set)
    __swig_setmethods__["settl_period"] = _ama.MDBondQuotedTickExecution_settl_period_set
    __swig_getmethods__["settl_period"] = _ama.MDBondQuotedTickExecution_settl_period_get
    if _newclass:settl_period = _swig_property(_ama.MDBondQuotedTickExecution_settl_period_get, _ama.MDBondQuotedTickExecution_settl_period_set)
    __swig_setmethods__["settl_type"] = _ama.MDBondQuotedTickExecution_settl_type_set
    __swig_getmethods__["settl_type"] = _ama.MDBondQuotedTickExecution_settl_type_get
    if _newclass:settl_type = _swig_property(_ama.MDBondQuotedTickExecution_settl_type_get, _ama.MDBondQuotedTickExecution_settl_type_set)
    __swig_setmethods__["variety_category"] = _ama.MDBondQuotedTickExecution_variety_category_set
    __swig_getmethods__["variety_category"] = _ama.MDBondQuotedTickExecution_variety_category_get
    if _newclass:variety_category = _swig_property(_ama.MDBondQuotedTickExecution_variety_category_get, _ama.MDBondQuotedTickExecution_variety_category_set)
    __swig_setmethods__["secondary_order_id"] = _ama.MDBondQuotedTickExecution_secondary_order_id_set
    __swig_getmethods__["secondary_order_id"] = _ama.MDBondQuotedTickExecution_secondary_order_id_get
    if _newclass:secondary_order_id = _swig_property(_ama.MDBondQuotedTickExecution_secondary_order_id_get, _ama.MDBondQuotedTickExecution_secondary_order_id_set)
    __swig_setmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickExecution_bid_execinst_type_set
    __swig_getmethods__["bid_execinst_type"] = _ama.MDBondQuotedTickExecution_bid_execinst_type_get
    if _newclass:bid_execinst_type = _swig_property(_ama.MDBondQuotedTickExecution_bid_execinst_type_get, _ama.MDBondQuotedTickExecution_bid_execinst_type_set)
    __swig_setmethods__["margin_price"] = _ama.MDBondQuotedTickExecution_margin_price_set
    __swig_getmethods__["margin_price"] = _ama.MDBondQuotedTickExecution_margin_price_get
    if _newclass:margin_price = _swig_property(_ama.MDBondQuotedTickExecution_margin_price_get, _ama.MDBondQuotedTickExecution_margin_price_set)
    def __init__(self): 
        this = _ama.new_MDBondQuotedTickExecution()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_MDBondQuotedTickExecution
    __del__ = lambda self : None;
MDBondQuotedTickExecution_swigregister = _ama.MDBondQuotedTickExecution_swigregister
MDBondQuotedTickExecution_swigregister(MDBondQuotedTickExecution)

class Tools(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Tools, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Tools, name)
    __repr__ = _swig_repr
    __swig_getmethods__["SetUMSServers"] = lambda x: _ama.Tools_SetUMSServers
    if _newclass:SetUMSServers = staticmethod(_ama.Tools_SetUMSServers)
    __swig_getmethods__["GetUMSServers"] = lambda x: _ama.Tools_GetUMSServers
    if _newclass:GetUMSServers = staticmethod(_ama.Tools_GetUMSServers)
    __swig_getmethods__["CreateSubscribeItem"] = lambda x: _ama.Tools_CreateSubscribeItem
    if _newclass:CreateSubscribeItem = staticmethod(_ama.Tools_CreateSubscribeItem)
    __swig_getmethods__["DestroySubscribeItem"] = lambda x: _ama.Tools_DestroySubscribeItem
    if _newclass:DestroySubscribeItem = staticmethod(_ama.Tools_DestroySubscribeItem)
    __swig_getmethods__["CreateSubscribeCategoryItem"] = lambda x: _ama.Tools_CreateSubscribeCategoryItem
    if _newclass:CreateSubscribeCategoryItem = staticmethod(_ama.Tools_CreateSubscribeCategoryItem)
    __swig_getmethods__["DestroySubscribeCategoryItem"] = lambda x: _ama.Tools_DestroySubscribeCategoryItem
    if _newclass:DestroySubscribeCategoryItem = staticmethod(_ama.Tools_DestroySubscribeCategoryItem)
    __swig_getmethods__["SetSubscribeItem"] = lambda x: _ama.Tools_SetSubscribeItem
    if _newclass:SetSubscribeItem = staticmethod(_ama.Tools_SetSubscribeItem)
    __swig_getmethods__["GetSubscribeItemByIndex"] = lambda x: _ama.Tools_GetSubscribeItemByIndex
    if _newclass:GetSubscribeItemByIndex = staticmethod(_ama.Tools_GetSubscribeItemByIndex)
    __swig_getmethods__["SetSubscribeCategoryItem"] = lambda x: _ama.Tools_SetSubscribeCategoryItem
    if _newclass:SetSubscribeCategoryItem = staticmethod(_ama.Tools_SetSubscribeCategoryItem)
    __swig_getmethods__["GetSubscribeCategoryItemByIndex"] = lambda x: _ama.Tools_GetSubscribeCategoryItemByIndex
    if _newclass:GetSubscribeCategoryItemByIndex = staticmethod(_ama.Tools_GetSubscribeCategoryItemByIndex)
    __swig_getmethods__["CreateSubscribeOrderBookItem"] = lambda x: _ama.Tools_CreateSubscribeOrderBookItem
    if _newclass:CreateSubscribeOrderBookItem = staticmethod(_ama.Tools_CreateSubscribeOrderBookItem)
    __swig_getmethods__["DestroySubscribeOrderBookItem"] = lambda x: _ama.Tools_DestroySubscribeOrderBookItem
    if _newclass:DestroySubscribeOrderBookItem = staticmethod(_ama.Tools_DestroySubscribeOrderBookItem)
    __swig_getmethods__["SetSubscribeOrderBookItem"] = lambda x: _ama.Tools_SetSubscribeOrderBookItem
    if _newclass:SetSubscribeOrderBookItem = staticmethod(_ama.Tools_SetSubscribeOrderBookItem)
    __swig_getmethods__["GetSubscribeOrderBookItemByIndex"] = lambda x: _ama.Tools_GetSubscribeOrderBookItemByIndex
    if _newclass:GetSubscribeOrderBookItemByIndex = staticmethod(_ama.Tools_GetSubscribeOrderBookItemByIndex)
    __swig_getmethods__["CreateCodeTableRecordList"] = lambda x: _ama.Tools_CreateCodeTableRecordList
    if _newclass:CreateCodeTableRecordList = staticmethod(_ama.Tools_CreateCodeTableRecordList)
    __swig_getmethods__["DestroyCodeTableRecordList"] = lambda x: _ama.Tools_DestroyCodeTableRecordList
    if _newclass:DestroyCodeTableRecordList = staticmethod(_ama.Tools_DestroyCodeTableRecordList)
    __swig_getmethods__["CreateETFCodeTableRecordList"] = lambda x: _ama.Tools_CreateETFCodeTableRecordList
    if _newclass:CreateETFCodeTableRecordList = staticmethod(_ama.Tools_CreateETFCodeTableRecordList)
    __swig_getmethods__["DestroyETFCodeTableRecordList"] = lambda x: _ama.Tools_DestroyETFCodeTableRecordList
    if _newclass:DestroyETFCodeTableRecordList = staticmethod(_ama.Tools_DestroyETFCodeTableRecordList)
    __swig_getmethods__["CreateETFItem"] = lambda x: _ama.Tools_CreateETFItem
    if _newclass:CreateETFItem = staticmethod(_ama.Tools_CreateETFItem)
    __swig_getmethods__["DestroyETFItem"] = lambda x: _ama.Tools_DestroyETFItem
    if _newclass:DestroyETFItem = staticmethod(_ama.Tools_DestroyETFItem)
    __swig_getmethods__["SetETFItem"] = lambda x: _ama.Tools_SetETFItem
    if _newclass:SetETFItem = staticmethod(_ama.Tools_SetETFItem)
    __swig_getmethods__["GetETFItemByIndex"] = lambda x: _ama.Tools_GetETFItemByIndex
    if _newclass:GetETFItemByIndex = staticmethod(_ama.Tools_GetETFItemByIndex)
    __swig_getmethods__["GetInt64DataByIndex"] = lambda x: _ama.Tools_GetInt64DataByIndex
    if _newclass:GetInt64DataByIndex = staticmethod(_ama.Tools_GetInt64DataByIndex)
    __swig_getmethods__["GetDataSize"] = lambda x: _ama.Tools_GetDataSize
    if _newclass:GetDataSize = staticmethod(_ama.Tools_GetDataSize)
    __swig_getmethods__["GetDataByIndex"] = lambda x: _ama.Tools_GetDataByIndex
    if _newclass:GetDataByIndex = staticmethod(_ama.Tools_GetDataByIndex)
    __swig_getmethods__["Serialize"] = lambda x: _ama.Tools_Serialize
    if _newclass:Serialize = staticmethod(_ama.Tools_Serialize)
    __swig_getmethods__["FreeMemory"] = lambda x: _ama.Tools_FreeMemory
    if _newclass:FreeMemory = staticmethod(_ama.Tools_FreeMemory)
    __swig_getmethods__["GetEventLevelString"] = lambda x: _ama.Tools_GetEventLevelString
    if _newclass:GetEventLevelString = staticmethod(_ama.Tools_GetEventLevelString)
    __swig_getmethods__["GetEventCodeString"] = lambda x: _ama.Tools_GetEventCodeString
    if _newclass:GetEventCodeString = staticmethod(_ama.Tools_GetEventCodeString)
    def __init__(self): 
        this = _ama.new_Tools()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_Tools
    __del__ = lambda self : None;
Tools_swigregister = _ama.Tools_swigregister
Tools_swigregister(Tools)

def Tools_SetUMSServers(*args):
  return _ama.Tools_SetUMSServers(*args)
Tools_SetUMSServers = _ama.Tools_SetUMSServers

def Tools_GetUMSServers(*args):
  return _ama.Tools_GetUMSServers(*args)
Tools_GetUMSServers = _ama.Tools_GetUMSServers

def Tools_CreateSubscribeItem(*args):
  return _ama.Tools_CreateSubscribeItem(*args)
Tools_CreateSubscribeItem = _ama.Tools_CreateSubscribeItem

def Tools_DestroySubscribeItem(*args):
  return _ama.Tools_DestroySubscribeItem(*args)
Tools_DestroySubscribeItem = _ama.Tools_DestroySubscribeItem

def Tools_CreateSubscribeCategoryItem(*args):
  return _ama.Tools_CreateSubscribeCategoryItem(*args)
Tools_CreateSubscribeCategoryItem = _ama.Tools_CreateSubscribeCategoryItem

def Tools_DestroySubscribeCategoryItem(*args):
  return _ama.Tools_DestroySubscribeCategoryItem(*args)
Tools_DestroySubscribeCategoryItem = _ama.Tools_DestroySubscribeCategoryItem

def Tools_SetSubscribeItem(*args):
  return _ama.Tools_SetSubscribeItem(*args)
Tools_SetSubscribeItem = _ama.Tools_SetSubscribeItem

def Tools_GetSubscribeItemByIndex(*args):
  return _ama.Tools_GetSubscribeItemByIndex(*args)
Tools_GetSubscribeItemByIndex = _ama.Tools_GetSubscribeItemByIndex

def Tools_SetSubscribeCategoryItem(*args):
  return _ama.Tools_SetSubscribeCategoryItem(*args)
Tools_SetSubscribeCategoryItem = _ama.Tools_SetSubscribeCategoryItem

def Tools_GetSubscribeCategoryItemByIndex(*args):
  return _ama.Tools_GetSubscribeCategoryItemByIndex(*args)
Tools_GetSubscribeCategoryItemByIndex = _ama.Tools_GetSubscribeCategoryItemByIndex

def Tools_CreateSubscribeOrderBookItem(*args):
  return _ama.Tools_CreateSubscribeOrderBookItem(*args)
Tools_CreateSubscribeOrderBookItem = _ama.Tools_CreateSubscribeOrderBookItem

def Tools_DestroySubscribeOrderBookItem(*args):
  return _ama.Tools_DestroySubscribeOrderBookItem(*args)
Tools_DestroySubscribeOrderBookItem = _ama.Tools_DestroySubscribeOrderBookItem

def Tools_SetSubscribeOrderBookItem(*args):
  return _ama.Tools_SetSubscribeOrderBookItem(*args)
Tools_SetSubscribeOrderBookItem = _ama.Tools_SetSubscribeOrderBookItem

def Tools_GetSubscribeOrderBookItemByIndex(*args):
  return _ama.Tools_GetSubscribeOrderBookItemByIndex(*args)
Tools_GetSubscribeOrderBookItemByIndex = _ama.Tools_GetSubscribeOrderBookItemByIndex

def Tools_CreateCodeTableRecordList():
  return _ama.Tools_CreateCodeTableRecordList()
Tools_CreateCodeTableRecordList = _ama.Tools_CreateCodeTableRecordList

def Tools_DestroyCodeTableRecordList(*args):
  return _ama.Tools_DestroyCodeTableRecordList(*args)
Tools_DestroyCodeTableRecordList = _ama.Tools_DestroyCodeTableRecordList

def Tools_CreateETFCodeTableRecordList():
  return _ama.Tools_CreateETFCodeTableRecordList()
Tools_CreateETFCodeTableRecordList = _ama.Tools_CreateETFCodeTableRecordList

def Tools_DestroyETFCodeTableRecordList(*args):
  return _ama.Tools_DestroyETFCodeTableRecordList(*args)
Tools_DestroyETFCodeTableRecordList = _ama.Tools_DestroyETFCodeTableRecordList

def Tools_CreateETFItem(*args):
  return _ama.Tools_CreateETFItem(*args)
Tools_CreateETFItem = _ama.Tools_CreateETFItem

def Tools_DestroyETFItem(*args):
  return _ama.Tools_DestroyETFItem(*args)
Tools_DestroyETFItem = _ama.Tools_DestroyETFItem

def Tools_SetETFItem(*args):
  return _ama.Tools_SetETFItem(*args)
Tools_SetETFItem = _ama.Tools_SetETFItem

def Tools_GetETFItemByIndex(*args):
  return _ama.Tools_GetETFItemByIndex(*args)
Tools_GetETFItemByIndex = _ama.Tools_GetETFItemByIndex

def Tools_GetInt64DataByIndex(*args):
  return _ama.Tools_GetInt64DataByIndex(*args)
Tools_GetInt64DataByIndex = _ama.Tools_GetInt64DataByIndex

def Tools_GetDataSize(*args):
  return _ama.Tools_GetDataSize(*args)
Tools_GetDataSize = _ama.Tools_GetDataSize

def Tools_GetDataByIndex(*args):
  return _ama.Tools_GetDataByIndex(*args)
Tools_GetDataByIndex = _ama.Tools_GetDataByIndex

def Tools_Serialize(*args):
  return _ama.Tools_Serialize(*args)
Tools_Serialize = _ama.Tools_Serialize

def Tools_FreeMemory(*args):
  return _ama.Tools_FreeMemory(*args)
Tools_FreeMemory = _ama.Tools_FreeMemory

def Tools_GetEventLevelString(*args):
  return _ama.Tools_GetEventLevelString(*args)
Tools_GetEventLevelString = _ama.Tools_GetEventLevelString

def Tools_GetEventCodeString(*args):
  return _ama.Tools_GetEventCodeString(*args)
Tools_GetEventCodeString = _ama.Tools_GetEventCodeString

class IAMDApi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IAMDApi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IAMDApi, name)
    __repr__ = _swig_repr
    __swig_getmethods__["GetVersion"] = lambda x: _ama.IAMDApi_GetVersion
    if _newclass:GetVersion = staticmethod(_ama.IAMDApi_GetVersion)
    __swig_getmethods__["Init"] = lambda x: _ama.IAMDApi_Init
    if _newclass:Init = staticmethod(_ama.IAMDApi_Init)
    __swig_getmethods__["Join"] = lambda x: _ama.IAMDApi_Join
    if _newclass:Join = staticmethod(_ama.IAMDApi_Join)
    __swig_getmethods__["Release"] = lambda x: _ama.IAMDApi_Release
    if _newclass:Release = staticmethod(_ama.IAMDApi_Release)
    __swig_getmethods__["FreeMemory"] = lambda x: _ama.IAMDApi_FreeMemory
    if _newclass:FreeMemory = staticmethod(_ama.IAMDApi_FreeMemory)
    __swig_getmethods__["SubscribeData"] = lambda x: _ama.IAMDApi_SubscribeData
    if _newclass:SubscribeData = staticmethod(_ama.IAMDApi_SubscribeData)
    __swig_getmethods__["SubscribeOrderBookData"] = lambda x: _ama.IAMDApi_SubscribeOrderBookData
    if _newclass:SubscribeOrderBookData = staticmethod(_ama.IAMDApi_SubscribeOrderBookData)
    __swig_getmethods__["GetCodeTableList"] = lambda x: _ama.IAMDApi_GetCodeTableList
    if _newclass:GetCodeTableList = staticmethod(_ama.IAMDApi_GetCodeTableList)
    __swig_getmethods__["GetETFCodeTableList"] = lambda x: _ama.IAMDApi_GetETFCodeTableList
    if _newclass:GetETFCodeTableList = staticmethod(_ama.IAMDApi_GetETFCodeTableList)
    def __init__(self): 
        this = _ama.new_IAMDApi()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _ama.delete_IAMDApi
    __del__ = lambda self : None;
IAMDApi_swigregister = _ama.IAMDApi_swigregister
IAMDApi_swigregister(IAMDApi)

def IAMDApi_GetVersion():
  return _ama.IAMDApi_GetVersion()
IAMDApi_GetVersion = _ama.IAMDApi_GetVersion

def IAMDApi_Init(*args):
  return _ama.IAMDApi_Init(*args)
IAMDApi_Init = _ama.IAMDApi_Init

def IAMDApi_Join():
  return _ama.IAMDApi_Join()
IAMDApi_Join = _ama.IAMDApi_Join

def IAMDApi_Release():
  return _ama.IAMDApi_Release()
IAMDApi_Release = _ama.IAMDApi_Release

def IAMDApi_FreeMemory(*args):
  return _ama.IAMDApi_FreeMemory(*args)
IAMDApi_FreeMemory = _ama.IAMDApi_FreeMemory

def IAMDApi_SubscribeData(*args):
  return _ama.IAMDApi_SubscribeData(*args)
IAMDApi_SubscribeData = _ama.IAMDApi_SubscribeData

def IAMDApi_SubscribeOrderBookData(*args):
  return _ama.IAMDApi_SubscribeOrderBookData(*args)
IAMDApi_SubscribeOrderBookData = _ama.IAMDApi_SubscribeOrderBookData

def IAMDApi_GetCodeTableList(*args):
  return _ama.IAMDApi_GetCodeTableList(*args)
IAMDApi_GetCodeTableList = _ama.IAMDApi_GetCodeTableList

def IAMDApi_GetETFCodeTableList(*args):
  return _ama.IAMDApi_GetETFCodeTableList(*args)
IAMDApi_GetETFCodeTableList = _ama.IAMDApi_GetETFCodeTableList

class IAMDSpi(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, IAMDSpi, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, IAMDSpi, name)
    __repr__ = _swig_repr
    __swig_destroy__ = _ama.delete_IAMDSpi
    __del__ = lambda self : None;
    def OnLog(self, *args): return _ama.IAMDSpi_OnLog(self, *args)
    def OnIndicator(self, *args): return _ama.IAMDSpi_OnIndicator(self, *args)
    def OnEvent(self, *args): return _ama.IAMDSpi_OnEvent(self, *args)
    def OnMDSnapshot(self, *args): return _ama.IAMDSpi_OnMDSnapshot(self, *args)
    def OnMDOptionSnapshot(self, *args): return _ama.IAMDSpi_OnMDOptionSnapshot(self, *args)
    def OnMDHKTSnapshot(self, *args): return _ama.IAMDSpi_OnMDHKTSnapshot(self, *args)
    def OnMDIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDIndexSnapshot(self, *args)
    def OnMDTickOrder(self, *args): return _ama.IAMDSpi_OnMDTickOrder(self, *args)
    def OnMDTickExecution(self, *args): return _ama.IAMDSpi_OnMDTickExecution(self, *args)
    def OnMDOrderQueue(self, *args): return _ama.IAMDSpi_OnMDOrderQueue(self, *args)
    def OnMDAfterHourFixedPriceSnapshot(self, *args): return _ama.IAMDSpi_OnMDAfterHourFixedPriceSnapshot(self, *args)
    def OnMDAfterHourFixedPriceTickExecution(self, *args): return _ama.IAMDSpi_OnMDAfterHourFixedPriceTickExecution(self, *args)
    def OnMDFutureSnapshot(self, *args): return _ama.IAMDSpi_OnMDFutureSnapshot(self, *args)
    def OnMDCSIIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDCSIIndexSnapshot(self, *args)
    def OnMDIndicatorOfTradingVolumeSnapshot(self, *args): return _ama.IAMDSpi_OnMDIndicatorOfTradingVolumeSnapshot(self, *args)
    def OnMDCnIndexSnapshot(self, *args): return _ama.IAMDSpi_OnMDCnIndexSnapshot(self, *args)
    def OnMDRefinancingTickOrder(self, *args): return _ama.IAMDSpi_OnMDRefinancingTickOrder(self, *args)
    def OnMDRefinancingTickExecution(self, *args): return _ama.IAMDSpi_OnMDRefinancingTickExecution(self, *args)
    def OnMDNegotiableTickOrder(self, *args): return _ama.IAMDSpi_OnMDNegotiableTickOrder(self, *args)
    def OnMDNegotiableTickExecution(self, *args): return _ama.IAMDSpi_OnMDNegotiableTickExecution(self, *args)
    def OnMDHKTRealtimeLimit(self, *args): return _ama.IAMDSpi_OnMDHKTRealtimeLimit(self, *args)
    def OnMDHKTProductStatus(self, *args): return _ama.IAMDSpi_OnMDHKTProductStatus(self, *args)
    def OnMDHKTVCM(self, *args): return _ama.IAMDSpi_OnMDHKTVCM(self, *args)
    def OnMDNEEQSnapshot(self, *args): return _ama.IAMDSpi_OnMDNEEQSnapshot(self, *args)
    def OnMDNEEQSecurityInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQSecurityInfo(self, *args)
    def OnMDNEEQNonPublicTransDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNonPublicTransDeclaredInfo(self, *args)
    def OnMDNEEQHierarchicalInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQHierarchicalInfo(self, *args)
    def OnMDOrderBook(self, *args): return _ama.IAMDSpi_OnMDOrderBook(self, *args)
    def OnMDOrderBookSnapshot(self, *args): return _ama.IAMDSpi_OnMDOrderBookSnapshot(self, *args)
    def OnMDHKMarketStatus(self, *args): return _ama.IAMDSpi_OnMDHKMarketStatus(self, *args)
    def OnMDNEEQNegotiableDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNegotiableDeclaredInfo(self, *args)
    def OnMDNEEQMarketMakerDeclaredInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQMarketMakerDeclaredInfo(self, *args)
    def OnMDNEEQNonPublicTransferDealInfo(self, *args): return _ama.IAMDSpi_OnMDNEEQNonPublicTransferDealInfo(self, *args)
    def OnMDBondSnapshot(self, *args): return _ama.IAMDSpi_OnMDBondSnapshot(self, *args)
    def OnMDBondTickOrder(self, *args): return _ama.IAMDSpi_OnMDBondTickOrder(self, *args)
    def OnMDBondQuotedTickOrder(self, *args): return _ama.IAMDSpi_OnMDBondQuotedTickOrder(self, *args)
    def OnMDBondTickExecution(self, *args): return _ama.IAMDSpi_OnMDBondTickExecution(self, *args)
    def OnMDBondQuotedTickExecution(self, *args): return _ama.IAMDSpi_OnMDBondQuotedTickExecution(self, *args)
    def __init__(self): 
        if self.__class__ == IAMDSpi:
            _self = None
        else:
            _self = self
        this = _ama.new_IAMDSpi(_self, )
        try: self.this.append(this)
        except: self.this = this
    def __disown__(self):
        self.this.disown()
        _ama.disown_IAMDSpi(self)
        return weakref_proxy(self)
IAMDSpi_swigregister = _ama.IAMDSpi_swigregister
IAMDSpi_swigregister(IAMDSpi)

# This file is compatible with both classic and new-style classes.